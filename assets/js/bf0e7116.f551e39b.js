"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[3133],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>c});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var v=a.createContext({}),s=function(e){var n=a.useContext(v),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(v.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},N=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,v=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),N=o,c=d["".concat(v,".").concat(N)]||d[N]||m[N]||i;return t?a.createElement(c,r(r({ref:n},p),{},{components:t})):a.createElement(c,r({ref:n},p))}));function c(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=N;var l={};for(var v in n)hasOwnProperty.call(n,v)&&(l[v]=n[v]);l.originalType=e,l[d]="string"==typeof e?e:o,r[1]=l;for(var s=2;s<i;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}N.displayName="MDXCreateElement"},62543:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>v,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=t(87462),o=(t(67294),t(3905));const i={title:"Navs and tabs",description:"Documentation and examples for how to use Bootstrap\u2019s included navigation components."},r=void 0,l={unversionedId:"components/navs",id:"components/navs",title:"Navs and tabs",description:"Documentation and examples for how to use Bootstrap\u2019s included navigation components.",source:"@site/docs/components/navs.mdx",sourceDirName:"components",slug:"/components/navs",permalink:"/docs/components/navs",draft:!1,tags:[],version:"current",frontMatter:{title:"Navs and tabs",description:"Documentation and examples for how to use Bootstrap\u2019s included navigation components."},sidebar:"sidebar",previous:{title:"Navbars",permalink:"/docs/components/navbar"},next:{title:"Offcanvas",permalink:"/docs/components/offcanvas"}},v={},s=[{value:"Base Nav",id:"base-nav",level:2},{value:"Alignment and orientation",id:"alignment-and-orientation",level:2},{value:"Vertical",id:"vertical",level:3},{value:"Tabs",id:"tabs",level:2},{value:"Pills",id:"pills",level:2},{value:"Fill and justify",id:"fill-and-justify",level:2},{value:"Using dropdowns",id:"using-dropdowns",level:2},{value:"API",id:"api",level:2},{value:"Nav",id:"nav",level:3},{value:"NavItem",id:"navitem",level:3},{value:"NavLink",id:"navlink",level:3},{value:"NavDropdown",id:"navdropdown",level:3}],p=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)},d=p("CodeBlock"),m=p("PropsTable"),N={toc:s};function c(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},N,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"base-nav"},"Base Nav"),(0,o.kt)("p",null,"Navigation bits in Bootstrap all share a general ",(0,o.kt)("inlineCode",{parentName:"p"},"Nav"),"\ncomponent and styles. Swap ",(0,o.kt)("inlineCode",{parentName:"p"},"variant"),"s to switch between each\nstyle. The base ",(0,o.kt)("inlineCode",{parentName:"p"},"Nav")," component is built with flexbox and\nprovide a strong foundation for building all types of navigation\ncomponents."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The basic, variant-less, ",(0,o.kt)("inlineCode",{parentName:"p"},"Nav")," component does not include any\n",(0,o.kt)("inlineCode",{parentName:"p"},"active")," prop styling!")),(0,o.kt)(d,{language:"jsx",live:!0,mdxType:"CodeBlock"},'import Nav from \'react-bootstrap/Nav\';\n\nfunction BasicExample() {\n  return (\n    <Nav\n      activeKey="/home"\n      onSelect={(selectedKey) => alert(`selected ${selectedKey}`)}\n    >\n      <Nav.Item>\n        <Nav.Link href="/home">Active</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="link-1">Link</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="link-2">Link</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="disabled" disabled>\n          Disabled\n        </Nav.Link>\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default BasicExample;\n'),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"<Nav>")," markup is very flexible and styling is controlled via classes so you can\nuse whatever elements you like to build your navs. By default ",(0,o.kt)("inlineCode",{parentName:"p"},"<Nav>")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"<Nav.Item>")," both\nrender ",(0,o.kt)("inlineCode",{parentName:"p"},"<div>"),"s instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"<ul>")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"<li>")," elements respectively.\nThis because it's possible (and common) to leave off the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Nav.Item>"),"'s and\nrender a ",(0,o.kt)("inlineCode",{parentName:"p"},"<Nav.Link>")," directly, which would create invalid markup by default (",(0,o.kt)("inlineCode",{parentName:"p"},"ul > a"),")."),(0,o.kt)("p",null,"When a ",(0,o.kt)("inlineCode",{parentName:"p"},"<ul>")," is appropriate you can render one via the ",(0,o.kt)("inlineCode",{parentName:"p"},"as")," prop; be sure to\nalso set your items to ",(0,o.kt)("inlineCode",{parentName:"p"},"<li>")," as well!"),(0,o.kt)(d,{language:"jsx",live:!0,mdxType:"CodeBlock"},'import Nav from \'react-bootstrap/Nav\';\n\nfunction ListExample() {\n  return (\n    <Nav defaultActiveKey="/home" as="ul">\n      <Nav.Item as="li">\n        <Nav.Link href="/home">Active</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as="li">\n        <Nav.Link eventKey="link-1">Link</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as="li">\n        <Nav.Link eventKey="link-2">Link</Nav.Link>\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default ListExample;\n'),(0,o.kt)("h2",{id:"alignment-and-orientation"},"Alignment and orientation"),(0,o.kt)("p",null,"You can control the the direction and orientation of the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Nav")," by making use of the ",(0,o.kt)("a",{parentName:"p",href:"https://getbootstrap.com/docs/4.0/layout/grid/#horizontal-alignment"},"flexbox layout")," utility classes.\nBy default, navs are left-aligned, but that is easily changed to center or right-aligned."),(0,o.kt)(d,{language:"jsx",live:!0,mdxType:"CodeBlock"},'import Nav from \'react-bootstrap/Nav\';\n\nfunction AlignmentExample() {\n  return (\n    <>\n      <Nav className="justify-content-center" activeKey="/home">\n        <Nav.Item>\n          <Nav.Link href="/home">Active</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey="link-1">Link</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey="link-2">Link</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey="disabled" disabled>\n            Disabled\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n      <p className="text-center mt-4 mb-4">Or right-aligned</p>\n      <Nav className="justify-content-end" activeKey="/home">\n        <Nav.Item>\n          <Nav.Link href="/home">Active</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey="link-1">Link</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey="link-2">Link</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey="disabled" disabled>\n            Disabled\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n    </>\n  );\n}\n\nexport default AlignmentExample;\n'),(0,o.kt)("h3",{id:"vertical"},"Vertical"),(0,o.kt)("p",null,"Create stacked navs by changing the flex item direction with the\n",(0,o.kt)("inlineCode",{parentName:"p"},".flex-column")," class, or your own css. You can even use the\nresponsive versions to stack in some viewports but not others (e.g.\n",(0,o.kt)("inlineCode",{parentName:"p"},".flex-sm-column"),")."),(0,o.kt)(d,{language:"jsx",live:!0,mdxType:"CodeBlock"},'import Nav from \'react-bootstrap/Nav\';\n\nfunction StackedExample() {\n  return (\n    <Nav defaultActiveKey="/home" className="flex-column">\n      <Nav.Link href="/home">Active</Nav.Link>\n      <Nav.Link eventKey="link-1">Link</Nav.Link>\n      <Nav.Link eventKey="link-2">Link</Nav.Link>\n      <Nav.Link eventKey="disabled" disabled>\n        Disabled\n      </Nav.Link>\n    </Nav>\n  );\n}\n\nexport default StackedExample;\n'),(0,o.kt)("h2",{id:"tabs"},"Tabs"),(0,o.kt)("p",null,'Visually represent nav items as "tabs". This style pairs nicely with\ntabbable regions created by our ',(0,o.kt)("a",{parentName:"p",href:"tabs"},"Tab components"),"."),(0,o.kt)("p",null,"Note: creating a vertical nav (",(0,o.kt)("inlineCode",{parentName:"p"},".flex-column"),") with tabs styling is unsupported by Bootstrap's\ndefault stylesheet."),(0,o.kt)(d,{language:"jsx",live:!0,mdxType:"CodeBlock"},'import Nav from \'react-bootstrap/Nav\';\n\nfunction TabsExample() {\n  return (\n    <Nav variant="tabs" defaultActiveKey="/home">\n      <Nav.Item>\n        <Nav.Link href="/home">Active</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="link-1">Option 2</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="disabled" disabled>\n          Disabled\n        </Nav.Link>\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default TabsExample;\n'),(0,o.kt)("h2",{id:"pills"},"Pills"),(0,o.kt)("p",null,"An alternative visual variant."),(0,o.kt)(d,{language:"jsx",live:!0,mdxType:"CodeBlock"},'import Nav from \'react-bootstrap/Nav\';\n\nfunction PillsExample() {\n  return (\n    <Nav variant="pills" defaultActiveKey="/home">\n      <Nav.Item>\n        <Nav.Link href="/home">Active</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="link-1">Option 2</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="disabled" disabled>\n          Disabled\n        </Nav.Link>\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default PillsExample;\n'),(0,o.kt)("h2",{id:"fill-and-justify"},"Fill and justify"),(0,o.kt)("p",null,"Force the contents of your nav to extend the full available width. To\nproportionately fill the space use ",(0,o.kt)("inlineCode",{parentName:"p"},"fill"),". Notice that the\nnav is the entire width but each nav item is a different size."),(0,o.kt)(d,{language:"jsx",live:!0,mdxType:"CodeBlock"},'import Nav from \'react-bootstrap/Nav\';\n\nfunction FillExample() {\n  return (\n    <Nav fill variant="tabs" defaultActiveKey="/home">\n      <Nav.Item>\n        <Nav.Link href="/home">Active</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="link-1">Loooonger NavLink</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="link-2">Link</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="disabled" disabled>\n          Disabled\n        </Nav.Link>\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default FillExample;\n'),(0,o.kt)("p",null,"If you want each NavItem to be the same size use ",(0,o.kt)("inlineCode",{parentName:"p"},"justify"),"."),(0,o.kt)(d,{language:"jsx",live:!0,mdxType:"CodeBlock"},'import Nav from \'react-bootstrap/Nav\';\n\nfunction JustifiedExample() {\n  return (\n    <Nav justify variant="tabs" defaultActiveKey="/home">\n      <Nav.Item>\n        <Nav.Link href="/home">Active</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="link-1">Loooonger NavLink</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="link-2">Link</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="disabled" disabled>\n          Disabled\n        </Nav.Link>\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default JustifiedExample;\n'),(0,o.kt)("h2",{id:"using-dropdowns"},"Using dropdowns"),(0,o.kt)("p",null,"You can mix and match the Dropdown components with the NavLink and\nNavItem components to create a Dropdown that plays well in a Nav\ncomponent"),(0,o.kt)(d,{language:"jsx",live:!0,mdxType:"CodeBlock"},"import Dropdown from 'react-bootstrap/Dropdown';\nimport NavItem from 'react-bootstrap/NavItem';\nimport NavLink from 'react-bootstrap/NavLink';\n\nfunction DropdownImplExample() {\n  return (\n    <Dropdown as={NavItem}>\n      <Dropdown.Toggle as={NavLink}>Click to see more\u2026</Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item>Hello there!</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nexport default DropdownImplExample;\n"),(0,o.kt)("p",null,"The above demonstrates how flexible the component model can be. But if\nyou didn't want to roll your own versions we've included a\nstraight-forward ",(0,o.kt)("inlineCode",{parentName:"p"},"<NavDropdown>")," that works for most cases."),(0,o.kt)(d,{language:"jsx",live:!0,mdxType:"CodeBlock"},'import Nav from \'react-bootstrap/Nav\';\nimport NavDropdown from \'react-bootstrap/NavDropdown\';\n\nfunction NavDropdownExample() {\n  const handleSelect = (eventKey) => alert(`selected ${eventKey}`);\n\n  return (\n    <Nav variant="pills" activeKey="1" onSelect={handleSelect}>\n      <Nav.Item>\n        <Nav.Link eventKey="1" href="#/home">\n          NavLink 1 content\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="2" title="Item">\n          NavLink 2 content\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link eventKey="3" disabled>\n          NavLink 3 content\n        </Nav.Link>\n      </Nav.Item>\n      <NavDropdown title="Dropdown" id="nav-dropdown">\n        <NavDropdown.Item eventKey="4.1">Action</NavDropdown.Item>\n        <NavDropdown.Item eventKey="4.2">Another action</NavDropdown.Item>\n        <NavDropdown.Item eventKey="4.3">Something else here</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item eventKey="4.4">Separated link</NavDropdown.Item>\n      </NavDropdown>\n    </Nav>\n  );\n}\n\nexport default NavDropdownExample;\n'),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("h3",{id:"nav"},"Nav"),(0,o.kt)(m,{name:"Nav",mdxType:"PropsTable"}),(0,o.kt)("h3",{id:"navitem"},"NavItem"),(0,o.kt)(m,{name:"NavItem",mdxType:"PropsTable"}),(0,o.kt)("h3",{id:"navlink"},"NavLink"),(0,o.kt)(m,{name:"NavLink",mdxType:"PropsTable"}),(0,o.kt)("h3",{id:"navdropdown"},"NavDropdown"),(0,o.kt)(m,{name:"NavDropdown",mdxType:"PropsTable"}))}c.isMDXComponent=!0}}]);