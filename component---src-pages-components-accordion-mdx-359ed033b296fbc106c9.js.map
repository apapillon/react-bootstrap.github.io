{"version":3,"sources":["webpack:///./src/examples/Accordion/Flush.js","webpack:///./src/examples/Accordion/CustomToggle.js","webpack:///./src/examples/Accordion/ContextAwareToggle.js","webpack:///./src/components/Callout-styles.module.scss","webpack:///./src/pages/components/accordion.mdx","webpack:///./src/components/Callout.js","webpack:///./src/examples/Accordion/AllCollapse.js","webpack:///./src/examples/Accordion/AlwaysOpen.js","webpack:///./src/examples/Accordion/Basic.js"],"names":["module","exports","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","className","codeText","Basic","parentName","AllCollapse","Flush","AlwaysOpen","CustomToggle","ContextAwareToggle","metadata","data","Accordion","AccordionItem","exportedBy","AccordionHeader","AccordionBody","AccordionButton","AccordionCollapse","isMDXComponent"],"mappings":"+EAAAA,EAAOC,QAAU,u1C,qBCAjBD,EAAOC,QAAU,0+B,qBCAjBD,EAAOC,QAAU,mrC,qBCCjBD,EAAOC,QAAU,CAAC,QAAU,wCAAwC,QAAU,8EAA8E,OAAS,+E,y6BCiB9J,IAwBMC,EAAe,GACtBC,EAAc,CAClBC,MA1BmB,aA2BnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,SAAeF,GAAiBM,GAAhC,IAAuCD,WAAYA,EAAYE,QAAQ,cAM5E,wBAAQ,CACN,GAAM,cADR,aAGA,mBAAGC,UAAU,QAAb,sFAIA,wBAAQ,CACN,GAAM,aADR,YAGA,+FACA,wBAAQ,CACN,GAAM,kBADR,iBAGA,cAAC,IAAD,CAAiBC,SAAUC,IAAOH,QAAQ,oBAC1C,wBAAQ,CACN,GAAM,0BADR,yBAGA,2CAAwB,4BAAYI,WAAW,KAAvB,aAAxB,qEAAmJ,4BAAYA,WAAW,KAAvB,oBAAnJ,YAA4N,4BAAYA,WAAW,KAAvB,aAA5N,KACA,cAAC,IAAD,CAAiBF,SAAUG,IAAaL,QAAQ,oBAChD,wBAAQ,CACN,GAAM,UADR,SAGA,8BAAW,4BAAYI,WAAW,KAAvB,SAAX,kJACA,cAAC,IAAD,CAAiBF,SAAUI,IAAON,QAAQ,oBAC1C,wBAAQ,CACN,GAAM,gBADR,eAGA,0GAAuF,4BAAYI,WAAW,KAAvB,cAAvF,4FAC0D,4BAAYA,WAAW,KAAvB,aAD1D,OACuH,4BAAYA,WAAW,KAAvB,oBADvH,KAEA,cAAC,IAAD,CAAiBF,SAAUK,IAAYP,QAAQ,oBAC/C,wBAAQ,CACN,GAAM,sBADR,qBAGA,0JAC0C,4BAAYI,WAAW,KAAvB,sBAD1C,uCAGA,wBAAQ,CACN,GAAM,kBADR,iBAGA,cAAC,IAAD,CAAiBF,SAAUM,IAAcR,QAAQ,oBACjD,wBAAQ,CACN,GAAM,2CADR,0CAGA,wNAC8F,4BAAYI,WAAW,KAAvB,sBAD9F,UAEA,cAAC,IAAD,CAAiBF,SAAUO,IAAoBT,QAAQ,oBACvD,wBAAQ,CACN,GAAM,QADR,OAGA,cAAC,IAAD,CAAcU,SAAUX,EAAMY,KAAKC,UAAWZ,QAAQ,iBACtD,cAAC,IAAD,CAAcU,SAAUX,EAAMY,KAAKE,cAAeC,WAAYf,EAAMY,KAAKC,UAAWZ,QAAQ,iBAC5F,cAAC,IAAD,CAAcU,SAAUX,EAAMY,KAAKI,gBAAiBD,WAAYf,EAAMY,KAAKC,UAAWZ,QAAQ,iBAC9F,cAAC,IAAD,CAAcU,SAAUX,EAAMY,KAAKK,cAAeF,WAAYf,EAAMY,KAAKC,UAAWZ,QAAQ,iBAC5F,cAAC,IAAD,CAAcU,SAAUX,EAAMY,KAAKM,gBAAiBH,WAAYf,EAAMY,KAAKC,UAAWZ,QAAQ,iBAC9F,cAAC,IAAD,CAAcU,SAAUX,EAAMY,KAAKO,kBAAmBJ,WAAYf,EAAMY,KAAKC,UAAWZ,QAAQ,iBAChG,wBAAQ,CACN,GAAM,uBADR,sBAGA,yBAAK,wBAAMI,WAAW,OAAU,CAC5B,UAAa,gBADZ,gJAWTP,EAAWsB,gBAAiB,G,kDC5H5B,EAAe,UAuCf,IAXA,SAAiB,GAAjB,qCACA,OACA,wEACA,uDACA,uC,mBCpCA7B,EAAOC,QAAU,4zC,mBCAjBD,EAAOC,QAAU,k2C,mBCAjBD,EAAOC,QAAU","file":"component---src-pages-components-accordion-mdx-359ed033b296fbc106c9.js","sourcesContent":["module.exports = \"<Accordion defaultActiveKey=\\\"0\\\" flush>\\n  <Accordion.Item eventKey=\\\"0\\\">\\n    <Accordion.Header>Accordion Item #1</Accordion.Header>\\n    <Accordion.Body>\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\\n      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\\n      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\\n      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\\n      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n      est laborum.\\n    </Accordion.Body>\\n  </Accordion.Item>\\n  <Accordion.Item eventKey=\\\"1\\\">\\n    <Accordion.Header>Accordion Item #2</Accordion.Header>\\n    <Accordion.Body>\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\\n      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\\n      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\\n      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\\n      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n      est laborum.\\n    </Accordion.Body>\\n  </Accordion.Item>\\n</Accordion>;\\n\"","module.exports = \"function CustomToggle({ children, eventKey }) {\\n  const decoratedOnClick = useAccordionButton(eventKey, () =>\\n    console.log('totally custom!'),\\n  );\\n\\n  return (\\n    <button\\n      type=\\\"button\\\"\\n      style={{ backgroundColor: 'pink' }}\\n      onClick={decoratedOnClick}\\n    >\\n      {children}\\n    </button>\\n  );\\n}\\n\\nfunction Example() {\\n  return (\\n    <Accordion defaultActiveKey=\\\"0\\\">\\n      <Card>\\n        <Card.Header>\\n          <CustomToggle eventKey=\\\"0\\\">Click me!</CustomToggle>\\n        </Card.Header>\\n        <Accordion.Collapse eventKey=\\\"0\\\">\\n          <Card.Body>Hello! I'm the body</Card.Body>\\n        </Accordion.Collapse>\\n      </Card>\\n      <Card>\\n        <Card.Header>\\n          <CustomToggle eventKey=\\\"1\\\">Click me!</CustomToggle>\\n        </Card.Header>\\n        <Accordion.Collapse eventKey=\\\"1\\\">\\n          <Card.Body>Hello! I'm another body</Card.Body>\\n        </Accordion.Collapse>\\n      </Card>\\n    </Accordion>\\n  );\\n}\\n\\nrender(<Example />);\\n\"","module.exports = \"function ContextAwareToggle({ children, eventKey, callback }) {\\n  const { activeEventKey } = useContext(AccordionContext);\\n\\n  const decoratedOnClick = useAccordionButton(\\n    eventKey,\\n    () => callback && callback(eventKey),\\n  );\\n\\n  const isCurrentEventKey = activeEventKey === eventKey;\\n\\n  return (\\n    <button\\n      type=\\\"button\\\"\\n      style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\\n      onClick={decoratedOnClick}\\n    >\\n      {children}\\n    </button>\\n  );\\n}\\n\\nfunction Example() {\\n  return (\\n    <Accordion defaultActiveKey=\\\"0\\\">\\n      <Card>\\n        <Card.Header>\\n          <ContextAwareToggle eventKey=\\\"0\\\">Click me!</ContextAwareToggle>\\n        </Card.Header>\\n        <Accordion.Collapse eventKey=\\\"0\\\">\\n          <Card.Body>Hello! I'm the body</Card.Body>\\n        </Accordion.Collapse>\\n      </Card>\\n      <Card>\\n        <Card.Header>\\n          <ContextAwareToggle eventKey=\\\"1\\\">Click me!</ContextAwareToggle>\\n        </Card.Header>\\n        <Accordion.Collapse eventKey=\\\"1\\\">\\n          <Card.Body>Hello! I'm another body</Card.Body>\\n        </Accordion.Collapse>\\n      </Card>\\n    </Accordion>\\n  );\\n}\\n\\nrender(<Example />);\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"callout\":\"Callout-styles-module--callout--1_K3h\",\"warning\":\"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h\",\"danger\":\"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport Callout from '../../components/Callout';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport Basic from '../../examples/Accordion/Basic';\nimport AllCollapse from '../../examples/Accordion/AllCollapse';\nimport Flush from '../../examples/Accordion/Flush';\nimport AlwaysOpen from '../../examples/Accordion/AlwaysOpen';\nimport CustomToggle from '../../examples/Accordion/CustomToggle.js';\nimport ContextAwareToggle from '../../examples/Accordion/ContextAwareToggle.js';\nexport const query = graphql`\n  query AccordionQuery {\n    Accordion: componentMetadata(displayName: { eq: \"Accordion\" }) {\n      ...ComponentApi_metadata\n    }\n    AccordionItem: componentMetadata(displayName: { eq: \"AccordionItem\" }) {\n      ...ComponentApi_metadata\n    }\n    AccordionHeader: componentMetadata(displayName: { eq: \"AccordionHeader\" }) {\n      ...ComponentApi_metadata\n    }\n    AccordionBody: componentMetadata(displayName: { eq: \"AccordionBody\" }) {\n      ...ComponentApi_metadata\n    }\n    AccordionButton: componentMetadata(displayName: { eq: \"AccordionButton\" }) {\n      ...ComponentApi_metadata\n    }\n    AccordionCollapse: componentMetadata(\n      displayName: { eq: \"AccordionCollapse\" }\n    ) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"accordion\"\n    }}>{`Accordion`}</h1>\n    <p className=\"lead\">\n  Build vertically collapsing accordions in combination with the Collapse\n  component.\n    </p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`Click the accordions below to expand/collapse the accordion content.`}</p>\n    <h3 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic Example`}</h3>\n    <ReactPlayground codeText={Basic} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"fully-collapsed-state\"\n    }}>{`Fully Collapsed State`}</h3>\n    <p>{`If you want your `}<inlineCode parentName=\"p\">{`Accordion`}</inlineCode>{` to start in a fully-collapsed state, then simply don't pass in a `}<inlineCode parentName=\"p\">{`defaultActiveKey`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`Accordion`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={AllCollapse} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"flush\"\n    }}>{`Flush`}</h3>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`flush`}</inlineCode>{` to remove the default background-color, some borders, and some rounded corners to render accordions edge-to-edge with their parent container.`}</p>\n    <ReactPlayground codeText={Flush} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"always-open\"\n    }}>{`Always open`}</h3>\n    <p>{`You can make accordion items stay open when another item is opened by using the `}<inlineCode parentName=\"p\">{`alwaysOpen`}</inlineCode>{` prop. If you're looking to\ncontrol the component, you must use an array of strings for `}<inlineCode parentName=\"p\">{`activeKey`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`defaultActiveKey`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={AlwaysOpen} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"custom-accordions\"\n    }}>{`Custom Accordions`}</h2>\n    <p>{`You can still create card-based accordions like those in Bootstrap 4. You can hook\ninto the Accordion toggle functionality via `}<inlineCode parentName=\"p\">{`useAccordionButton`}</inlineCode>{` to make custom\ntoggle components.`}</p>\n    <h3 {...{\n      \"id\": \"custom-toggle\"\n    }}>{`Custom Toggle`}</h3>\n    <ReactPlayground codeText={CustomToggle} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"custom-toggle-with-expansion-awareness\"\n    }}>{`Custom Toggle with Expansion Awareness`}</h3>\n    <p>{`You may wish to have different styles for the toggle if it's associated section is expanded,\nthis can be achieved with a custom toggle that is context aware and also takes advantage of the `}<inlineCode parentName=\"p\">{`useAccordionButton`}</inlineCode>{` hook.`}</p>\n    <ReactPlayground codeText={ContextAwareToggle} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.Accordion} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.AccordionItem} exportedBy={props.data.Accordion} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.AccordionHeader} exportedBy={props.data.Accordion} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.AccordionBody} exportedBy={props.data.Accordion} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.AccordionButton} exportedBy={props.data.Accordion} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.AccordionCollapse} exportedBy={props.data.Accordion} mdxType=\"ComponentApi\" />\n    <h3 {...{\n      \"id\": \"useaccordionbutton\"\n    }}>{`useAccordionButton`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { useAccordionButton } from 'react-bootstrap/AccordionButton';\n\nconst decoratedOnClick = useAccordionButton(eventKey, onClick);\n`}</code></pre>\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PropTypes from 'prop-types';\n\nimport { css } from 'astroturf';\n\nconst styles = css`\n  @import '../css/theme';\n\n  .callout {\n    border-left: 4px solid transparent;\n    padding: 1.2rem 1.2rem 1.2rem calc(1rem - 4px);\n    margin-left: -1rem;\n    margin-bottom: 2rem;\n  }\n\n  .warning {\n    composes: callout;\n    background-color: transparentize($note, 0.7);\n    border-left-color: $note;\n  }\n  .danger {\n    composes: callout;\n    background-color: transparentize($error, 0.7);\n    border-left-color: $error;\n  }\n`;\n\nconst propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n  theme: PropTypes.oneOf(['danger', 'warning']),\n};\n\nfunction Callout({ title, children, theme }) {\n  return (\n    <aside role=\"note\" className={styles[theme || 'warning']}>\n      {title && <header className=\"h5\">{title}</header>}\n      <div>{children}</div>\n    </aside>\n  );\n}\n\nCallout.propTypes = propTypes;\n\nexport default Callout;\n","module.exports = \"<Accordion>\\n  <Accordion.Item eventKey=\\\"0\\\">\\n    <Accordion.Header>Accordion Item #1</Accordion.Header>\\n    <Accordion.Body>\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\\n      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\\n      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\\n      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\\n      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n      est laborum.\\n    </Accordion.Body>\\n  </Accordion.Item>\\n  <Accordion.Item eventKey=\\\"1\\\">\\n    <Accordion.Header>Accordion Item #2</Accordion.Header>\\n    <Accordion.Body>\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\\n      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\\n      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\\n      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\\n      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n      est laborum.\\n    </Accordion.Body>\\n  </Accordion.Item>\\n</Accordion>;\\n\"","module.exports = \"<Accordion defaultActiveKey={['0']} alwaysOpen>\\n  <Accordion.Item eventKey=\\\"0\\\">\\n    <Accordion.Header>Accordion Item #1</Accordion.Header>\\n    <Accordion.Body>\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\\n      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\\n      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\\n      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\\n      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n      est laborum.\\n    </Accordion.Body>\\n  </Accordion.Item>\\n  <Accordion.Item eventKey=\\\"1\\\">\\n    <Accordion.Header>Accordion Item #2</Accordion.Header>\\n    <Accordion.Body>\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\\n      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\\n      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\\n      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\\n      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n      est laborum.\\n    </Accordion.Body>\\n  </Accordion.Item>\\n</Accordion>;\\n\"","module.exports = \"<Accordion defaultActiveKey=\\\"0\\\">\\n  <Accordion.Item eventKey=\\\"0\\\">\\n    <Accordion.Header>Accordion Item #1</Accordion.Header>\\n    <Accordion.Body>\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\\n      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\\n      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\\n      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\\n      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n      est laborum.\\n    </Accordion.Body>\\n  </Accordion.Item>\\n  <Accordion.Item eventKey=\\\"1\\\">\\n    <Accordion.Header>Accordion Item #2</Accordion.Header>\\n    <Accordion.Body>\\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\\n      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\\n      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\\n      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\\n      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\\n      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n      est laborum.\\n    </Accordion.Body>\\n  </Accordion.Item>\\n</Accordion>;\\n\""],"sourceRoot":""}