{"version":3,"sources":["webpack:///./src/examples/ButtonGroup/Nested.js","webpack:///./src/examples/ButtonGroup/Vertical.js","webpack:///./src/examples/ButtonGroup/ToolbarBasic.js","webpack:///./src/examples/ButtonGroup/Toolbar.js","webpack:///./src/examples/ButtonGroup/Sizes.js","webpack:///./src/examples/ButtonGroup/Basic.js","webpack:///./src/pages/components/button-group.mdx"],"names":["module","exports","name","_frontmatter","PageHeader","props","console","warn","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","mdxType","title","subTitle","parentName","codeText","ButtonGroupBasic","ButtonToolbarBasic","ButtonToolbar","ButtonGroupSizes","ButtonGroupNested","ButtonGroupVertical","metadata","data","ButtonGroup","isMDXComponent"],"mappings":"+EAAAA,EAAOC,QAAU,0kB,mBCAjBD,EAAOC,QAAU,szC,mBCAjBD,EAAOC,QAAU,ixB,mBCAjBD,EAAOC,QAAU,y0D,mBCAjBD,EAAOC,QAAU,osB,mBCAjBD,EAAOC,QAAU,wZ,kIC+BKC,E,mOAFTC,EAAe,GAOtBC,GALgBF,EAKW,aALH,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,oBAASG,KAIZG,EAAc,CAClBC,MArBmB,YAsBnBN,gBAEIO,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGR,EACF,iBACD,OAAO,cAACK,EAAD,eAAeF,EAAiBH,EAAhC,CAAuCQ,WAAYA,EAAYC,QAAQ,cAK5E,cAACV,EAAD,CAAYW,MAAM,eAAeC,SAAS,0FAA0FF,QAAQ,eAC5I,oBACE,GAAM,iBADR,iBAGA,2CAAwB,4BAAYG,WAAW,KAAvB,YAAxB,UAAuF,4BAAYA,WAAW,KAAvB,iBAAvF,KACA,cAAC,IAAD,CAAiBC,SAAUC,IAAkBL,QAAQ,oBACrD,oBACE,GAAM,kBADR,kBAGA,0CAAuB,4BAAYG,WAAW,KAAvB,iBAAvB,YAA6F,4BAAYA,WAAW,KAAvB,mBAA7F,iCACA,cAAC,IAAD,CAAiBC,SAAUE,IAAoBN,QAAQ,oBACvD,gMAGA,cAAC,IAAD,CAAiBI,SAAUG,IAAeP,QAAQ,oBAClD,oBACE,GAAM,UADR,UAGA,wGACE,4BAAYG,WAAW,KAAvB,QADF,gBACmE,4BAAYA,WAAW,KAAvB,iBADnE,KAEA,cAAC,IAAD,CAAiBC,SAAUI,IAAkBR,QAAQ,oBACrD,oBACE,GAAM,WADR,WAGA,uEACF,4BAAYG,WAAW,KAAvB,iBADE,SACiE,4BAAYA,WAAW,KAAvB,oBADjE,MAEA,cAAC,IAAD,CAAiBC,SAAUK,IAAmBT,QAAQ,oBACtD,oBACE,GAAM,sBADR,sBAGA,+GACsB,4BAAYG,WAAW,KAAvB,YADtB,WACsF,4BAAYA,WAAW,KAAvB,iBADtF,MAEF,wBAAQA,WAAW,KAAnB,mDACE,cAAC,IAAD,CAAiBC,SAAUM,IAAqBV,QAAQ,oBACxD,oBACE,GAAM,OADR,OAGA,cAAC,IAAD,CAAcW,SAAUpB,EAAMqB,KAAKC,YAAab,QAAQ,iBACxD,cAAC,IAAD,CAAcW,SAAUpB,EAAMqB,KAAKL,cAAeP,QAAQ,iBAE1D,6BAKJF,EAAWgB,gBAAiB","file":"component---src-pages-components-button-group-mdx-620c990cbaef8b0c536e.js","sourcesContent":["module.exports = \"import Button from 'react-bootstrap/Button';\\nimport DropdownButton from 'react-bootstrap/DropdownButton';\\nimport Dropdown from 'react-bootstrap/Dropdown';\\n\\nfunction NestedExample() {\\n  return (\\n    <ButtonGroup>\\n      <Button>1</Button>\\n      <Button>2</Button>\\n\\n      <DropdownButton as={ButtonGroup} title=\\\"Dropdown\\\" id=\\\"bg-nested-dropdown\\\">\\n        <Dropdown.Item eventKey=\\\"1\\\">Dropdown link</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Dropdown link</Dropdown.Item>\\n      </DropdownButton>\\n    </ButtonGroup>\\n  );\\n}\\n\\nexport default NestedExample;\\n\"","module.exports = \"import Button from 'react-bootstrap/Button';\\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\\nimport Dropdown from 'react-bootstrap/Dropdown';\\nimport DropdownButton from 'react-bootstrap/DropdownButton';\\n\\nfunction VerticalExample() {\\n  return (\\n    <ButtonGroup vertical>\\n      <Button>Button</Button>\\n      <Button>Button</Button>\\n\\n      <DropdownButton\\n        as={ButtonGroup}\\n        title=\\\"Dropdown\\\"\\n        id=\\\"bg-vertical-dropdown-1\\\"\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Dropdown link</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Dropdown link</Dropdown.Item>\\n      </DropdownButton>\\n\\n      <Button>Button</Button>\\n      <Button>Button</Button>\\n\\n      <DropdownButton\\n        as={ButtonGroup}\\n        title=\\\"Dropdown\\\"\\n        id=\\\"bg-vertical-dropdown-2\\\"\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Dropdown link</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Dropdown link</Dropdown.Item>\\n      </DropdownButton>\\n\\n      <DropdownButton\\n        as={ButtonGroup}\\n        title=\\\"Dropdown\\\"\\n        id=\\\"bg-vertical-dropdown-3\\\"\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Dropdown link</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Dropdown link</Dropdown.Item>\\n      </DropdownButton>\\n    </ButtonGroup>\\n  );\\n}\\n\\nexport default VerticalExample;\\n\"","module.exports = \"import Button from 'react-bootstrap/Button';\\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\\n\\nfunction ToolbarBasicExample() {\\n  return (\\n    <ButtonToolbar aria-label=\\\"Toolbar with button groups\\\">\\n      <ButtonGroup className=\\\"me-2\\\" aria-label=\\\"First group\\\">\\n        <Button>1</Button> <Button>2</Button> <Button>3</Button>{' '}\\n        <Button>4</Button>\\n      </ButtonGroup>\\n      <ButtonGroup className=\\\"me-2\\\" aria-label=\\\"Second group\\\">\\n        <Button>5</Button> <Button>6</Button> <Button>7</Button>\\n      </ButtonGroup>\\n      <ButtonGroup aria-label=\\\"Third group\\\">\\n        <Button>8</Button>\\n      </ButtonGroup>\\n    </ButtonToolbar>\\n  );\\n}\\n\\nexport default ToolbarBasicExample;\\n\"","module.exports = \"import Button from 'react-bootstrap/Button';\\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\\nimport Form from 'react-bootstrap/Form';\\nimport InputGroup from 'react-bootstrap/InputGroup';\\n\\nfunction ToolbarExample() {\\n  return (\\n    <>\\n      <ButtonToolbar className=\\\"mb-3\\\" aria-label=\\\"Toolbar with Button groups\\\">\\n        <ButtonGroup className=\\\"me-2\\\" aria-label=\\\"First group\\\">\\n          <Button variant=\\\"secondary\\\">1</Button>{' '}\\n          <Button variant=\\\"secondary\\\">2</Button>{' '}\\n          <Button variant=\\\"secondary\\\">3</Button>{' '}\\n          <Button variant=\\\"secondary\\\">4</Button>\\n        </ButtonGroup>\\n        <InputGroup>\\n          <InputGroup.Text id=\\\"btnGroupAddon\\\">@</InputGroup.Text>\\n          <Form.Control\\n            type=\\\"text\\\"\\n            placeholder=\\\"Input group example\\\"\\n            aria-label=\\\"Input group example\\\"\\n            aria-describedby=\\\"btnGroupAddon\\\"\\n          />\\n        </InputGroup>\\n      </ButtonToolbar>\\n\\n      <ButtonToolbar\\n        className=\\\"justify-content-between\\\"\\n        aria-label=\\\"Toolbar with Button groups\\\"\\n      >\\n        <ButtonGroup aria-label=\\\"First group\\\">\\n          <Button variant=\\\"secondary\\\">1</Button>{' '}\\n          <Button variant=\\\"secondary\\\">2</Button>{' '}\\n          <Button variant=\\\"secondary\\\">3</Button>{' '}\\n          <Button variant=\\\"secondary\\\">4</Button>\\n        </ButtonGroup>\\n        <InputGroup>\\n          <InputGroup.Text id=\\\"btnGroupAddon2\\\">@</InputGroup.Text>\\n          <Form.Control\\n            type=\\\"text\\\"\\n            placeholder=\\\"Input group example\\\"\\n            aria-label=\\\"Input group example\\\"\\n            aria-describedby=\\\"btnGroupAddon2\\\"\\n          />\\n        </InputGroup>\\n      </ButtonToolbar>\\n    </>\\n  );\\n}\\n\\nexport default ToolbarExample;\\n\"","module.exports = \"import Button from 'react-bootstrap/Button';\\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\\n\\nfunction SizesExample() {\\n  return (\\n    <>\\n      <ButtonGroup size=\\\"lg\\\" className=\\\"mb-2\\\">\\n        <Button>Left</Button>\\n        <Button>Middle</Button>\\n        <Button>Right</Button>\\n      </ButtonGroup>\\n      <br />\\n      <ButtonGroup className=\\\"mb-2\\\">\\n        <Button>Left</Button>\\n        <Button>Middle</Button>\\n        <Button>Right</Button>\\n      </ButtonGroup>\\n      <br />\\n      <ButtonGroup size=\\\"sm\\\">\\n        <Button>Left</Button>\\n        <Button>Middle</Button>\\n        <Button>Right</Button>\\n      </ButtonGroup>\\n    </>\\n  );\\n}\\n\\nexport default SizesExample;\\n\"","module.exports = \"import Button from 'react-bootstrap/Button';\\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\\n\\nfunction BasicExample() {\\n  return (\\n    <ButtonGroup aria-label=\\\"Basic example\\\">\\n      <Button variant=\\\"secondary\\\">Left</Button>\\n      <Button variant=\\\"secondary\\\">Middle</Button>\\n      <Button variant=\\\"secondary\\\">Right</Button>\\n    </ButtonGroup>\\n  );\\n}\\n\\nexport default BasicExample;\\n\"","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport ButtonGroupBasic from '../../examples/ButtonGroup/Basic';\nimport ButtonGroupNested from '../../examples/ButtonGroup/Nested';\nimport ButtonGroupSizes from '../../examples/ButtonGroup/Sizes';\nimport ButtonToolbar from '../../examples/ButtonGroup/Toolbar';\nimport ButtonToolbarBasic from '../../examples/ButtonGroup/ToolbarBasic';\nimport ButtonGroupVertical from '../../examples/ButtonGroup/Vertical';\nexport const query = graphql`\n  query ButtonGroupQuery {\n    ButtonGroup: componentMetadata(displayName: { eq: \"ButtonGroup\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n    ButtonToolbar: componentMetadata(displayName: { eq: \"ButtonToolbar\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageHeader = makeShortcode(\"PageHeader\");\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <PageHeader title=\"Button group\" subTitle=\"Group a series of buttons together on a single line or stack them in a vertical column.\" mdxType=\"PageHeader\" />\n    <h2 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic example`}</h2>\n    <p>{`Wrap a series of `}<inlineCode parentName=\"p\">{`<Button>`}</inlineCode>{`s in a `}<inlineCode parentName=\"p\">{`<ButtonGroup>`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={ButtonGroupBasic} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"button-toolbar\"\n    }}>{`Button toolbar`}</h2>\n    <p>{`Combine sets of `}<inlineCode parentName=\"p\">{`<ButtonGroup>`}</inlineCode>{`s into a `}<inlineCode parentName=\"p\">{`<ButtonToolbar>`}</inlineCode>{` for more complex components.`}</p>\n    <ReactPlayground codeText={ButtonToolbarBasic} mdxType=\"ReactPlayground\" />\n    <p>{`Feel free to mix input groups with button groups in your toolbars.\nSimilar to the example above, you’ll likely need some utilities though\nto space things properly.`}</p>\n    <ReactPlayground codeText={ButtonToolbar} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"sizing\"\n    }}>{`Sizing`}</h2>\n    <p>{`Instead of applying button sizing props to every button in a group, just\nadd `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` prop to the `}<inlineCode parentName=\"p\">{`<ButtonGroup>`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={ButtonGroupSizes} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"nesting\"\n    }}>{`Nesting`}</h2>\n    <p>{`You can place other button types within the\n`}<inlineCode parentName=\"p\">{`<ButtonGroup>`}</inlineCode>{` like `}<inlineCode parentName=\"p\">{`<DropdownButton>`}</inlineCode>{`s.`}</p>\n    <ReactPlayground codeText={ButtonGroupNested} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"vertical-variation\"\n    }}>{`Vertical variation`}</h2>\n    <p>{`Make a set of buttons appear vertically stacked rather than\nhorizontally, by adding `}<inlineCode parentName=\"p\">{`vertical`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`<ButtonGroup>`}</inlineCode>{`.\n`}<strong parentName=\"p\">{`Split button dropdowns are not supported here.`}</strong></p>\n    <ReactPlayground codeText={ButtonGroupVertical} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.ButtonGroup} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.ButtonToolbar} mdxType=\"ComponentApi\" />\n\n    <p>{`;`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}