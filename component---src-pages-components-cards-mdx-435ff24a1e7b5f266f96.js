(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{"0kG2":function(e,a){e.exports='<Card style={{ width: \'18rem\' }}>\n  <Card.Img variant="top" src="holder.js/100px180?text=Image cap" />\n  <Card.Body>\n    <Card.Title>Card Title</Card.Title>\n    <Card.Text>\n      Some quick example text to build on the card title and make up the bulk of\n      the card\'s content.\n    </Card.Text>\n  </Card.Body>\n  <ListGroup className="list-group-flush">\n    <ListGroupItem>Cras justo odio</ListGroupItem>\n    <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\n    <ListGroupItem>Vestibulum at eros</ListGroupItem>\n  </ListGroup>\n  <Card.Body>\n    <Card.Link href="#">Card Link</Card.Link>\n    <Card.Link href="#">Another Link</Card.Link>\n  </Card.Body>\n</Card>;\n'},"4W2T":function(e,a){e.exports='<CardColumns>\n  <Card>\n    <Card.Img variant="top" src="holder.js/100px160" />\n    <Card.Body>\n      <Card.Title>Card title that wraps to a new line</Card.Title>\n      <Card.Text>\n        This is a longer card with supporting text below as a natural lead-in to\n        additional content. This content is a little bit longer.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <Card className="p-3">\n    <blockquote className="blockquote mb-0 card-body">\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\n        erat a ante.\n      </p>\n      <footer className="blockquote-footer">\n        <small className="text-muted">\n          Someone famous in <cite title="Source Title">Source Title</cite>\n        </small>\n      </footer>\n    </blockquote>\n  </Card>\n  <Card>\n    <Card.Img variant="top" src="holder.js/100px160" />\n    <Card.Body>\n      <Card.Title>Card title</Card.Title>\n      <Card.Text>\n        This card has supporting text below as a natural lead-in to additional\n        content.{\' \'}\n      </Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small className="text-muted">Last updated 3 mins ago</small>\n    </Card.Footer>\n  </Card>\n  <Card bg="primary" text="white" className="text-center p-3">\n    <blockquote className="blockquote mb-0 card-body">\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\n        erat a ante.\n      </p>\n      <footer className="blockquote-footer">\n        <small className="text-muted">\n          Someone famous in <cite title="Source Title">Source Title</cite>\n        </small>\n      </footer>\n    </blockquote>\n  </Card>\n  <Card className="text-center">\n    <Card.Body>\n      <Card.Title>Card title</Card.Title>\n      <Card.Text>\n        This card has supporting text below as a natural lead-in to additional\n        content.{\' \'}\n      </Card.Text>\n      <Card.Text>\n        <small className="text-muted">Last updated 3 mins ago</small>\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <Card>\n    <Card.Img src="holder.js/100px160" />\n  </Card>\n  <Card className="text-end">\n    <blockquote className="blockquote mb-0 card-body">\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\n        erat a ante.\n      </p>\n      <footer className="blockquote-footer">\n        <small className="text-muted">\n          Someone famous in <cite title="Source Title">Source Title</cite>\n        </small>\n      </footer>\n    </blockquote>\n  </Card>\n  <Card>\n    <Card.Body>\n      <Card.Title>Card title</Card.Title>\n      <Card.Text>\n        This is a wider card with supporting text below as a natural lead-in to\n        additional content. This card has even longer content than the first to\n        show that equal height action.\n      </Card.Text>\n      <Card.Text>\n        <small className="text-muted">Last updated 3 mins ago</small>\n      </Card.Text>\n    </Card.Body>\n  </Card>\n</CardColumns>;\n'},"7oUc":function(e,a){e.exports='<>\n  <Card>\n    <Card.Img variant="top" src="holder.js/100px180" />\n    <Card.Body>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk\n        of the card\'s content.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <br />\n  <Card>\n    <Card.Body>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk\n        of the card\'s content.\n      </Card.Text>\n    </Card.Body>\n    <Card.Img variant="bottom" src="holder.js/100px180" />\n  </Card>\n</>;\n'},BUu4:function(e,a){e.exports='<Card>\n  <Card.Header>\n    <Nav variant="pills" defaultActiveKey="#first">\n      <Nav.Item>\n        <Nav.Link href="#first">Active</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link href="#link">Link</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link href="#disabled" disabled>\n          Disabled\n        </Nav.Link>\n      </Nav.Item>\n    </Nav>\n  </Card.Header>\n  <Card.Body>\n    <Card.Title>Special title treatment</Card.Title>\n    <Card.Text>\n      With supporting text below as a natural lead-in to additional content.\n    </Card.Text>\n    <Button variant="primary">Go somewhere</Button>\n  </Card.Body>\n</Card>;\n'},"DIM/":function(e,a){e.exports="<Card body>This is some text within a card body.</Card>;\n"},HDCu:function(e,a){e.exports="<>\n  <Card border=\"primary\" style={{ width: '18rem' }}>\n    <Card.Header>Header</Card.Header>\n    <Card.Body>\n      <Card.Title>Primary Card Title</Card.Title>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <br />\n\n  <Card border=\"secondary\" style={{ width: '18rem' }}>\n    <Card.Header>Header</Card.Header>\n    <Card.Body>\n      <Card.Title>Secondary Card Title</Card.Title>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <br />\n\n  <Card border=\"success\" style={{ width: '18rem' }}>\n    <Card.Header>Header</Card.Header>\n    <Card.Body>\n      <Card.Title>Success Card Title</Card.Title>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <br />\n\n  <Card border=\"danger\" style={{ width: '18rem' }}>\n    <Card.Header>Header</Card.Header>\n    <Card.Body>\n      <Card.Title>Danger Card Title</Card.Title>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <br />\n\n  <Card border=\"warning\" style={{ width: '18rem' }}>\n    <Card.Header>Header</Card.Header>\n    <Card.Body>\n      <Card.Title>Warning Card Title</Card.Title>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <br />\n\n  <Card border=\"info\" style={{ width: '18rem' }}>\n    <Card.Header>Header</Card.Header>\n    <Card.Body>\n      <Card.Title>Info Card Title</Card.Title>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <br />\n\n  <Card border=\"dark\" style={{ width: '18rem' }}>\n    <Card.Header>Header</Card.Header>\n    <Card.Body>\n      <Card.Title>Dark Card Title</Card.Title>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <br />\n\n  <Card border=\"light\" style={{ width: '18rem' }}>\n    <Card.Header>Header</Card.Header>\n    <Card.Body>\n      <Card.Title>Light Card Title</Card.Title>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <br />\n</>;\n"},OKz5:function(e,a){e.exports='<CardGroup>\n  <Card>\n    <Card.Img variant="top" src="holder.js/100px160" />\n    <Card.Body>\n      <Card.Title>Card title</Card.Title>\n      <Card.Text>\n        This is a wider card with supporting text below as a natural lead-in to\n        additional content. This content is a little bit longer.\n      </Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small className="text-muted">Last updated 3 mins ago</small>\n    </Card.Footer>\n  </Card>\n  <Card>\n    <Card.Img variant="top" src="holder.js/100px160" />\n    <Card.Body>\n      <Card.Title>Card title</Card.Title>\n      <Card.Text>\n        This card has supporting text below as a natural lead-in to additional\n        content.{\' \'}\n      </Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small className="text-muted">Last updated 3 mins ago</small>\n    </Card.Footer>\n  </Card>\n  <Card>\n    <Card.Img variant="top" src="holder.js/100px160" />\n    <Card.Body>\n      <Card.Title>Card title</Card.Title>\n      <Card.Text>\n        This is a wider card with supporting text below as a natural lead-in to\n        additional content. This card has even longer content than the first to\n        show that equal height action.\n      </Card.Text>\n    </Card.Body>\n    <Card.Footer>\n      <small className="text-muted">Last updated 3 mins ago</small>\n    </Card.Footer>\n  </Card>\n</CardGroup>;\n'},RhDa:function(e,a){e.exports='<Card className="text-center">\n  <Card.Header>Featured</Card.Header>\n  <Card.Body>\n    <Card.Title>Special title treatment</Card.Title>\n    <Card.Text>\n      With supporting text below as a natural lead-in to additional content.\n    </Card.Text>\n    <Button variant="primary">Go somewhere</Button>\n  </Card.Body>\n  <Card.Footer className="text-muted">2 days ago</Card.Footer>\n</Card>;\n'},Udn9:function(e,a){e.exports='<Card style={{ width: \'18rem\' }}>\n  <Card.Body>\n    <Card.Title>Card Title</Card.Title>\n    <Card.Subtitle className="mb-2 text-muted">Card Subtitle</Card.Subtitle>\n    <Card.Text>\n      Some quick example text to build on the card title and make up the bulk of\n      the card\'s content.\n    </Card.Text>\n    <Card.Link href="#">Card Link</Card.Link>\n    <Card.Link href="#">Another Link</Card.Link>\n  </Card.Body>\n</Card>;\n'},ViFY:function(e,a){e.exports="<Card>\n  <Card.Body>This is some text within a card body.</Card.Body>\n</Card>;\n"},Vomx:function(e,a){e.exports='<Card>\n  <Card.Header>\n    <Nav variant="tabs" defaultActiveKey="#first">\n      <Nav.Item>\n        <Nav.Link href="#first">Active</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link href="#link">Link</Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link href="#disabled" disabled>\n          Disabled\n        </Nav.Link>\n      </Nav.Item>\n    </Nav>\n  </Card.Header>\n  <Card.Body>\n    <Card.Title>Special title treatment</Card.Title>\n    <Card.Text>\n      With supporting text below as a natural lead-in to additional content.\n    </Card.Text>\n    <Button variant="primary">Go somewhere</Button>\n  </Card.Body>\n</Card>;\n'},X8fs:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return _})),t.d(a,"default",(function(){return ee}));var n=t("rePB"),d=t("zLVn"),r=(t("mXGw"),t("7ljp")),o=t("Snbm"),i=t("vXRK"),l=(t("+xvc"),t("1u5/")),s=t("dep0"),c=t.n(s),m=t("aIFH"),C=t.n(m),p=t("ViFY"),u=t.n(p),x=t("DIM/"),b=t.n(x),T=t("HDCu"),h=t.n(T),y=t("4W2T"),g=t.n(y),j=t("jNNs"),k=t.n(j),f=t("OKz5"),O=t.n(f),B=t("RhDa"),w=t.n(B),N=t("7oUc"),v=t.n(N),L=t("XHYQ"),I=t.n(L),H=t("0kG2"),S=t.n(H),G=t("tNN+"),q=t.n(G),P=t("bqMX"),R=t.n(P),A=t("BUu4"),D=t.n(A),F=t("Vomx"),U=t.n(F),W=t("Udn9"),X=t.n(W),V=t("bUoF"),z=t.n(V),K=t("kJQm"),M=t.n(K),Y=t("wzki"),Q=t.n(Y);function J(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function E(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?J(Object(t),!0).forEach((function(a){Object(n.a)(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):J(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}var _={},Z={query:"1818129158",_frontmatter:_},$=o.a;function ee(e){var a=e.components,t=Object(d.a)(e,["components"]);return Object(r.mdx)($,E(E(E({},Z),t),{},{components:a,mdxType:"MDXLayout"}),Object(r.mdx)("h1",E({},{id:"cards"}),"Cards"),Object(r.mdx)("p",{className:"lead"},"Bootstrap’s cards provide a flexible and extensible content container with multiple variants and options."),Object(r.mdx)("h2",E({},{id:"basic-example"}),"Basic Example"),Object(r.mdx)(l.a,{codeText:c.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",E({},{id:"content-types"}),"Content types"),Object(r.mdx)("h3",E({},{id:"body"}),"Body"),Object(r.mdx)("p",null,"Use ",Object(r.mdx)("inlineCode",{parentName:"p"},"<Card.Body>")," to pad content inside a ",Object(r.mdx)("inlineCode",{parentName:"p"},"<Card>"),"."),Object(r.mdx)(l.a,{codeText:u.a,mdxType:"ReactPlayground"}),Object(r.mdx)("p",null,"Alternatively, you can use this shorthand version for Cards with body\nonly, and no other children"),Object(r.mdx)(l.a,{codeText:b.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h3",E({},{id:"title-text-and-links"}),"Title, text, and links"),Object(r.mdx)("p",null,"Using ",Object(r.mdx)("inlineCode",{parentName:"p"},"<Card.Title>"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"<Card.Subtitle>"),", and\n",Object(r.mdx)("inlineCode",{parentName:"p"},"<Card.Text>")," inside the ",Object(r.mdx)("inlineCode",{parentName:"p"},"<Card.Body>")," will line them up nicely.\n",Object(r.mdx)("inlineCode",{parentName:"p"},"<Card.Link>"),"s are used to line up links next to each other."),Object(r.mdx)("p",null,Object(r.mdx)("inlineCode",{parentName:"p"},"<Card.Text>")," outputs ",Object(r.mdx)("inlineCode",{parentName:"p"},"<p>")," tags around the content, so you can\nuse multiple ",Object(r.mdx)("inlineCode",{parentName:"p"},"<Card.Text>"),"s to create separate paragraphs."),Object(r.mdx)(l.a,{codeText:X.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h3",E({},{id:"list-groups"}),"List Groups"),Object(r.mdx)("p",null,"Create lists of content in a card with a flush list group."),Object(r.mdx)(l.a,{codeText:q.a,mdxType:"ReactPlayground"}),Object(r.mdx)(l.a,{codeText:R.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h3",E({},{id:"kitchen-sink"}),"Kitchen Sink"),Object(r.mdx)(l.a,{codeText:S.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h3",E({},{id:"header-and-footer"}),"Header and Footer"),Object(r.mdx)("p",null,"You may add a header by adding a ",Object(r.mdx)("inlineCode",{parentName:"p"},"<Card.Header>")," component."),Object(r.mdx)(l.a,{codeText:z.a,mdxType:"ReactPlayground"}),Object(r.mdx)("p",null,"A ",Object(r.mdx)("inlineCode",{parentName:"p"},"<CardHeader>")," can be styled by passing a heading element\nthrough the ",Object(r.mdx)("inlineCode",{parentName:"p"},"<as>")," prop"),Object(r.mdx)(l.a,{codeText:Q.a,mdxType:"ReactPlayground"}),Object(r.mdx)(l.a,{codeText:M.a,mdxType:"ReactPlayground"}),Object(r.mdx)(l.a,{codeText:w.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",E({},{id:"images"}),"Images"),Object(r.mdx)("p",null,"Cards include a few options for working with images. Choose from\nappending “image caps” at either end of a card, overlaying images with\ncard content, or simply embedding the image in a card."),Object(r.mdx)("h3",E({},{id:"image-caps"}),"Image caps"),Object(r.mdx)("p",null,"Similar to headers and footers, cards can include top and bottom “image\ncaps”—images at the top or bottom of a card."),Object(r.mdx)(l.a,{codeText:v.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h3",E({},{id:"image-overlays"}),"Image Overlays"),Object(r.mdx)("p",null,"Turn an image into a card background and overlay your card’s text.\nDepending on the image, you may or may not need additional styles or\nutilities."),Object(r.mdx)(l.a,{codeText:I.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",E({},{id:"navigation"}),"Navigation"),Object(r.mdx)("p",null,"Add some navigation to a card’s header (or block) with React Bootstrap’s\n",Object(r.mdx)("a",E({parentName:"p"},{href:"../navs"}),"Nav")," components."),Object(r.mdx)(l.a,{codeText:U.a,mdxType:"ReactPlayground"}),Object(r.mdx)(l.a,{codeText:D.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",E({},{id:"card-styles"}),"Card Styles"),Object(r.mdx)("h3",E({},{id:"background-color"}),"Background Color"),Object(r.mdx)("p",null,"You can change a card's appearance by changing their ",Object(r.mdx)("inlineCode",{parentName:"p"},"<bg>"),", and ",Object(r.mdx)("inlineCode",{parentName:"p"},"<text>")," props."),Object(r.mdx)(l.a,{codeText:C.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h3",E({},{id:"border-color"}),"Border Color"),Object(r.mdx)(l.a,{codeText:h.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",E({},{id:"card-layout"}),"Card layout"),Object(r.mdx)("h3",E({},{id:"card-groups"}),"Card Groups"),Object(r.mdx)(l.a,{codeText:O.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h3",E({},{id:"grid-cards"}),"Grid cards"),Object(r.mdx)("p",null,"Use ",Object(r.mdx)("inlineCode",{parentName:"p"},"Row"),"'s ",Object(r.mdx)("a",E({parentName:"p"},{href:"/layout/grid/#row-layout-col-sizing"}),"grid column")," props to control how many cards to show per row."),Object(r.mdx)(l.a,{codeText:k.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h3",E({},{id:"card-columns"}),"Card Columns"),Object(r.mdx)(l.a,{codeText:g.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",E({},{id:"api"}),"API"),Object(r.mdx)(i.a,{metadata:t.data.Card,mdxType:"ComponentApi"}),Object(r.mdx)(i.a,{metadata:t.data.CardBody,exportedBy:t.data.Card,mdxType:"ComponentApi"}),Object(r.mdx)(i.a,{metadata:t.data.CardFooter,exportedBy:t.data.Card,mdxType:"ComponentApi"}),Object(r.mdx)(i.a,{metadata:t.data.CardHeader,exportedBy:t.data.Card,mdxType:"ComponentApi"}),Object(r.mdx)(i.a,{metadata:t.data.CardImg,exportedBy:t.data.Card,mdxType:"ComponentApi"}),Object(r.mdx)(i.a,{metadata:t.data.CardImgOverlay,exportedBy:t.data.Card,mdxType:"ComponentApi"}),Object(r.mdx)(i.a,{metadata:t.data.CardLink,exportedBy:t.data.Card,mdxType:"ComponentApi"}),Object(r.mdx)(i.a,{metadata:t.data.CardSubtitle,exportedBy:t.data.Card,mdxType:"ComponentApi"}),Object(r.mdx)(i.a,{metadata:t.data.CardText,exportedBy:t.data.Card,mdxType:"ComponentApi"}),Object(r.mdx)(i.a,{metadata:t.data.CardTitle,exportedBy:t.data.Card,mdxType:"ComponentApi"}),Object(r.mdx)(i.a,{metadata:t.data.CardGroup,mdxType:"ComponentApi"}),Object(r.mdx)(i.a,{metadata:t.data.CardColumns,mdxType:"ComponentApi"}))}ee.isMDXComponent=!0},XHYQ:function(e,a){e.exports='<Card className="bg-dark text-white">\n  <Card.Img src="holder.js/100px270" alt="Card image" />\n  <Card.ImgOverlay>\n    <Card.Title>Card title</Card.Title>\n    <Card.Text>\n      This is a wider card with supporting text below as a natural lead-in to\n      additional content. This content is a little bit longer.\n    </Card.Text>\n    <Card.Text>Last updated 3 mins ago</Card.Text>\n  </Card.ImgOverlay>\n</Card>;\n'},aIFH:function(e,a){e.exports="[\n  'Primary',\n  'Secondary',\n  'Success',\n  'Danger',\n  'Warning',\n  'Info',\n  'Light',\n  'Dark',\n].map((variant, idx) => (\n  <Card\n    bg={variant.toLowerCase()}\n    key={idx}\n    text={variant.toLowerCase() === 'light' ? 'dark' : 'white'}\n    style={{ width: '18rem' }}\n    className=\"mb-2\"\n  >\n    <Card.Header>Header</Card.Header>\n    <Card.Body>\n      <Card.Title>{variant} Card Title </Card.Title>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </Card.Text>\n    </Card.Body>\n  </Card>\n));\n"},bUoF:function(e,a){e.exports='<Card>\n  <Card.Header>Featured</Card.Header>\n  <Card.Body>\n    <Card.Title>Special title treatment</Card.Title>\n    <Card.Text>\n      With supporting text below as a natural lead-in to additional content.\n    </Card.Text>\n    <Button variant="primary">Go somewhere</Button>\n  </Card.Body>\n</Card>;\n'},bqMX:function(e,a){e.exports="<Card style={{ width: '18rem' }}>\n  <Card.Header>Featured</Card.Header>\n  <ListGroup variant=\"flush\">\n    <ListGroup.Item>Cras justo odio</ListGroup.Item>\n    <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n    <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\n  </ListGroup>\n</Card>;\n"},dep0:function(e,a){e.exports='<Card style={{ width: \'18rem\' }}>\n  <Card.Img variant="top" src="holder.js/100px180" />\n  <Card.Body>\n    <Card.Title>Card Title</Card.Title>\n    <Card.Text>\n      Some quick example text to build on the card title and make up the bulk of\n      the card\'s content.\n    </Card.Text>\n    <Button variant="primary">Go somewhere</Button>\n  </Card.Body>\n</Card>;\n'},jNNs:function(e,a){e.exports='<Row xs={1} md={2} className="g-4">\n  {Array.from({ length: 4 }).map((_, idx) => (\n    <Col>\n      <Card>\n        <Card.Img variant="top" src="holder.js/100px160" />\n        <Card.Body>\n          <Card.Title>Card title</Card.Title>\n          <Card.Text>\n            This is a longer card with supporting text below as a natural\n            lead-in to additional content. This content is a little bit longer.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </Col>\n  ))}\n</Row>;\n'},kJQm:function(e,a){e.exports='<Card>\n  <Card.Header>Quote</Card.Header>\n  <Card.Body>\n    <blockquote className="blockquote mb-0">\n      <p>\n        {\' \'}\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\n        erat a ante.{\' \'}\n      </p>\n      <footer className="blockquote-footer">\n        Someone famous in <cite title="Source Title">Source Title</cite>\n      </footer>\n    </blockquote>\n  </Card.Body>\n</Card>;\n'},"tNN+":function(e,a){e.exports="<Card style={{ width: '18rem' }}>\n  <ListGroup variant=\"flush\">\n    <ListGroup.Item>Cras justo odio</ListGroup.Item>\n    <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n    <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\n  </ListGroup>\n</Card>;\n"},wzki:function(e,a){e.exports='<Card>\n  <Card.Header as="h5">Featured</Card.Header>\n  <Card.Body>\n    <Card.Title>Special title treatment</Card.Title>\n    <Card.Text>\n      With supporting text below as a natural lead-in to additional content.\n    </Card.Text>\n    <Button variant="primary">Go somewhere</Button>\n  </Card.Body>\n</Card>;\n'}}]);
//# sourceMappingURL=component---src-pages-components-cards-mdx-435ff24a1e7b5f266f96.js.map