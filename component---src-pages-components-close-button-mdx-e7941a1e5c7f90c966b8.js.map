{"version":3,"sources":["webpack:///./src/examples/CloseButton/Labelled.js","webpack:///./src/examples/CloseButton/Variants.js","webpack:///./src/examples/CloseButton/Basic.js","webpack:///./src/examples/CloseButton/Disabled.js","webpack:///./src/pages/components/close-button.mdx"],"names":["module","exports","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","codeText","CloseButtonBasic","CloseButtonDisabled","parentName","CloseButtonVariants","CloseButtonLabelled","metadata","data","isMDXComponent"],"mappings":"+EAAAA,EAAOC,QAAU,wC,qBCAjBD,EAAOC,QAAU,2H,mBCAjBD,EAAOC,QAAU,sB,mBCAjBD,EAAOC,QAAU,+B,m3BCeV,IAQMC,EAAe,GACtBC,EAAc,CAClBC,MAVmB,aAWnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,SAAeF,GAAiBM,GAAhC,IAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,wBAAQ,CACN,GAAM,iBADR,gBAGA,mGACA,cAAC,IAAD,CAAiBC,SAAUC,IAAkBF,QAAQ,oBACrD,wBAAQ,CACN,GAAM,mBADR,kBAGA,oHAEA,cAAC,IAAD,CAAiBC,SAAUE,IAAqBH,QAAQ,oBACxD,wBAAQ,CACN,GAAM,aADR,YAGA,uEAAoD,4BAAYI,WAAW,KAAvB,mBAApD,KACA,cAAC,IAAD,CAAiBH,SAAUI,IAAqBL,QAAQ,oBACxD,wBAAQ,CACN,GAAM,kBADR,iBAGA,8PAGF,4BAAYI,WAAW,KAAvB,cAHE,cAIA,cAAC,IAAD,CAAiBH,SAAUK,IAAqBN,QAAQ,oBACxD,wBAAQ,CACN,GAAM,QADR,OAGA,cAAC,IAAD,CAAcO,SAAUR,EAAMS,KAAKD,SAAUP,QAAQ,kBAMzDH,EAAWY,gBAAiB","file":"component---src-pages-components-close-button-mdx-e7941a1e5c7f90c966b8.js","sourcesContent":["module.exports = \"<CloseButton aria-label=\\\"Hide\\\" />;\\n\"","module.exports = \"<div className=\\\"bg-dark p-3\\\">\\n  <CloseButton variant=\\\"white\\\" />\\n  <CloseButton variant=\\\"white\\\" disabled />\\n</div>;\\n\"","module.exports = \"<CloseButton />;\\n\"","module.exports = \"<CloseButton disabled />;\\n\"","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport CloseButtonBasic from '../../examples/CloseButton/Basic';\nimport CloseButtonDisabled from '../../examples/CloseButton/Disabled';\nimport CloseButtonVariants from '../../examples/CloseButton/Variants';\nimport CloseButtonLabelled from '../../examples/CloseButton/Labelled';\nexport const query = graphql`\n  query CloseButton {\n    metadata: componentMetadata(displayName: { eq: \"CloseButton\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"close-button\"\n    }}>{`Close Button`}</h1>\n    <p>{`A generic close button for dismissing content such as modals and alerts.`}</p>\n    <ReactPlayground codeText={CloseButtonBasic} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"disabled-state\"\n    }}>{`Disabled state`}</h2>\n    <p>{`Bootstrap adds relevant styling to a disabled close button to prevent user\ninteractions.`}</p>\n    <ReactPlayground codeText={CloseButtonDisabled} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h2>\n    <p>{`Change the default dark color to white using `}<inlineCode parentName=\"p\">{`variant=\"white\"`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={CloseButtonVariants} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <p>{`To ensure the maximum accessibility for Close Button components, it is\nrecommended that you provide relevant text for screen readers.  The example\nbelow provides an example of accessible usage of this component by way of the\n`}<inlineCode parentName=\"p\">{`aria-label`}</inlineCode>{` property.`}</p>\n    <ReactPlayground codeText={CloseButtonLabelled} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.metadata} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}