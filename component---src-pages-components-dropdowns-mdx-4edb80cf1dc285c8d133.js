(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"+Tds":function(n,o){n.exports='import Button from \'react-bootstrap/Button\';\nimport ButtonGroup from \'react-bootstrap/ButtonGroup\';\nimport Dropdown from \'react-bootstrap/Dropdown\';\n\nfunction SplitBasicExample() {\n  return (\n    <Dropdown as={ButtonGroup}>\n      <Button variant="success">Split Button</Button>\n\n      <Dropdown.Toggle split variant="success" id="dropdown-split-basic" />\n\n      <Dropdown.Menu>\n        <Dropdown.Item href="#/action-1">Action</Dropdown.Item>\n        <Dropdown.Item href="#/action-2">Another action</Dropdown.Item>\n        <Dropdown.Item href="#/action-3">Something else</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nexport default SplitBasicExample;\n'},"/cQG":function(n,o){n.exports='import Dropdown from \'react-bootstrap/Dropdown\';\nimport DropdownButton from \'react-bootstrap/DropdownButton\';\n\nfunction MenuAlignEndExample() {\n  return (\n    <DropdownButton\n      align="end"\n      title="Dropdown end"\n      id="dropdown-menu-align-end"\n    >\n      <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n      <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n      <Dropdown.Item eventKey="3">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n    </DropdownButton>\n  );\n}\n\nexport default MenuAlignEndExample;\n'},"1A88":function(n,o){n.exports="import Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport SplitButton from 'react-bootstrap/SplitButton';\n\nfunction DropDirectioExample() {\n  return (\n    <>\n      <div className=\"mb-2\">\n        {['up', 'down', 'start', 'end'].map((direction) => (\n          <DropdownButton\n            as={ButtonGroup}\n            key={direction}\n            id={`dropdown-button-drop-${direction}`}\n            drop={direction}\n            variant=\"secondary\"\n            title={` Drop ${direction} `}\n          >\n            <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n            <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n            <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n          </DropdownButton>\n        ))}\n      </div>\n\n      <div>\n        {['up', 'down', 'start', 'end'].map((direction) => (\n          <SplitButton\n            key={direction}\n            id={`dropdown-button-drop-${direction}`}\n            drop={direction}\n            variant=\"secondary\"\n            title={`Drop ${direction}`}\n          >\n            <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n            <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n            <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n          </SplitButton>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default DropDirectioExample;\n"},"8Jgq":function(n,o){n.exports='import Dropdown from \'react-bootstrap/Dropdown\';\nimport DropdownButton from \'react-bootstrap/DropdownButton\';\n\nfunction BasicButtonExample() {\n  return (\n    <DropdownButton id="dropdown-basic-button" title="Dropdown button">\n      <Dropdown.Item href="#/action-1">Action</Dropdown.Item>\n      <Dropdown.Item href="#/action-2">Another action</Dropdown.Item>\n      <Dropdown.Item href="#/action-3">Something else</Dropdown.Item>\n    </DropdownButton>\n  );\n}\n\nexport default BasicButtonExample;\n'},"9wEl":function(n,o){n.exports='import Dropdown from \'react-bootstrap/Dropdown\';\n\nfunction MenuDividersExample() {\n  return (\n    <Dropdown.Menu show>\n      <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n      <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n      <Dropdown.Item eventKey="3">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  );\n}\n\nexport default MenuDividersExample;\n'},"Gf/E":function(n,o,e){"use strict";e.d(o,"a",(function(){return r}));var t=e("oYCi");function r(){return Object(t.jsx)("abbr",{title:"Accessible Rich Internet Applications",children:"ARIA"})}},I7sw:function(n,o){n.exports='import Dropdown from \'react-bootstrap/Dropdown\';\nimport DropdownButton from \'react-bootstrap/DropdownButton\';\n\nfunction DropdownItemTagsExample() {\n  return (\n    <DropdownButton id="dropdown-item-button" title="Dropdown button">\n      <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\n      <Dropdown.Item as="button">Action</Dropdown.Item>\n      <Dropdown.Item as="button">Another action</Dropdown.Item>\n      <Dropdown.Item as="button">Something else</Dropdown.Item>\n    </DropdownButton>\n  );\n}\n\nexport default DropdownItemTagsExample;\n'},ICWW:function(n,o){n.exports="import ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\nfunction VariantsExample() {\n  return (\n    <>\n      {['Primary', 'Secondary', 'Success', 'Info', 'Warning', 'Danger'].map(\n        (variant) => (\n          <DropdownButton\n            as={ButtonGroup}\n            key={variant}\n            id={`dropdown-variants-${variant}`}\n            variant={variant.toLowerCase()}\n            title={variant}\n          >\n            <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n            <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n            <Dropdown.Item eventKey=\"3\" active>\n              Active Item\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n          </DropdownButton>\n        ),\n      )}\n    </>\n  );\n}\n\nexport default VariantsExample;\n"},"LE+M":function(n,o){n.exports='import Container from \'react-bootstrap/Container\';\nimport Nav from \'react-bootstrap/Nav\';\nimport Navbar from \'react-bootstrap/Navbar\';\nimport NavDropdown from \'react-bootstrap/NavDropdown\';\n\nfunction NavbarDarkExample() {\n  return (\n    <Navbar variant="dark" bg="dark" expand="lg">\n      <Container fluid>\n        <Navbar.Brand href="#home">React-Bootstrap</Navbar.Brand>\n        <Navbar.Toggle aria-controls="navbar-dark-example" />\n        <Navbar.Collapse id="navbar-dark-example">\n          <Nav>\n            <NavDropdown\n              id="nav-dropdown-dark-example"\n              title="Dropdown"\n              menuVariant="dark"\n            >\n              <NavDropdown.Item href="#action/3.1">Action</NavDropdown.Item>\n              <NavDropdown.Item href="#action/3.2">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href="#action/3.3">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href="#action/3.4">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default NavbarDarkExample;\n'},"Pc+l":function(n,o){n.exports='import Button from \'react-bootstrap/Button\';\nimport ButtonGroup from \'react-bootstrap/ButtonGroup\';\nimport Dropdown from \'react-bootstrap/Dropdown\';\n\nfunction ButtonCustomExample() {\n  return (\n    <>\n      <Dropdown as={ButtonGroup}>\n        <Dropdown.Toggle id="dropdown-custom-1">Pow! Zoom!</Dropdown.Toggle>\n        <Dropdown.Menu className="super-colors">\n          <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n          <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n          <Dropdown.Item eventKey="3" active>\n            Active Item\n          </Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>{\' \'}\n      <Dropdown as={ButtonGroup}>\n        <Button variant="info">mix it up style-wise</Button>\n        <Dropdown.Toggle split variant="success" id="dropdown-custom-2" />\n        <Dropdown.Menu className="super-colors">\n          <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n          <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n          <Dropdown.Item eventKey="3" active>\n            Active Item\n          </Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n}\n\nexport default ButtonCustomExample;\n'},Q6D8:function(n,o,e){n.exports={callout:"Callout-styles-module--callout--1_K3h",warning:"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h",danger:"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h"}},QEiy:function(n,o){n.exports='import Dropdown from \'react-bootstrap/Dropdown\';\n\nfunction AutoCloseExample() {\n  return (\n    <>\n      <Dropdown className="d-inline mx-2">\n        <Dropdown.Toggle id="dropdown-autoclose-true">\n          Default Dropdown\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n          <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n          <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n\n      <Dropdown className="d-inline mx-2" autoClose="inside">\n        <Dropdown.Toggle id="dropdown-autoclose-inside">\n          Clickable Outside\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n          <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n          <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n\n      <Dropdown className="d-inline mx-2" autoClose="outside">\n        <Dropdown.Toggle id="dropdown-autoclose-outside">\n          Clickable Inside\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n          <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n          <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n\n      <Dropdown className="d-inline mx-2" autoClose={false}>\n        <Dropdown.Toggle id="dropdown-autoclose-false">\n          Manual Close\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n          <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n          <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n}\n\nexport default AutoCloseExample;\n'},S1JY:function(n,o){n.exports='import Dropdown from \'react-bootstrap/Dropdown\';\n\nfunction MenuHeadersExample() {\n  return (\n    <Dropdown.Menu show>\n      <Dropdown.Header>Dropdown header</Dropdown.Header>\n      <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n      <Dropdown.Item eventKey="3">Something else here</Dropdown.Item>\n    </Dropdown.Menu>\n  );\n}\n\nexport default MenuHeadersExample;\n'},VhxL:function(n,o){n.exports='import Dropdown from \'react-bootstrap/Dropdown\';\n\nfunction BasicExample() {\n  return (\n    <Dropdown>\n      <Dropdown.Toggle variant="success" id="dropdown-basic">\n        Dropdown Button\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        <Dropdown.Item href="#/action-1">Action</Dropdown.Item>\n        <Dropdown.Item href="#/action-2">Another action</Dropdown.Item>\n        <Dropdown.Item href="#/action-3">Something else</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nexport default BasicExample;\n'},bTvO:function(n,o,e){n.exports={listGroup:"examples-module--list-group--IXNCn",ratioExamples:"examples-module--ratio-examples--Gv1Nw",staticDropdownMenu:"examples-module--static-dropdown-menu--kkfyD clearfix",customDropdownMenu:"examples-module--custom-dropdown-menu--2e_DR",overlayContained:"examples-module--overlay-contained--11C4s"}},"dv+S":function(n,o,e){"use strict";e.r(o),e.d(o,"_frontmatter",(function(){return X})),e.d(o,"default",(function(){return Z}));var t,r=e("wx14"),d=e("zLVn"),a=(e("mXGw"),e("7ljp")),p=e("Snbm"),i=e("Gf/E"),m=e("h55t"),l=e("vXRK"),c=e("1u5/"),u=e("VhxL"),s=e.n(u),w=e("8Jgq"),D=e.n(w),x=e("Pc+l"),b=e.n(x),h=e("mocR"),f=e.n(h),g=e("u0FM"),v=e.n(g),I=e("1A88"),y=e.n(I),O=e("I7sw"),j=e.n(O),B=e("/cQG"),C=e.n(B),T=e("x3fo"),N=e.n(T),A=e("9wEl"),S=e.n(A),M=e("S1JY"),k=e.n(M),K=e("+Tds"),R=e.n(K),E=e("sARq"),P=e.n(E),G=e("ICWW"),V=e.n(G),z=e("i1Sp"),L=e.n(z),W=e("LE+M"),F=e.n(W),H=e("QEiy"),$=e.n(H),Y=e("bTvO"),J=e.n(Y),Q=["components"],X={},_=(t="PageHeader",function(n){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),Object(a.mdx)("div",n)}),q={query:"4149735868",_frontmatter:X},U=p.a;function Z(n){var o=n.components,e=Object(d.a)(n,Q);return Object(a.mdx)(U,Object(r.a)({},q,e,{components:o,mdxType:"MDXLayout"}),Object(a.mdx)(_,{title:"Dropdowns",subTitle:"Toggle contextual overlays for displaying lists of links and more with the Bootstrap dropdown plugin",mdxType:"PageHeader"}),Object(a.mdx)("h2",{id:"overview"},"Overview"),Object(a.mdx)("p",null,"Dropdowns are toggleable, contextual overlays for displaying lists of\nlinks and more. Like overlays, Dropdowns are built using a third-party\nlibrary ",Object(a.mdx)("a",{href:"https://popper.js.org/"},"Popper.js"),", which provides\ndynamic positioning and viewport detection."),Object(a.mdx)("h2",{id:"accessibility"},"Accessibility"),Object(a.mdx)("p",null,"The ",Object(a.mdx)("a",{href:"https://www.w3.org/TR/wai-aria/"},Object(a.mdx)("abbr",{title:"Web Accessibility Initiative"},"WAI")," ",Object(a.mdx)(i.a,{mdxType:"ARIA"}))," standard\ndefines a ",Object(a.mdx)("a",{parentName:"p",href:"https://www.w3.org/TR/wai-aria-1.1/#menu"},Object(a.mdx)("inlineCode",{parentName:"a"},'role="menu"')," widget"),", but it's very specific to a certain kind of menu. ",Object(a.mdx)(i.a,{mdxType:"ARIA"})," menus, must\nonly contain ",Object(a.mdx)("inlineCode",{parentName:"p"},'role="menuitem"'),", ",Object(a.mdx)("inlineCode",{parentName:"p"},'role="menuitemcheckbox"'),", or ",Object(a.mdx)("inlineCode",{parentName:"p"},'role="menuitemradio"'),"."),Object(a.mdx)("p",null,"On the other hand, Bootstrap's dropdowns are designed to more generic\nand application in a variety of situations. For this reason we don't\nautomatically add the menu roles to the markup. We do implement some\nbasic keyboard navigation, and if you do provide the \"menu\" role,\nreact-bootstrap will do its best to ensure the focus management is\ncompliant with the ",Object(a.mdx)(i.a,{mdxType:"ARIA"})," authoring guidelines for menus."),Object(a.mdx)("h2",{id:"examples"},"Examples"),Object(a.mdx)("h3",{id:"single-button-dropdowns"},"Single button dropdowns"),Object(a.mdx)("p",null,"The basic Dropdown is composed of a wrapping ",Object(a.mdx)("inlineCode",{parentName:"p"},"Dropdown")," and\ninner ",Object(a.mdx)("inlineCode",{parentName:"p"},"<DropdownMenu>"),", and ",Object(a.mdx)("inlineCode",{parentName:"p"},"<DropdownToggle>"),". By\ndefault the ",Object(a.mdx)("inlineCode",{parentName:"p"},"<DropdownToggle>")," will render a\n",Object(a.mdx)("inlineCode",{parentName:"p"},"Button")," component and accepts all the same props."),Object(a.mdx)(c.a,{codeText:s.a,mdxType:"ReactPlayground"}),Object(a.mdx)("p",null,"Since the above is such a common configuration react-bootstrap provides\nthe ",Object(a.mdx)("inlineCode",{parentName:"p"},"<DropdownButton>")," component to help reduce typing. Provide\na ",Object(a.mdx)("inlineCode",{parentName:"p"},"title")," prop and some ",Object(a.mdx)("inlineCode",{parentName:"p"},"<DropdownItem>"),"s and you're\nready to go."),Object(a.mdx)(c.a,{codeText:D.a,mdxType:"ReactPlayground"}),Object(a.mdx)("p",null,"DropdownButton will forward Button props to the underlying Toggle\ncomponent"),Object(a.mdx)(c.a,{codeText:V.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h3",{id:"split-button-dropdowns"},"Split button dropdowns"),Object(a.mdx)("p",null,"Similarly, You create a split dropdown by combining the Dropdown\ncomponents with another Button and a ButtonGroup."),Object(a.mdx)(c.a,{codeText:R.a,mdxType:"ReactPlayground"}),Object(a.mdx)("p",null,"As with DropdownButton, ",Object(a.mdx)("inlineCode",{parentName:"p"},"SplitButton")," is provided as\nconvenience component."),Object(a.mdx)(c.a,{codeText:P.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"sizing"},"Sizing"),Object(a.mdx)("p",null,"Dropdowns work with buttons of all sizes."),Object(a.mdx)(c.a,{codeText:v.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"dark-dropdowns"},"Dark dropdowns"),Object(a.mdx)("p",null,"Opt into darker dropdowns to match a dark navbar or custom style by adding\n",Object(a.mdx)("inlineCode",{parentName:"p"},'variant="dark"')," onto an existing ",Object(a.mdx)("inlineCode",{parentName:"p"},"DropdownMenu"),". Alternatively, use\n",Object(a.mdx)("inlineCode",{parentName:"p"},'menuVariant="dark"')," when using the ",Object(a.mdx)("inlineCode",{parentName:"p"},"DropdownButton")," component."),Object(a.mdx)(c.a,{codeText:L.a,mdxType:"ReactPlayground"}),Object(a.mdx)("p",null,"Using ",Object(a.mdx)("inlineCode",{parentName:"p"},'menuVariant="dark"')," in a ",Object(a.mdx)("inlineCode",{parentName:"p"},"NavDropdown"),":"),Object(a.mdx)(c.a,{codeText:F.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"drop-directions"},"Drop directions"),Object(a.mdx)("p",null,"Trigger dropdown menus above, below, left, or to the right of their\ntoggle elements, with the ",Object(a.mdx)("inlineCode",{parentName:"p"},"drop")," prop."),Object(a.mdx)(c.a,{codeText:y.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"dropdown-items"},"Dropdown items"),Object(a.mdx)("p",null,"Historically dropdown menu contents had to be links, but that’s no\nlonger the case with v4. Now you can optionally use\n",Object(a.mdx)("inlineCode",{parentName:"p"},"<button>")," elements in your dropdowns instead of just ",Object(a.mdx)("inlineCode",{parentName:"p"},"<a>"),"s."),Object(a.mdx)("p",null,"You can also create non-interactive dropdown items with ",Object(a.mdx)("inlineCode",{parentName:"p"},"<Dropdown.ItemText>"),".\nFeel free to style further with custom CSS or text utilities."),Object(a.mdx)(c.a,{codeText:j.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"menu-alignment"},"Menu alignment"),Object(a.mdx)("p",null,"By default, a dropdown menu is aligned to the left, but you can switch\nit by passing ",Object(a.mdx)("inlineCode",{parentName:"p"},'align="end"')," to a ",Object(a.mdx)("inlineCode",{parentName:"p"},"<Dropdown>"),", ",Object(a.mdx)("inlineCode",{parentName:"p"},"<DropdownButton>"),", or ",Object(a.mdx)("inlineCode",{parentName:"p"},"<SplitButton>"),"."),Object(a.mdx)(c.a,{codeText:C.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h3",{id:"responsive-alignment"},"Responsive alignment"),Object(a.mdx)("p",null,"If you want to use responsive menu alignment, pass an object containing a breakpoint to the\n",Object(a.mdx)("inlineCode",{parentName:"p"},"align")," prop on the ",Object(a.mdx)("inlineCode",{parentName:"p"},"<DropdownMenu>"),", ",Object(a.mdx)("inlineCode",{parentName:"p"},"<DropdownButton>"),", or ",Object(a.mdx)("inlineCode",{parentName:"p"},"<SplitButton>"),".\nYou can specify ",Object(a.mdx)("inlineCode",{parentName:"p"},"start")," or ",Object(a.mdx)("inlineCode",{parentName:"p"},"end")," for the various breakpoints."),Object(a.mdx)(m.a,{theme:"danger",title:"Warning",mdxType:"Callout"},"Using responsive alignment will disable Popper usage so any dynamic positioning features such as ",Object(a.mdx)("code",null,"flip")," will not work."),Object(a.mdx)(c.a,{codeText:N.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"menu-headers"},"Menu headers"),Object(a.mdx)("p",null,"Add a header to label sections of actions."),Object(a.mdx)(c.a,{codeText:k.a,exampleClassName:J.a.staticDropdownMenu,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"menu-dividers"},"Menu dividers"),Object(a.mdx)("p",null,"Separate groups of related menu items with a divider."),Object(a.mdx)(c.a,{codeText:S.a,exampleClassName:J.a.staticDropdownMenu,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"autoclose"},"AutoClose"),Object(a.mdx)("p",null,"By default, the dropdown menu is closed when selecting a menu item or clicking outside of the\ndropdown menu. This behaviour can be changed by using the ",Object(a.mdx)("inlineCode",{parentName:"p"},"autoClose")," property."),Object(a.mdx)("p",null,"By default, ",Object(a.mdx)("inlineCode",{parentName:"p"},"autoClose")," is set to the default value ",Object(a.mdx)("inlineCode",{parentName:"p"},"true")," and behaves like expected. By choosing ",Object(a.mdx)("inlineCode",{parentName:"p"},"false"),", the dropdown\nmenu can only be toggled by clicking on the dropdown button. ",Object(a.mdx)("inlineCode",{parentName:"p"},"inside")," makes the dropdown disappear ",Object(a.mdx)("strong",{parentName:"p"},"only"),"\nby choosing a menu item and ",Object(a.mdx)("inlineCode",{parentName:"p"},"outside")," closes the dropdown menu ",Object(a.mdx)("strong",{parentName:"p"},"only")," by clicking outside."),Object(a.mdx)("p",null,Object(a.mdx)("strong",{parentName:"p"},"Notice")," how the dropdown is toggled in each scenario by clicking on the button."),Object(a.mdx)(c.a,{codeText:$.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"customization"},"Customization"),Object(a.mdx)("p",null,"If the default handling of the dropdown menu and toggle components\naren't to your liking, you can customize them, by using the more basic\n",Object(a.mdx)("inlineCode",{parentName:"p"},"<Dropdown>")," Component to explicitly specify the Toggle and\nMenu components"),Object(a.mdx)(c.a,{codeText:b.a,exampleClassName:J.a.customDropdownMenu,mdxType:"ReactPlayground"}),Object(a.mdx)("h3",{id:"custom-dropdown-components"},"Custom Dropdown Components"),Object(a.mdx)("p",null,"For those that want to customize everything, you can forgo the included\nToggle and Menu components, and create your own. By providing custom\ncomponents to the ",Object(a.mdx)("inlineCode",{parentName:"p"},"as")," prop, you can control how each\ncomponent behaves. Custom toggle and menu components ",Object(a.mdx)("strong",{parentName:"p"},"must")," be able to accept refs."),Object(a.mdx)(c.a,{codeText:f.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"api"},"API"),Object(a.mdx)(l.a,{metadata:e.data.DropdownButton,mdxType:"ComponentApi"}),Object(a.mdx)(l.a,{metadata:e.data.SplitButton,mdxType:"ComponentApi"}),Object(a.mdx)(l.a,{metadata:e.data.Dropdown,mdxType:"ComponentApi"}),Object(a.mdx)(l.a,{metadata:e.data.DropdownToggle,exportedBy:e.data.Dropdown,mdxType:"ComponentApi"}),Object(a.mdx)(l.a,{metadata:e.data.DropdownMenu,exportedBy:e.data.Dropdown,mdxType:"ComponentApi"}),Object(a.mdx)(l.a,{metadata:e.data.DropdownItem,exportedBy:e.data.Dropdown,mdxType:"ComponentApi"}),Object(a.mdx)(l.a,{metadata:e.data.DropdownHeader,exportedBy:e.data.Dropdown,mdxType:"ComponentApi"}),Object(a.mdx)(l.a,{metadata:e.data.DropdownDivider,exportedBy:e.data.Dropdown,mdxType:"ComponentApi"}))}Z.isMDXComponent=!0},h55t:function(n,o,e){"use strict";var t=e("oYCi"),r=e("Q6D8");o.a=function(n){var o=n.title,e=n.children,d=n.theme;return Object(t.jsxs)("aside",{role:"note",className:r[d||"warning"],children:[o&&Object(t.jsx)("header",{className:"h5",children:o}),Object(t.jsx)("div",{children:e})]})}},i1Sp:function(n,o){n.exports='import Dropdown from \'react-bootstrap/Dropdown\';\nimport DropdownButton from \'react-bootstrap/DropdownButton\';\n\nfunction ButtonDarkExample() {\n  return (\n    <>\n      <Dropdown>\n        <Dropdown.Toggle id="dropdown-button-dark-example1" variant="secondary">\n          Dropdown Button\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu variant="dark">\n          <Dropdown.Item href="#/action-1" active>\n            Action\n          </Dropdown.Item>\n          <Dropdown.Item href="#/action-2">Another action</Dropdown.Item>\n          <Dropdown.Item href="#/action-3">Something else</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item href="#/action-4">Separated link</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n\n      <DropdownButton\n        id="dropdown-button-dark-example2"\n        variant="secondary"\n        menuVariant="dark"\n        title="Dropdown button"\n        className="mt-2"\n      >\n        <Dropdown.Item href="#/action-1" active>\n          Action\n        </Dropdown.Item>\n        <Dropdown.Item href="#/action-2">Another action</Dropdown.Item>\n        <Dropdown.Item href="#/action-3">Something else</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item href="#/action-4">Separated link</Dropdown.Item>\n      </DropdownButton>\n    </>\n  );\n}\n\nexport default ButtonDarkExample;\n'},mocR:function(n,o){n.exports='import React, { useState } from \'react\';\nimport Dropdown from \'react-bootstrap/Dropdown\';\nimport Form from \'react-bootstrap/Form\';\n\n// The forwardRef is important!!\n// Dropdown needs access to the DOM node in order to position the Menu\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <a\n    href=""\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n    &#x25bc;\n  </a>\n));\n\n// forwardRef again here!\n// Dropdown needs access to the DOM of the Menu to measure it\nconst CustomMenu = React.forwardRef(\n  ({ children, style, className, \'aria-labelledby\': labeledBy }, ref) => {\n    const [value, setValue] = useState(\'\');\n\n    return (\n      <div\n        ref={ref}\n        style={style}\n        className={className}\n        aria-labelledby={labeledBy}\n      >\n        <Form.Control\n          autoFocus\n          className="mx-3 my-2 w-auto"\n          placeholder="Type to filter..."\n          onChange={(e) => setValue(e.target.value)}\n          value={value}\n        />\n        <ul className="list-unstyled">\n          {React.Children.toArray(children).filter(\n            (child) =>\n              !value || child.props.children.toLowerCase().startsWith(value),\n          )}\n        </ul>\n      </div>\n    );\n  },\n);\n\nrender(\n  <Dropdown>\n    <Dropdown.Toggle as={CustomToggle} id="dropdown-custom-components">\n      Custom toggle\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu as={CustomMenu}>\n      <Dropdown.Item eventKey="1">Red</Dropdown.Item>\n      <Dropdown.Item eventKey="2">Blue</Dropdown.Item>\n      <Dropdown.Item eventKey="3" active>\n        Orange\n      </Dropdown.Item>\n      <Dropdown.Item eventKey="1">Red-Orange</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>,\n);\n'},sARq:function(n,o){n.exports="import Dropdown from 'react-bootstrap/Dropdown';\nimport SplitButton from 'react-bootstrap/SplitButton';\n\nfunction SplitVariantExample() {\n  return (\n    <>\n      {['Primary', 'Secondary', 'Success', 'Info', 'Warning', 'Danger'].map(\n        (variant) => (\n          <SplitButton\n            key={variant}\n            id={`dropdown-split-variants-${variant}`}\n            variant={variant.toLowerCase()}\n            title={variant}\n          >\n            <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n            <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n            <Dropdown.Item eventKey=\"3\" active>\n              Active Item\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n          </SplitButton>\n        ),\n      )}\n    </>\n  );\n}\n\nexport default SplitVariantExample;\n"},u0FM:function(n,o){n.exports='import ButtonGroup from \'react-bootstrap/ButtonGroup\';\nimport Dropdown from \'react-bootstrap/Dropdown\';\nimport DropdownButton from \'react-bootstrap/DropdownButton\';\nimport SplitButton from \'react-bootstrap/SplitButton\';\n\nfunction ButtonSizesExample() {\n  return (\n    <>\n      <div className="mb-2">\n        {[DropdownButton, SplitButton].map((DropdownType, idx) => (\n          <DropdownType\n            as={ButtonGroup}\n            key={idx}\n            id={`dropdown-button-drop-${idx}`}\n            size="lg"\n            title="Drop large"\n          >\n            <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n            <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n            <Dropdown.Item eventKey="3">Something else here</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n          </DropdownType>\n        ))}\n      </div>\n      <div>\n        {[DropdownButton, SplitButton].map((DropdownType, idx) => (\n          <DropdownType\n            as={ButtonGroup}\n            key={idx}\n            id={`dropdown-button-drop-${idx}`}\n            size="sm"\n            variant="secondary"\n            title="Drop small"\n          >\n            <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n            <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n            <Dropdown.Item eventKey="3">Something else here</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n          </DropdownType>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default ButtonSizesExample;\n'},x3fo:function(n,o){n.exports='import Dropdown from \'react-bootstrap/Dropdown\';\nimport DropdownButton from \'react-bootstrap/DropdownButton\';\nimport SplitButton from \'react-bootstrap/SplitButton\';\n\nfunction MenuAlignResponsiveExample() {\n  return (\n    <>\n      <div>\n        <DropdownButton\n          as={ButtonGroup}\n          align={{ lg: \'end\' }}\n          title="Left-aligned but right aligned when large screen"\n          id="dropdown-menu-align-responsive-1"\n        >\n          <Dropdown.Item eventKey="1">Action 1</Dropdown.Item>\n          <Dropdown.Item eventKey="2">Action 2</Dropdown.Item>\n        </DropdownButton>\n      </div>\n      <div className="mt-2">\n        <SplitButton\n          align={{ lg: \'start\' }}\n          title="Right-aligned but left aligned when large screen"\n          id="dropdown-menu-align-responsive-2"\n        >\n          <Dropdown.Item eventKey="1">Action 1</Dropdown.Item>\n          <Dropdown.Item eventKey="2">Action 2</Dropdown.Item>\n        </SplitButton>\n      </div>\n    </>\n  );\n}\n\nexport default MenuAlignResponsiveExample;\n'}}]);
//# sourceMappingURL=component---src-pages-components-dropdowns-mdx-4edb80cf1dc285c8d133.js.map