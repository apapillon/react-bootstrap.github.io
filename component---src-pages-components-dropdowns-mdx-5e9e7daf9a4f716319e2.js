(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"+Tds":function(n,e){n.exports='<Dropdown as={ButtonGroup}>\n  <Button variant="success">Split Button</Button>\n\n  <Dropdown.Toggle split variant="success" id="dropdown-split-basic" />\n\n  <Dropdown.Menu>\n    <Dropdown.Item href="#/action-1">Action</Dropdown.Item>\n    <Dropdown.Item href="#/action-2">Another action</Dropdown.Item>\n    <Dropdown.Item href="#/action-3">Something else</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>;\n'},"/cQG":function(n,e){n.exports='<DropdownButton align="end" title="Dropdown end" id="dropdown-menu-align-end">\n  <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n  <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n  <Dropdown.Item eventKey="3">Something else here</Dropdown.Item>\n  <Dropdown.Divider />\n  <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n</DropdownButton>;\n'},"1A88":function(n,e){n.exports='<>\n  <div className="mb-2">\n    {[\'up\', \'down\', \'start\', \'end\'].map((direction) => (\n      <DropdownButton\n        as={ButtonGroup}\n        key={direction}\n        id={`dropdown-button-drop-${direction}`}\n        drop={direction}\n        variant="secondary"\n        title={` Drop ${direction} `}\n      >\n        <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n        <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey="3">Something else here</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n      </DropdownButton>\n    ))}\n  </div>\n\n  <div>\n    {[\'up\', \'down\', \'start\', \'end\'].map((direction) => (\n      <SplitButton\n        key={direction}\n        id={`dropdown-button-drop-${direction}`}\n        drop={direction}\n        variant="secondary"\n        title={`Drop ${direction}`}\n      >\n        <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n        <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey="3">Something else here</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n      </SplitButton>\n    ))}\n  </div>\n</>;\n'},"8Jgq":function(n,e){n.exports='<DropdownButton id="dropdown-basic-button" title="Dropdown button">\n  <Dropdown.Item href="#/action-1">Action</Dropdown.Item>\n  <Dropdown.Item href="#/action-2">Another action</Dropdown.Item>\n  <Dropdown.Item href="#/action-3">Something else</Dropdown.Item>\n</DropdownButton>;\n'},"9wEl":function(n,e){n.exports='<Dropdown.Menu show>\n  <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n  <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n  <Dropdown.Item eventKey="3">Something else here</Dropdown.Item>\n  <Dropdown.Divider />\n  <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n</Dropdown.Menu>;\n'},"Gf/E":function(n,e,o){"use strict";o.d(e,"a",(function(){return d}));var t=o("oYCi");function d(){return Object(t.jsx)("abbr",{title:"Accessible Rich Internet Applications",children:"ARIA"})}},I7sw:function(n,e){n.exports='<DropdownButton id="dropdown-item-button" title="Dropdown button">\n  <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\n  <Dropdown.Item as="button">Action</Dropdown.Item>\n  <Dropdown.Item as="button">Another action</Dropdown.Item>\n  <Dropdown.Item as="button">Something else</Dropdown.Item>\n</DropdownButton>;\n'},ICWW:function(n,e){n.exports="<>\n  {['Primary', 'Secondary', 'Success', 'Info', 'Warning', 'Danger'].map(\n    (variant) => (\n      <DropdownButton\n        as={ButtonGroup}\n        key={variant}\n        id={`dropdown-variants-${variant}`}\n        variant={variant.toLowerCase()}\n        title={variant}\n      >\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\" active>\n          Active Item\n        </Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n      </DropdownButton>\n    ),\n  )}\n</>;\n"},"LE+M":function(n,e){n.exports='<Navbar variant="dark" bg="dark" expand="lg">\n  <Container fluid>\n    <Navbar.Brand href="#home">React-Bootstrap</Navbar.Brand>\n    <Navbar.Toggle aria-controls="navbar-dark-example" />\n    <Navbar.Collapse id="navbar-dark-example">\n      <Nav>\n        <NavDropdown\n          id="nav-dropdown-dark-example"\n          title="Dropdown"\n          menuVariant="dark"\n        >\n          <NavDropdown.Item href="#action/3.1">Action</NavDropdown.Item>\n          <NavDropdown.Item href="#action/3.2">Another action</NavDropdown.Item>\n          <NavDropdown.Item href="#action/3.3">Something</NavDropdown.Item>\n          <NavDropdown.Divider />\n          <NavDropdown.Item href="#action/3.4">Separated link</NavDropdown.Item>\n        </NavDropdown>\n      </Nav>\n    </Navbar.Collapse>\n  </Container>\n</Navbar>;\n'},"Pc+l":function(n,e){n.exports='<>\n  <Dropdown as={ButtonGroup}>\n    <Dropdown.Toggle id="dropdown-custom-1">Pow! Zoom!</Dropdown.Toggle>\n    <Dropdown.Menu className="super-colors">\n      <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n      <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n      <Dropdown.Item eventKey="3" active>\n        Active Item\n      </Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>{\' \'}\n  <Dropdown as={ButtonGroup}>\n    <Button variant="info">mix it up style-wise</Button>\n    <Dropdown.Toggle split variant="success" id="dropdown-custom-2" />\n    <Dropdown.Menu className="super-colors">\n      <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n      <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n      <Dropdown.Item eventKey="3" active>\n        Active Item\n      </Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</>;\n'},Q6D8:function(n,e,o){n.exports={callout:"Callout-styles-module--callout--1_K3h",warning:"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h",danger:"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h"}},QEiy:function(n,e){n.exports='<>\n  <Dropdown className="d-inline mx-2">\n    <Dropdown.Toggle id="dropdown-autoclose-true">\n      Default Dropdown\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n      <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n      <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown className="d-inline mx-2" autoClose="inside">\n    <Dropdown.Toggle id="dropdown-autoclose-inside">\n      Clickable Outside\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n      <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n      <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown className="d-inline mx-2" autoClose="outside">\n    <Dropdown.Toggle id="dropdown-autoclose-outside">\n      Clickable Inside\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n      <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n      <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown className="d-inline mx-2" autoClose={false}>\n    <Dropdown.Toggle id="dropdown-autoclose-false">\n      Manual Close\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu>\n      <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n      <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n      <Dropdown.Item href="#">Menu Item</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</>;\n'},S1JY:function(n,e){n.exports='<Dropdown.Menu show>\n  <Dropdown.Header>Dropdown header</Dropdown.Header>\n  <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n  <Dropdown.Item eventKey="3">Something else here</Dropdown.Item>\n</Dropdown.Menu>;\n'},VhxL:function(n,e){n.exports='<Dropdown>\n  <Dropdown.Toggle variant="success" id="dropdown-basic">\n    Dropdown Button\n  </Dropdown.Toggle>\n\n  <Dropdown.Menu>\n    <Dropdown.Item href="#/action-1">Action</Dropdown.Item>\n    <Dropdown.Item href="#/action-2">Another action</Dropdown.Item>\n    <Dropdown.Item href="#/action-3">Something else</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>;\n'},bTvO:function(n,e,o){n.exports={listGroup:"examples-module--list-group--IXNCn",ratioExamples:"examples-module--ratio-examples--Gv1Nw",staticDropdownMenu:"examples-module--static-dropdown-menu--kkfyD clearfix",customDropdownMenu:"examples-module--custom-dropdown-menu--2e_DR",overlayContained:"examples-module--overlay-contained--11C4s"}},"dv+S":function(n,e,o){"use strict";o.r(e),o.d(e,"_frontmatter",(function(){return q})),o.d(e,"default",(function(){return U}));var t=o("rePB"),d=o("zLVn"),r=(o("mXGw"),o("7ljp")),a=o("Snbm"),p=o("Gf/E"),i=o("h55t"),m=o("vXRK"),c=o("1u5/"),l=o("VhxL"),s=o.n(l),w=o("8Jgq"),u=o.n(w),D=o("Pc+l"),b=o.n(D),x=o("mocR"),h=o.n(x),y=o("u0FM"),g=o.n(y),I=o("1A88"),v=o.n(I),f=o("I7sw"),O=o.n(f),j=o("/cQG"),C=o.n(j),T=o("x3fo"),N=o.n(T),A=o("9wEl"),B=o.n(A),k=o("S1JY"),M=o.n(k),S=o("+Tds"),K=o.n(S),R=o("sARq"),P=o.n(R),G=o("ICWW"),E=o.n(G),L=o("i1Sp"),W=o.n(L),z=o("LE+M"),V=o.n(z),$=o("QEiy"),F=o.n($),Y=o("bTvO"),J=o.n(Y);function Q(n,e){var o=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),o.push.apply(o,t)}return o}function _(n){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?Q(Object(o),!0).forEach((function(e){Object(t.a)(n,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):Q(Object(o)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(o,e))}))}return n}var q={},X={query:"4149735868",_frontmatter:q},H=a.a;function U(n){var e=n.components,o=Object(d.a)(n,["components"]);return Object(r.mdx)(H,_(_(_({},X),o),{},{components:e,mdxType:"MDXLayout"}),Object(r.mdx)("h1",_({},{id:"dropdowns"}),"Dropdowns"),Object(r.mdx)("p",{className:"lead"},"Toggle contextual overlays for displaying lists of links and more with the Bootstrap dropdown plugin"),Object(r.mdx)("h2",_({},{id:"overview"}),"Overview"),Object(r.mdx)("p",null,"Dropdowns are toggleable, contextual overlays for displaying lists of\nlinks and more. Like overlays, Dropdowns are built using a third-party\nlibrary ",Object(r.mdx)("a",{href:"https://popper.js.org/"},"Popper.js"),", which provides\ndynamic positioning and viewport detection."),Object(r.mdx)("h2",_({},{id:"accessibility"}),"Accessibility"),Object(r.mdx)("p",null,"The ",Object(r.mdx)("a",{href:"https://www.w3.org/TR/wai-aria/"},Object(r.mdx)("abbr",{title:"Web Accessibility Initiative"},"WAI")," ",Object(r.mdx)(p.a,{mdxType:"ARIA"}))," standard\ndefines a ",Object(r.mdx)("a",_({parentName:"p"},{href:"https://www.w3.org/TR/wai-aria-1.1/#menu"}),Object(r.mdx)("inlineCode",{parentName:"a"},'role="menu"')," widget"),", but it's very specific to a certain kind of menu. ",Object(r.mdx)(p.a,{mdxType:"ARIA"})," menus, must\nonly contain ",Object(r.mdx)("inlineCode",{parentName:"p"},'role="menuitem"'),", ",Object(r.mdx)("inlineCode",{parentName:"p"},'role="menuitemcheckbox"'),", or ",Object(r.mdx)("inlineCode",{parentName:"p"},'role="menuitemradio"'),"."),Object(r.mdx)("p",null,"On the other hand, Bootstrap's dropdowns are designed to more generic\nand application in a variety of situations. For this reason we don't\nautomatically add the menu roles to the markup. We do implement some\nbasic keyboard navigation, and if you do provide the \"menu\" role,\nreact-bootstrap will do its best to ensure the focus management is\ncompliant with the ",Object(r.mdx)(p.a,{mdxType:"ARIA"})," authoring guidelines for menus."),Object(r.mdx)("h2",_({},{id:"examples"}),"Examples"),Object(r.mdx)("h3",_({},{id:"single-button-dropdowns"}),"Single button dropdowns"),Object(r.mdx)("p",null,"The basic Dropdown is composed of a wrapping ",Object(r.mdx)("inlineCode",{parentName:"p"},"Dropdown")," and\ninner ",Object(r.mdx)("inlineCode",{parentName:"p"},"<DropdownMenu>"),", and ",Object(r.mdx)("inlineCode",{parentName:"p"},"<DropdownToggle>"),". By\ndefault the ",Object(r.mdx)("inlineCode",{parentName:"p"},"<DropdownToggle>")," will render a\n",Object(r.mdx)("inlineCode",{parentName:"p"},"Button")," component and accepts all the same props."),Object(r.mdx)(c.a,{codeText:s.a,mdxType:"ReactPlayground"}),Object(r.mdx)("p",null,"Since the above is such a common configuration react-bootstrap provides\nthe ",Object(r.mdx)("inlineCode",{parentName:"p"},"<DropdownButton>")," component to help reduce typing. Provide\na ",Object(r.mdx)("inlineCode",{parentName:"p"},"title")," prop and some ",Object(r.mdx)("inlineCode",{parentName:"p"},"<DropdownItem>"),"s and you're\nready to go."),Object(r.mdx)(c.a,{codeText:u.a,mdxType:"ReactPlayground"}),Object(r.mdx)("p",null,"DropdownButton will forward Button props to the underlying Toggle\ncomponent"),Object(r.mdx)(c.a,{codeText:E.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h3",_({},{id:"split-button-dropdowns"}),"Split button dropdowns"),Object(r.mdx)("p",null,"Similarly, You create a split dropdown by combining the Dropdown\ncomponents with another Button and a ButtonGroup."),Object(r.mdx)(c.a,{codeText:K.a,mdxType:"ReactPlayground"}),Object(r.mdx)("p",null,"As with DropdownButton, ",Object(r.mdx)("inlineCode",{parentName:"p"},"SplitButton")," is provided as\nconvenience component."),Object(r.mdx)(c.a,{codeText:P.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",_({},{id:"sizing"}),"Sizing"),Object(r.mdx)("p",null,"Dropdowns work with buttons of all sizes."),Object(r.mdx)(c.a,{codeText:g.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",_({},{id:"dark-dropdowns"}),"Dark dropdowns"),Object(r.mdx)("p",null,"Opt into darker dropdowns to match a dark navbar or custom style by adding\n",Object(r.mdx)("inlineCode",{parentName:"p"},'variant="dark"')," onto an existing ",Object(r.mdx)("inlineCode",{parentName:"p"},"DropdownMenu"),". Alternatively, use\n",Object(r.mdx)("inlineCode",{parentName:"p"},'menuVariant="dark"')," when using the ",Object(r.mdx)("inlineCode",{parentName:"p"},"DropdownButton")," component."),Object(r.mdx)(c.a,{codeText:W.a,mdxType:"ReactPlayground"}),Object(r.mdx)("p",null,"Using ",Object(r.mdx)("inlineCode",{parentName:"p"},'menuVariant="dark"')," in a ",Object(r.mdx)("inlineCode",{parentName:"p"},"NavDropdown"),":"),Object(r.mdx)(c.a,{codeText:V.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",_({},{id:"drop-directions"}),"Drop directions"),Object(r.mdx)("p",null,"Trigger dropdown menus above, below, left, or to the right of their\ntoggle elements, with the ",Object(r.mdx)("inlineCode",{parentName:"p"},"drop")," prop."),Object(r.mdx)(c.a,{codeText:v.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",_({},{id:"dropdown-items"}),"Dropdown items"),Object(r.mdx)("p",null,"Historically dropdown menu contents had to be links, but that’s no\nlonger the case with v4. Now you can optionally use\n",Object(r.mdx)("inlineCode",{parentName:"p"},"<button>")," elements in your dropdowns instead of just ",Object(r.mdx)("inlineCode",{parentName:"p"},"<a>"),"s."),Object(r.mdx)("p",null,"You can also create non-interactive dropdown items with ",Object(r.mdx)("inlineCode",{parentName:"p"},"<Dropdown.ItemText>"),".\nFeel free to style further with custom CSS or text utilities."),Object(r.mdx)(c.a,{codeText:O.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",_({},{id:"menu-alignment"}),"Menu alignment"),Object(r.mdx)("p",null,"By default, a dropdown menu is aligned to the left, but you can switch\nit by passing ",Object(r.mdx)("inlineCode",{parentName:"p"},'align="end"')," to a ",Object(r.mdx)("inlineCode",{parentName:"p"},"<Dropdown>"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"<DropdownButton>"),", or ",Object(r.mdx)("inlineCode",{parentName:"p"},"<SplitButton>"),"."),Object(r.mdx)(c.a,{codeText:C.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h3",_({},{id:"responsive-alignment"}),"Responsive alignment"),Object(r.mdx)("p",null,"If you want to use responsive menu alignment, pass an object containing a breakpoint to the\n",Object(r.mdx)("inlineCode",{parentName:"p"},"align")," prop on the ",Object(r.mdx)("inlineCode",{parentName:"p"},"<DropdownMenu>"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"<DropdownButton>"),", or ",Object(r.mdx)("inlineCode",{parentName:"p"},"<SplitButton>"),".\nYou can specify ",Object(r.mdx)("inlineCode",{parentName:"p"},"start")," or ",Object(r.mdx)("inlineCode",{parentName:"p"},"end")," for the various breakpoints."),Object(r.mdx)(i.a,{theme:"danger",title:"Warning",mdxType:"Callout"},"Using responsive alignment will disable Popper usage so any dynamic positioning features such as ",Object(r.mdx)("code",null,"flip")," will not work."),Object(r.mdx)(c.a,{codeText:N.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",_({},{id:"menu-headers"}),"Menu headers"),Object(r.mdx)("p",null,"Add a header to label sections of actions."),Object(r.mdx)(c.a,{codeText:M.a,exampleClassName:J.a.staticDropdownMenu,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",_({},{id:"menu-dividers"}),"Menu dividers"),Object(r.mdx)("p",null,"Separate groups of related menu items with a divider."),Object(r.mdx)(c.a,{codeText:B.a,exampleClassName:J.a.staticDropdownMenu,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",_({},{id:"autoclose"}),"AutoClose"),Object(r.mdx)("p",null,"By default, the dropdown menu is closed when selecting a menu item or clicking outside of the\ndropdown menu. This behaviour can be changed by using the ",Object(r.mdx)("inlineCode",{parentName:"p"},"autoClose")," property."),Object(r.mdx)("p",null,"By default, ",Object(r.mdx)("inlineCode",{parentName:"p"},"autoClose")," is set to the default value ",Object(r.mdx)("inlineCode",{parentName:"p"},"true")," and behaves like expected. By choosing ",Object(r.mdx)("inlineCode",{parentName:"p"},"false"),", the dropdown\nmenu can only be toggled by clicking on the dropdown button. ",Object(r.mdx)("inlineCode",{parentName:"p"},"inside")," makes the dropdown disappear ",Object(r.mdx)("strong",{parentName:"p"},"only"),"\nby choosing a menu item and ",Object(r.mdx)("inlineCode",{parentName:"p"},"outside")," closes the dropdown menu ",Object(r.mdx)("strong",{parentName:"p"},"only")," by clicking outside."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Notice")," how the dropdown is toggled in each scenario by clicking on the button."),Object(r.mdx)(c.a,{codeText:F.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",_({},{id:"customization"}),"Customization"),Object(r.mdx)("p",null,"If the default handling of the dropdown menu and toggle components\naren't to your liking, you can customize them, by using the more basic\n",Object(r.mdx)("inlineCode",{parentName:"p"},"<Dropdown>")," Component to explicitly specify the Toggle and\nMenu components"),Object(r.mdx)(c.a,{codeText:b.a,exampleClassName:J.a.customDropdownMenu,mdxType:"ReactPlayground"}),Object(r.mdx)("h3",_({},{id:"custom-dropdown-components"}),"Custom Dropdown Components"),Object(r.mdx)("p",null,"For those that want to customize everything, you can forgo the included\nToggle and Menu components, and create your own. By providing custom\ncomponents to the ",Object(r.mdx)("inlineCode",{parentName:"p"},"as")," prop, you can control how each\ncomponent behaves. Custom toggle and menu components ",Object(r.mdx)("strong",{parentName:"p"},"must")," be able to accept refs."),Object(r.mdx)(c.a,{codeText:h.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",_({},{id:"api"}),"API"),Object(r.mdx)(m.a,{metadata:o.data.DropdownButton,mdxType:"ComponentApi"}),Object(r.mdx)(m.a,{metadata:o.data.SplitButton,mdxType:"ComponentApi"}),Object(r.mdx)(m.a,{metadata:o.data.Dropdown,mdxType:"ComponentApi"}),Object(r.mdx)(m.a,{metadata:o.data.DropdownToggle,exportedBy:o.data.Dropdown,mdxType:"ComponentApi"}),Object(r.mdx)(m.a,{metadata:o.data.DropdownMenu,exportedBy:o.data.Dropdown,mdxType:"ComponentApi"}),Object(r.mdx)(m.a,{metadata:o.data.DropdownItem,exportedBy:o.data.Dropdown,mdxType:"ComponentApi"}),Object(r.mdx)(m.a,{metadata:o.data.DropdownHeader,exportedBy:o.data.Dropdown,mdxType:"ComponentApi"}),Object(r.mdx)(m.a,{metadata:o.data.DropdownDivider,exportedBy:o.data.Dropdown,mdxType:"ComponentApi"}))}U.isMDXComponent=!0},h55t:function(n,e,o){"use strict";var t=o("oYCi"),d=o("Q6D8");e.a=function(n){var e=n.title,o=n.children,r=n.theme;return Object(t.jsxs)("aside",{role:"note",className:d[r||"warning"],children:[e&&Object(t.jsx)("header",{className:"h5",children:e}),Object(t.jsx)("div",{children:o})]})}},i1Sp:function(n,e){n.exports='<>\n  <Dropdown>\n    <Dropdown.Toggle id="dropdown-button-dark-example1" variant="secondary">\n      Dropdown Button\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu variant="dark">\n      <Dropdown.Item href="#/action-1" active>\n        Action\n      </Dropdown.Item>\n      <Dropdown.Item href="#/action-2">Another action</Dropdown.Item>\n      <Dropdown.Item href="#/action-3">Something else</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#/action-4">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <DropdownButton\n    id="dropdown-button-dark-example2"\n    variant="secondary"\n    menuVariant="dark"\n    title="Dropdown button"\n    className="mt-2"\n  >\n    <Dropdown.Item href="#/action-1" active>\n      Action\n    </Dropdown.Item>\n    <Dropdown.Item href="#/action-2">Another action</Dropdown.Item>\n    <Dropdown.Item href="#/action-3">Something else</Dropdown.Item>\n    <Dropdown.Divider />\n    <Dropdown.Item href="#/action-4">Separated link</Dropdown.Item>\n  </DropdownButton>\n</>;\n'},mocR:function(n,e){n.exports='// The forwardRef is important!!\n// Dropdown needs access to the DOM node in order to position the Menu\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <a\n    href=""\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n    &#x25bc;\n  </a>\n));\n\n// forwardRef again here!\n// Dropdown needs access to the DOM of the Menu to measure it\nconst CustomMenu = React.forwardRef(\n  ({ children, style, className, \'aria-labelledby\': labeledBy }, ref) => {\n    const [value, setValue] = useState(\'\');\n\n    return (\n      <div\n        ref={ref}\n        style={style}\n        className={className}\n        aria-labelledby={labeledBy}\n      >\n        <FormControl\n          autoFocus\n          className="mx-3 my-2 w-auto"\n          placeholder="Type to filter..."\n          onChange={(e) => setValue(e.target.value)}\n          value={value}\n        />\n        <ul className="list-unstyled">\n          {React.Children.toArray(children).filter(\n            (child) =>\n              !value || child.props.children.toLowerCase().startsWith(value),\n          )}\n        </ul>\n      </div>\n    );\n  },\n);\n\nrender(\n  <Dropdown>\n    <Dropdown.Toggle as={CustomToggle} id="dropdown-custom-components">\n      Custom toggle\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu as={CustomMenu}>\n      <Dropdown.Item eventKey="1">Red</Dropdown.Item>\n      <Dropdown.Item eventKey="2">Blue</Dropdown.Item>\n      <Dropdown.Item eventKey="3" active>\n        Orange\n      </Dropdown.Item>\n      <Dropdown.Item eventKey="1">Red-Orange</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>,\n);\n'},sARq:function(n,e){n.exports="<>\n  {['Primary', 'Secondary', 'Success', 'Info', 'Warning', 'Danger'].map(\n    (variant) => (\n      <SplitButton\n        key={variant}\n        id={`dropdown-split-variants-${variant}`}\n        variant={variant.toLowerCase()}\n        title={variant}\n      >\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\" active>\n          Active Item\n        </Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n      </SplitButton>\n    ),\n  )}\n</>;\n"},u0FM:function(n,e){n.exports='<>\n  <div className="mb-2">\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\n      <DropdownType\n        as={ButtonGroup}\n        key={idx}\n        id={`dropdown-button-drop-${idx}`}\n        size="lg"\n        title="Drop large"\n      >\n        <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n        <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey="3">Something else here</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n      </DropdownType>\n    ))}\n  </div>\n  <div>\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\n      <DropdownType\n        as={ButtonGroup}\n        key={idx}\n        id={`dropdown-button-drop-${idx}`}\n        size="sm"\n        variant="secondary"\n        title="Drop small"\n      >\n        <Dropdown.Item eventKey="1">Action</Dropdown.Item>\n        <Dropdown.Item eventKey="2">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey="3">Something else here</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey="4">Separated link</Dropdown.Item>\n      </DropdownType>\n    ))}\n  </div>\n</>;\n'},x3fo:function(n,e){n.exports='<>\n  <div>\n    <DropdownButton\n      as={ButtonGroup}\n      align={{ lg: \'end\' }}\n      title="Left-aligned but right aligned when large screen"\n      id="dropdown-menu-align-responsive-1"\n    >\n      <Dropdown.Item eventKey="1">Action 1</Dropdown.Item>\n      <Dropdown.Item eventKey="2">Action 2</Dropdown.Item>\n    </DropdownButton>\n  </div>\n  <div className="mt-2">\n    <SplitButton\n      align={{ lg: \'start\' }}\n      title="Right-aligned but left aligned when large screen"\n      id="dropdown-menu-align-responsive-2"\n    >\n      <Dropdown.Item eventKey="1">Action 1</Dropdown.Item>\n      <Dropdown.Item eventKey="2">Action 2</Dropdown.Item>\n    </SplitButton>\n  </div>\n</>;\n'}}]);
//# sourceMappingURL=component---src-pages-components-dropdowns-mdx-5e9e7daf9a4f716319e2.js.map