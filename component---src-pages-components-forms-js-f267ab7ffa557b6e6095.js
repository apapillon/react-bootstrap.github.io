(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"/GzF":function(o,n){o.exports='const { Formik } = formik;\n\nconst schema = yup.object({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  username: yup.string().required(),\n  city: yup.string().required(),\n  state: yup.string().required(),\n  zip: yup.string().required(),\n  terms: yup.bool().required(),\n});\n\nfunction FormExample() {\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={console.log}\n      initialValues={{\n        firstName: \'Mark\',\n        lastName: \'Otto\',\n      }}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Row>\n            <Form.Group as={Col} md="4" controlId="validationFormik01">\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                type="text"\n                name="firstName"\n                value={values.firstName}\n                onChange={handleChange}\n                isValid={touched.firstName && !errors.firstName}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md="4" controlId="validationFormik02">\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                type="text"\n                name="lastName"\n                value={values.lastName}\n                onChange={handleChange}\n                isValid={touched.lastName && !errors.lastName}\n              />\n\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md="4" controlId="validationFormikUsername">\n              <Form.Label>Username</Form.Label>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text id="inputGroupPrepend">@</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  type="text"\n                  placeholder="Username"\n                  aria-describedby="inputGroupPrepend"\n                  name="username"\n                  value={values.username}\n                  onChange={handleChange}\n                  isInvalid={!!errors.username}\n                />\n                <Form.Control.Feedback type="invalid">\n                  {errors.username}\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md="6" controlId="validationFormik03">\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                type="text"\n                placeholder="City"\n                name="city"\n                value={values.city}\n                onChange={handleChange}\n                isInvalid={!!errors.city}\n              />\n\n              <Form.Control.Feedback type="invalid">\n                {errors.city}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md="3" controlId="validationFormik04">\n              <Form.Label>State</Form.Label>\n              <Form.Control\n                type="text"\n                placeholder="State"\n                name="state"\n                value={values.state}\n                onChange={handleChange}\n                isInvalid={!!errors.state}\n              />\n              <Form.Control.Feedback type="invalid">\n                {errors.state}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md="3" controlId="validationFormik05">\n              <Form.Label>Zip</Form.Label>\n              <Form.Control\n                type="text"\n                placeholder="Zip"\n                name="zip"\n                value={values.zip}\n                onChange={handleChange}\n                isInvalid={!!errors.zip}\n              />\n\n              <Form.Control.Feedback type="invalid">\n                {errors.zip}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Group>\n            <Form.Check\n              required\n              name="terms"\n              label="Agree to terms and conditions"\n              onChange={handleChange}\n              isInvalid={!!errors.terms}\n              feedback={errors.terms}\n              id="validationFormik0"\n            />\n          </Form.Group>\n          <Button type="submit">Submit form</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nrender(<FormExample />);\n'},"/tf6":function(o,n){o.exports='<Form>\n  {[\'checkbox\', \'radio\'].map((type) => (\n    <div key={`custom-inline-${type}`} className="mb-3">\n      <Form.Check\n        custom\n        inline\n        label="1"\n        type={type}\n        id={`custom-inline-${type}-1`}\n      />\n      <Form.Check\n        custom\n        inline\n        label="2"\n        type={type}\n        id={`custom-inline-${type}-2`}\n      />\n      <Form.Check\n        custom\n        inline\n        disabled\n        label="3 (disabled)"\n        type={type}\n        id={`custom-inline-${type}-3`}\n      />\n    </div>\n  ))}\n</Form>;\n'},"0Cdi":function(o,n){o.exports='const { Formik } = formik;\n\nconst schema = yup.object({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  username: yup.string().required(),\n  city: yup.string().required(),\n  state: yup.string().required(),\n  zip: yup.string().required(),\n  file: yup.string().required(),\n  terms: yup.bool().required(),\n});\n\nfunction FormExample() {\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={console.log}\n      initialValues={{\n        firstName: \'Mark\',\n        lastName: \'Otto\',\n      }}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Row>\n            <Form.Group as={Col} md="4" controlId="validationFormik101">\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                type="text"\n                name="firstName"\n                value={values.firstName}\n                onChange={handleChange}\n                isValid={touched.firstName && !errors.firstName}\n              />\n              <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md="4" controlId="validationFormik102">\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                type="text"\n                name="lastName"\n                value={values.lastName}\n                onChange={handleChange}\n                isValid={touched.lastName && !errors.lastName}\n              />\n\n              <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md="4" controlId="validationFormikUsername2">\n              <Form.Label>Username</Form.Label>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text id="inputGroupPrepend">@</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  type="text"\n                  placeholder="Username"\n                  aria-describedby="inputGroupPrepend"\n                  name="username"\n                  value={values.username}\n                  onChange={handleChange}\n                  isInvalid={!!errors.username}\n                />\n                <Form.Control.Feedback type="invalid" tooltip>\n                  {errors.username}\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md="6" controlId="validationFormik103">\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                type="text"\n                placeholder="City"\n                name="city"\n                value={values.city}\n                onChange={handleChange}\n                isInvalid={!!errors.city}\n              />\n\n              <Form.Control.Feedback type="invalid" tooltip>\n                {errors.city}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md="3" controlId="validationFormik104">\n              <Form.Label>State</Form.Label>\n              <Form.Control\n                type="text"\n                placeholder="State"\n                name="state"\n                value={values.state}\n                onChange={handleChange}\n                isInvalid={!!errors.state}\n              />\n              <Form.Control.Feedback type="invalid" tooltip>\n                {errors.state}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md="3" controlId="validationFormik105">\n              <Form.Label>Zip</Form.Label>\n              <Form.Control\n                type="text"\n                placeholder="Zip"\n                name="zip"\n                value={values.zip}\n                onChange={handleChange}\n                isInvalid={!!errors.zip}\n              />\n\n              <Form.Control.Feedback type="invalid" tooltip>\n                {errors.zip}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Group>\n            <Form.File\n              className="position-relative"\n              required\n              name="file"\n              label="File"\n              onChange={handleChange}\n              isInvalid={!!errors.file}\n              feedback={errors.file}\n              id="validationFormik107"\n              feedbackTooltip\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Check\n              required\n              name="terms"\n              label="Agree to terms and conditions"\n              onChange={handleChange}\n              isInvalid={!!errors.terms}\n              feedback={errors.terms}\n              id="validationFormik106"\n              feedbackTooltip\n            />\n          </Form.Group>\n          <Button type="submit">Submit form</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nrender(<FormExample />);\n'},"2NC6":function(o,n){o.exports='<Form>\n  <Form.Group controlId="exampleForm.SelectCustomSizeSm">\n    <Form.Label>Custom select Small</Form.Label>\n    <Form.Control as="select" size="sm" custom>\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group controlId="exampleForm.SelectCustomSizeLg">\n    <Form.Label>Custom select Large</Form.Label>\n    <Form.Control as="select" size="lg" custom>\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </Form.Control>\n  </Form.Group>\n</Form>;\n'},"4hNL":function(o,n){o.exports='<Form>\n  <Form.Row className="align-items-center">\n    <Col sm={3} className="my-1">\n      <Form.Label htmlFor="inlineFormInputName" srOnly>\n        Name\n      </Form.Label>\n      <Form.Control id="inlineFormInputName" placeholder="Jane Doe" />\n    </Col>\n    <Col sm={3} className="my-1">\n      <Form.Label htmlFor="inlineFormInputGroupUsername" srOnly>\n        Username\n      </Form.Label>\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text>@</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl id="inlineFormInputGroupUsername" placeholder="Username" />\n      </InputGroup>\n    </Col>\n    <Col xs="auto" className="my-1">\n      <Form.Check type="checkbox" id="autoSizingCheck2" label="Remember me" />\n    </Col>\n    <Col xs="auto" className="my-1">\n      <Button type="submit">Submit</Button>\n    </Col>\n  </Form.Row>\n</Form>;\n'},"73xP":function(o,n){o.exports='<Form>\n  <Form.Group>\n    <Form.File id="exampleFormControlFile1" label="Example file input" />\n  </Form.Group>\n</Form>;\n'},"7Yuw":function(o,n){o.exports='function FormExample() {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Row>\n        <Form.Group as={Col} md="4" controlId="validationCustom01">\n          <Form.Label>First name</Form.Label>\n          <Form.Control\n            required\n            type="text"\n            placeholder="First name"\n            defaultValue="Mark"\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md="4" controlId="validationCustom02">\n          <Form.Label>Last name</Form.Label>\n          <Form.Control\n            required\n            type="text"\n            placeholder="Last name"\n            defaultValue="Otto"\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md="4" controlId="validationCustomUsername">\n          <Form.Label>Username</Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id="inputGroupPrepend">@</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              type="text"\n              placeholder="Username"\n              aria-describedby="inputGroupPrepend"\n              required\n            />\n            <Form.Control.Feedback type="invalid">\n              Please choose a username.\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md="6" controlId="validationCustom03">\n          <Form.Label>City</Form.Label>\n          <Form.Control type="text" placeholder="City" required />\n          <Form.Control.Feedback type="invalid">\n            Please provide a valid city.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md="3" controlId="validationCustom04">\n          <Form.Label>State</Form.Label>\n          <Form.Control type="text" placeholder="State" required />\n          <Form.Control.Feedback type="invalid">\n            Please provide a valid state.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md="3" controlId="validationCustom05">\n          <Form.Label>Zip</Form.Label>\n          <Form.Control type="text" placeholder="Zip" required />\n          <Form.Control.Feedback type="invalid">\n            Please provide a valid zip.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Form.Group>\n        <Form.Check\n          required\n          label="Agree to terms and conditions"\n          feedback="You must agree before submitting."\n        />\n      </Form.Group>\n      <Button type="submit">Submit form</Button>\n    </Form>\n  );\n}\n\nrender(<FormExample />);\n'},"91QH":function(o,n){o.exports="<Form>\n  {['checkbox', 'radio'].map((type) => (\n    <div key={type} className=\"mb-3\">\n      <Form.Check type={type} id={`check-api-${type}`}>\n        <Form.Check.Input type={type} isValid />\n        <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\n        <Form.Control.Feedback type=\"valid\">You did it!</Form.Control.Feedback>\n      </Form.Check>\n    </div>\n  ))}\n</Form>;\n"},ABTg:function(o,n){o.exports='<>\n  <Form.Check aria-label="option 1" />\n  <Form.Check type="radio" aria-label="radio 1" />\n</>;\n'},AkQk:function(o,n,e){"use strict";e.r(n),e.d(n,"query",(function(){return p}));var r=e("mXGw"),t=e.n(r),l=(e("h55t"),e("vXRK"),e("+xvc")),m=e("1u5/"),a=e("Jdld"),i=e.n(a),s=(e("ljRQ"),e("91QH"),e("J32/"),e("/tf6"),e("Y2lv"),e("73xP"),e("n3XQ"),e("cgdb"),e("sOTj"),e("vc4Z"),e("zq7G"),e("WpBG"),e("ffOz"),e("pbHP"),e("dKpd"),e("4hNL"),e("u/9a"),e("DXq1"),e("pcjb"),e("uDF0"),e("ys3m"),e("xRI8"),e("oWAn"),e("iIos"),e("ABTg"),e("dxsv"),e("zyQW"),e("Qsvm"),e("v1/c"),e("c+sU"),e("2NC6"),e("pFPK"),e("QN7o"),e("CymT"),e("p7Cg"),e("FR85"),e("MhjH"),e("fZum"),e("/GzF"),e("7Yuw"),e("0Cdi"),e("r+yI"));n.default=Object(s.a)((function(o){o.data;return t.a.createElement(t.a.Fragment,null,t.a.createElement(l.default,{h:"1",id:"forms"},"Forms"),t.a.createElement("p",null,"The ",t.a.createElement("code",null,"<FormControl>")," component renders a form control with Bootstrap styling. The ",t.a.createElement("code",null,"<FormGroup>")," component wraps a form control with proper spacing, along with support for a label, help text, and validation state. To ensure accessibility, set"," ",t.a.createElement("code",null,"controlId")," on ",t.a.createElement("code",null,"<FormGroup>"),", and use"," ",t.a.createElement("code",null,"<FormLabel>")," for the label."),t.a.createElement(m.a,{codeText:i.a}))}));var p="443382152"},CymT:function(o,n){o.exports='<Form>\n  <Form.File // prettier-ignore\n    id="custom-file"\n    label="Custom file input"\n    custom\n  />\n</Form>;\n'},DXq1:function(o,n){o.exports='<Form>\n  <Form.Row>\n    <Col xs={7}>\n      <Form.Control placeholder="City" />\n    </Col>\n    <Col>\n      <Form.Control placeholder="State" />\n    </Col>\n    <Col>\n      <Form.Control placeholder="Zip" />\n    </Col>\n  </Form.Row>\n</Form>;\n'},FR85:function(o,n){o.exports='<Form>\n  <Form.File // prettier-ignore\n    id="custom-file-translate-scss"\n    label="Custom file input"\n    lang="en"\n    custom\n  />\n</Form>;\n'},"J32/":function(o,n){o.exports="<Form>\n  {['checkbox', 'radio'].map((type) => (\n    <div key={`custom-${type}`} className=\"mb-3\">\n      <Form.Check // prettier-ignore\n        custom\n        type={type}\n        id={`custom-${type}`}\n        label={`Check this custom ${type}`}\n      />\n\n      <Form.Check\n        custom\n        disabled\n        type={type}\n        label={`disabled ${type}`}\n        id={`disabled-custom-${type}`}\n      />\n    </div>\n  ))}\n</Form>;\n"},Jdld:function(o,n){o.exports='<Form>\n  <Form.Group controlId="formBasicEmail">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type="email" placeholder="Enter email" />\n    <Form.Text className="text-muted">\n      We\'ll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n\n  <Form.Group controlId="formBasicPassword">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type="password" placeholder="Password" />\n  </Form.Group>\n  <Form.Group controlId="formBasicCheckbox">\n    <Form.Check type="checkbox" label="Check me out" />\n  </Form.Group>\n  <Button variant="primary" type="submit">\n    Submit\n  </Button>\n</Form>;\n'},MhjH:function(o,n){o.exports='<Form>\n  <div className="mb-3">\n    <Form.File id="formcheck-api-custom" custom>\n      <Form.File.Input isValid />\n      <Form.File.Label data-browse="Button text">\n        Custom file input\n      </Form.File.Label>\n      <Form.Control.Feedback type="valid">You did it!</Form.Control.Feedback>\n    </Form.File>\n  </div>\n  <div className="mb-3">\n    <Form.File id="formcheck-api-regular">\n      <Form.File.Label>Regular file input</Form.File.Label>\n      <Form.File.Input />\n    </Form.File>\n  </div>\n</Form>;\n'},Q6D8:function(o,n,e){o.exports={callout:"Callout-styles-module--callout--1_K3h",warning:"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h",danger:"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h"}},QN7o:function(o,n){o.exports='<Form.Group>\n  <Form.Control as="select" size="lg">\n    <option>Large select</option>\n  </Form.Control>\n  <br />\n  <Form.Control as="select">\n    <option>Default select</option>\n  </Form.Control>\n  <br />\n  <Form.Control size="sm" as="select">\n    <option>Small select</option>\n  </Form.Control>\n</Form.Group>;\n'},Qsvm:function(o,n){o.exports='<Form>\n  <Form.Group controlId="formBasicRange">\n    <Form.Label>Range</Form.Label>\n    <Form.Control type="range" />\n  </Form.Group>\n</Form>;\n'},WpBG:function(o,n){o.exports='<Form inline>\n  <Form.Group>\n    <Form.Label htmlFor="inputPassword6">Password</Form.Label>\n    <Form.Control\n      type="password"\n      className="mx-sm-3"\n      id="inputPassword6"\n      aria-describedby="passwordHelpInline"\n    />\n    <Form.Text id="passwordHelpBlock" muted>\n      Must be 8-20 characters long.\n    </Form.Text>\n  </Form.Group>\n</Form>;\n'},Y2lv:function(o,n){o.exports='<Form>\n  {[\'checkbox\', \'radio\'].map((type) => (\n    <div key={`inline-${type}`} className="mb-3">\n      <Form.Check inline label="1" type={type} id={`inline-${type}-1`} />\n      <Form.Check inline label="2" type={type} id={`inline-${type}-2`} />\n      <Form.Check\n        inline\n        disabled\n        label="3 (disabled)"\n        type={type}\n        id={`inline-${type}-3`}\n      />\n    </div>\n  ))}\n</Form>;\n'},"c+sU":function(o,n){o.exports='<Form>\n  <Form.Group controlId="exampleForm.SelectCustom">\n    <Form.Label>Custom select</Form.Label>\n    <Form.Control as="select" custom>\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </Form.Control>\n  </Form.Group>\n</Form>;\n'},cgdb:function(o,n){o.exports='<>\n  <Form.Group>\n    <Form.Label>Disabled input</Form.Label>\n    <Form.Control placeholder="Disabled input" disabled />\n  </Form.Group>\n  <Form.Group>\n    <Form.Label>Disabled select menu</Form.Label>\n    <Form.Control as="select" disabled>\n      <option>Disabled select</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group>\n    <Form.Check type="checkbox" label="Can\'t check this" disabled />\n  </Form.Group>\n</>;\n'},dKpd:function(o,n){o.exports='<Form>\n  <Form.Row className="align-items-center">\n    <Col xs="auto" className="my-1">\n      <Form.Label className="mr-sm-2" htmlFor="inlineFormCustomSelect" srOnly>\n        Preference\n      </Form.Label>\n      <Form.Control\n        as="select"\n        className="mr-sm-2"\n        id="inlineFormCustomSelect"\n        custom\n      >\n        <option value="0">Choose...</option>\n        <option value="1">One</option>\n        <option value="2">Two</option>\n        <option value="3">Three</option>\n      </Form.Control>\n    </Col>\n    <Col xs="auto" className="my-1">\n      <Form.Check\n        type="checkbox"\n        id="customControlAutosizing"\n        label="Remember my preference"\n        custom\n      />\n    </Col>\n    <Col xs="auto" className="my-1">\n      <Button type="submit">Submit</Button>\n    </Col>\n  </Form.Row>\n</Form>;\n'},dxsv:function(o,n){o.exports='<Form>\n  <Form.Group as={Row} controlId="formPlaintextEmail">\n    <Form.Label column sm="2">\n      Email\n    </Form.Label>\n    <Col sm="10">\n      <Form.Control plaintext readOnly defaultValue="email@example.com" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row} controlId="formPlaintextPassword">\n    <Form.Label column sm="2">\n      Password\n    </Form.Label>\n    <Col sm="10">\n      <Form.Control type="password" placeholder="Password" />\n    </Col>\n  </Form.Group>\n</Form>;\n'},fZum:function(o,n){o.exports='<Form>\n  <Form.Group controlId="exampleForm.ControlInput1">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type="email" placeholder="name@example.com" />\n  </Form.Group>\n  <Form.Group controlId="exampleForm.ControlSelect1">\n    <Form.Label>Example select</Form.Label>\n    <Form.Control as="select">\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group controlId="exampleForm.ControlSelect2">\n    <Form.Label>Example multiple select</Form.Label>\n    <Form.Control as="select" multiple>\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group controlId="exampleForm.ControlTextarea1">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as="textarea" rows="3" />\n  </Form.Group>\n</Form>;\n'},ffOz:function(o,n){o.exports='<Form.Group>\n  <Form.Row>\n    <Form.Label column="lg" lg={2}>\n      Large Text\n    </Form.Label>\n    <Col>\n      <Form.Control size="lg" type="text" placeholder="Large text" />\n    </Col>\n  </Form.Row>\n  <br />\n  <Form.Row>\n    <Form.Label column lg={2}>\n      Normal Text\n    </Form.Label>\n    <Col>\n      <Form.Control type="text" placeholder="Normal text" />\n    </Col>\n  </Form.Row>\n  <br />\n  <Form.Row>\n    <Form.Label column="sm" lg={2}>\n      Small Text\n    </Form.Label>\n    <Col>\n      <Form.Control size="sm" type="text" placeholder="Small text" />\n    </Col>\n  </Form.Row>\n</Form.Group>;\n'},h55t:function(o,n,e){"use strict";var r=e("mXGw"),t=e.n(r),l=e("Q6D8");n.a=function(o){var n=o.title,e=o.children,r=o.theme;return t.a.createElement("aside",{role:"note",className:l[r||"warning"]},n&&t.a.createElement("header",{className:"h5"},n),t.a.createElement("div",null,e))}},iIos:function(o,n){o.exports='<Form.Group>\n  <Form.Control size="lg" type="text" placeholder="Large text" />\n  <br />\n  <Form.Control type="text" placeholder="Normal text" />\n  <br />\n  <Form.Control size="sm" type="text" placeholder="Small text" />\n</Form.Group>;\n'},ljRQ:function(o,n){o.exports="<Form>\n  {['checkbox', 'radio'].map((type) => (\n    <div key={`default-${type}`} className=\"mb-3\">\n      <Form.Check // prettier-ignore\n        type={type}\n        id={`default-${type}`}\n        label={`default ${type}`}\n      />\n\n      <Form.Check\n        disabled\n        type={type}\n        label={`disabled ${type}`}\n        id={`disabled-default-${type}`}\n      />\n    </div>\n  ))}\n</Form>;\n"},n3XQ:function(o,n){o.exports='<Form>\n  <fieldset disabled>\n    <Form.Group>\n      <Form.Label htmlFor="disabledTextInput">Disabled input</Form.Label>\n      <Form.Control id="disabledTextInput" placeholder="Disabled input" />\n    </Form.Group>\n    <Form.Group>\n      <Form.Label htmlFor="disabledSelect">Disabled select menu</Form.Label>\n      <Form.Control as="select" id="disabledSelect">\n        <option>Disabled select</option>\n      </Form.Control>\n    </Form.Group>\n    <Form.Group>\n      <Form.Check\n        type="checkbox"\n        id="disabledFieldsetCheck"\n        label="Can\'t check this"\n      />\n    </Form.Group>\n    <Button type="submit">Submit</Button>\n  </fieldset>\n</Form>;\n'},oWAn:function(o,n){o.exports='<Form.Control type="text" placeholder="Readonly input here..." readOnly />;\n'},p7Cg:function(o,n){o.exports='<Form>\n  <Form.File // prettier-ignore\n    id="custom-file-translate-html"\n    label="Voeg je document toe"\n    data-browse="Bestand kiezen"\n    custom\n  />\n</Form>;\n'},pFPK:function(o,n){o.exports='<Form>\n  <Form.Group controlId="exampleForm.SelectCustomHtmlSize">\n    <Form.Label>Select with three visible options</Form.Label>\n    <Form.Control as="select" htmlSize={3} custom>\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </Form.Control>\n  </Form.Group>\n</Form>;\n'},pbHP:function(o,n){o.exports='<Form>\n  <Form.Row className="align-items-center">\n    <Col xs="auto">\n      <Form.Label htmlFor="inlineFormInput" srOnly>\n        Name\n      </Form.Label>\n      <Form.Control\n        className="mb-2"\n        id="inlineFormInput"\n        placeholder="Jane Doe"\n      />\n    </Col>\n    <Col xs="auto">\n      <Form.Label htmlFor="inlineFormInputGroup" srOnly>\n        Username\n      </Form.Label>\n      <InputGroup className="mb-2">\n        <InputGroup.Prepend>\n          <InputGroup.Text>@</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl id="inlineFormInputGroup" placeholder="Username" />\n      </InputGroup>\n    </Col>\n    <Col xs="auto">\n      <Form.Check\n        type="checkbox"\n        id="autoSizingCheck"\n        className="mb-2"\n        label="Remember me"\n      />\n    </Col>\n    <Col xs="auto">\n      <Button type="submit" className="mb-2">\n        Submit\n      </Button>\n    </Col>\n  </Form.Row>\n</Form>;\n'},pcjb:function(o,n){o.exports='<Form>\n  <Form.Row>\n    <Form.Group as={Col} controlId="formGridEmail">\n      <Form.Label>Email</Form.Label>\n      <Form.Control type="email" placeholder="Enter email" />\n    </Form.Group>\n\n    <Form.Group as={Col} controlId="formGridPassword">\n      <Form.Label>Password</Form.Label>\n      <Form.Control type="password" placeholder="Password" />\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Group controlId="formGridAddress1">\n    <Form.Label>Address</Form.Label>\n    <Form.Control placeholder="1234 Main St" />\n  </Form.Group>\n\n  <Form.Group controlId="formGridAddress2">\n    <Form.Label>Address 2</Form.Label>\n    <Form.Control placeholder="Apartment, studio, or floor" />\n  </Form.Group>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId="formGridCity">\n      <Form.Label>City</Form.Label>\n      <Form.Control />\n    </Form.Group>\n\n    <Form.Group as={Col} controlId="formGridState">\n      <Form.Label>State</Form.Label>\n      <Form.Control as="select" defaultValue="Choose...">\n        <option>Choose...</option>\n        <option>...</option>\n      </Form.Control>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId="formGridZip">\n      <Form.Label>Zip</Form.Label>\n      <Form.Control />\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Group id="formGridCheckbox">\n    <Form.Check type="checkbox" label="Check me out" />\n  </Form.Group>\n\n  <Button variant="primary" type="submit">\n    Submit\n  </Button>\n</Form>;\n'},"r+yI":function(o,n,e){"use strict";e.d(n,"a",(function(){return a}));e("9VmF");var r=e("mXGw"),t=e.n(r),l=e("Snbm"),m=e("aArQ");function a(o){return function(n){var e=n.location.pathname,r=m.a;return(e.startsWith("/getting-started")||e.startsWith("/layout")||e.startsWith("/components")||e.startsWith("/utilities"))&&(r=l.a),t.a.createElement(r,{location:n.location},t.a.createElement(o,n))}}},sOTj:function(o,n){o.exports='<Form>\n  <Form.Group controlId="formGroupEmail">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type="email" placeholder="Enter email" />\n  </Form.Group>\n  <Form.Group controlId="formGroupPassword">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type="password" placeholder="Password" />\n  </Form.Group>\n</Form>;\n'},"u/9a":function(o,n){o.exports='<Form>\n  <Row>\n    <Col>\n      <Form.Control placeholder="First name" />\n    </Col>\n    <Col>\n      <Form.Control placeholder="Last name" />\n    </Col>\n  </Row>\n</Form>;\n'},uDF0:function(o,n){o.exports='<Form>\n  <Form.Group as={Row} controlId="formHorizontalEmail">\n    <Form.Label column sm={2}>\n      Email\n    </Form.Label>\n    <Col sm={10}>\n      <Form.Control type="email" placeholder="Email" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row} controlId="formHorizontalPassword">\n    <Form.Label column sm={2}>\n      Password\n    </Form.Label>\n    <Col sm={10}>\n      <Form.Control type="password" placeholder="Password" />\n    </Col>\n  </Form.Group>\n  <fieldset>\n    <Form.Group as={Row}>\n      <Form.Label as="legend" column sm={2}>\n        Radios\n      </Form.Label>\n      <Col sm={10}>\n        <Form.Check\n          type="radio"\n          label="first radio"\n          name="formHorizontalRadios"\n          id="formHorizontalRadios1"\n        />\n        <Form.Check\n          type="radio"\n          label="second radio"\n          name="formHorizontalRadios"\n          id="formHorizontalRadios2"\n        />\n        <Form.Check\n          type="radio"\n          label="third radio"\n          name="formHorizontalRadios"\n          id="formHorizontalRadios3"\n        />\n      </Col>\n    </Form.Group>\n  </fieldset>\n  <Form.Group as={Row} controlId="formHorizontalCheck">\n    <Col sm={{ span: 10, offset: 2 }}>\n      <Form.Check label="Remember me" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row}>\n    <Col sm={{ span: 10, offset: 2 }}>\n      <Button type="submit">Sign in</Button>\n    </Col>\n  </Form.Group>\n</Form>;\n'},"v1/c":function(o,n){o.exports='<Form>\n  <Form.Group controlId="formBasicRangeCustom">\n    <Form.Label>Range</Form.Label>\n    <Form.Control type="range" custom />\n  </Form.Group>\n</Form>;\n'},vc4Z:function(o,n){o.exports='<Form>\n  <Form.Row>\n    <Col>\n      <Form.Control placeholder="First name" />\n    </Col>\n    <Col>\n      <Form.Control placeholder="Last name" />\n    </Col>\n  </Form.Row>\n</Form>;\n'},xRI8:function(o,n){o.exports='<Form inline>\n  <Form.Label className="my-1 mr-2" htmlFor="inlineFormCustomSelectPref">\n    Preference\n  </Form.Label>\n  <Form.Control\n    as="select"\n    className="my-1 mr-sm-2"\n    id="inlineFormCustomSelectPref"\n    custom\n  >\n    <option value="0">Choose...</option>\n    <option value="1">One</option>\n    <option value="2">Two</option>\n    <option value="3">Three</option>\n  </Form.Control>\n  <Form.Check\n    type="checkbox"\n    className="my-1 mr-sm-2"\n    id="customControlInline"\n    label="Remember my preference"\n    custom\n  />\n  <Button type="submit" className="my-1">\n    Submit\n  </Button>\n</Form>;\n'},ys3m:function(o,n){o.exports='<Form inline>\n  <Form.Label htmlFor="inlineFormInputName2" srOnly>\n    Name\n  </Form.Label>\n  <Form.Control\n    className="mb-2 mr-sm-2"\n    id="inlineFormInputName2"\n    placeholder="Jane Doe"\n  />\n  <Form.Label htmlFor="inlineFormInputGroupUsername2" srOnly>\n    Username\n  </Form.Label>\n  <InputGroup className="mb-2 mr-sm-2">\n    <InputGroup.Prepend>\n      <InputGroup.Text>@</InputGroup.Text>\n    </InputGroup.Prepend>\n    <FormControl id="inlineFormInputGroupUsername2" placeholder="Username" />\n  </InputGroup>\n  <Form.Check\n    type="checkbox"\n    className="mb-2 mr-sm-2"\n    id="inlineFormCheck"\n    label="Remember me"\n  />\n  <Button type="submit" className="mb-2">\n    Submit\n  </Button>\n</Form>;\n'},zq7G:function(o,n){o.exports='<>\n  <Form.Label htmlFor="inputPassword5">Password</Form.Label>\n  <Form.Control\n    type="password"\n    id="inputPassword5"\n    aria-describedby="passwordHelpBlock"\n  />\n  <Form.Text id="passwordHelpBlock" muted>\n    Your password must be 8-20 characters long, contain letters and numbers, and\n    must not contain spaces, special characters, or emoji.\n  </Form.Text>\n</>;\n'},zyQW:function(o,n){o.exports='<Form>\n  <Form.Check // prettier-ignore\n    type="switch"\n    id="custom-switch"\n    label="Check this switch"\n  />\n  <Form.Check // prettier-ignore\n    disabled\n    type="switch"\n    label="disabled switch"\n    id="disabled-custom-switch"\n  />\n</Form>;\n'}}]);
//# sourceMappingURL=component---src-pages-components-forms-js-f267ab7ffa557b6e6095.js.map