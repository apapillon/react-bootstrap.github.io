(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{"5k6N":function(o,n){o.exports='import React, { useState } from \'react\';\nimport Button from \'react-bootstrap/Button\';\nimport Modal from \'react-bootstrap/Modal\';\n\nfunction Example() {\n  const [show, setShow] = useState(false);\n\n  return (\n    <>\n      <Button variant="primary" onClick={() => setShow(true)}>\n        Custom Width Modal\n      </Button>\n\n      <Modal\n        show={show}\n        onHide={() => setShow(false)}\n        dialogClassName="modal-90w"\n        aria-labelledby="example-custom-modal-styling-title"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id="example-custom-modal-styling-title">\n            Custom Modal Styling\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            Ipsum molestiae natus adipisci modi eligendi? Debitis amet quae unde\n            commodi aspernatur enim, consectetur. Cumque deleniti temporibus\n            ipsam atque a dolores quisquam quisquam adipisci possimus\n            laboriosam. Quibusdam facilis doloribus debitis! Sit quasi quod\n            accusamus eos quod. Ab quos consequuntur eaque quo rem! Mollitia\n            reiciendis porro quo magni incidunt dolore amet atque facilis ipsum\n            deleniti rem!\n          </p>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nrender(<Example />);\n'},"9klH":function(o,n,e){"use strict";e.r(n),e.d(n,"_frontmatter",(function(){return R})),e.d(n,"default",(function(){return A}));var t,a=e("wx14"),l=e("zLVn"),d=(e("mXGw"),e("7ljp")),r=e("Snbm"),i=e("vXRK"),s=e("1u5/"),m=e("l8p8"),c=e.n(m),u=e("TeCf"),p=e.n(u),h=e("tQfX"),M=e.n(h),x=e("c6wA"),b=e.n(x),y=e("oudZ"),w=e.n(y),f=e("5k6N"),C=e.n(f),B=e("fEfa"),S=e.n(B),g=e("smJP"),O=e.n(g),j=e("Wi8L"),v=e.n(j),T=e("Yaa7"),k=e.n(T),F=e("bTvO"),H=e.n(F),N=["components"],R={},E=(t="PageHeader",function(o){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),Object(d.mdx)("div",o)}),L={query:"3067203214",_frontmatter:R},q=r.a;function A(o){var n=o.components,e=Object(l.a)(o,N);return Object(d.mdx)(q,Object(a.a)({},L,e,{components:n,mdxType:"MDXLayout"}),Object(d.mdx)(E,{title:"Modals",subTitle:"Add dialogs to your site for lightboxes, user notifications, or completely custom content.",mdxType:"PageHeader"}),Object(d.mdx)("h2",{id:"overview"},"Overview"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"Modals are positioned over everything else in the document and remove\nscroll from the ",Object(d.mdx)("inlineCode",{parentName:"li"},"<body>")," so that modal content scrolls instead."),Object(d.mdx)("li",{parentName:"ul"},"Modals are ",Object(d.mdx)("em",null,"unmounted")," when closed."),Object(d.mdx)("li",{parentName:"ul"},"Bootstrap only supports ",Object(d.mdx)("strong",null,"one")," modal window at a time.\nNested modals aren't supported, but if you really need them, the\nunderlying ",Object(d.mdx)("code",null,"@restart/ui")," library can support them if you're\nwilling."),Object(d.mdx)("li",{parentName:"ul"},'Modal\'s "trap" focus in them, ensuring the keyboard navigation cycles\nthrough the modal, and not the rest of the page.'),Object(d.mdx)("li",{parentName:"ul"},"Unlike vanilla Bootstrap, ",Object(d.mdx)("code",null,"autoFocus")," works in Modals\nbecause React handles the implementation.")),Object(d.mdx)("h2",{id:"examples"},"Examples"),Object(d.mdx)("h3",{id:"static-markup"},"Static Markup"),Object(d.mdx)("p",null,"Below is a ",Object(d.mdx)("em",null,"static")," modal dialog (without the positioning) to\ndemonstrate the look and feel of the Modal."),Object(d.mdx)(s.a,{codeText:c.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h3",{id:"live-demo"},"Live demo"),Object(d.mdx)("p",null,"A modal with header, body, and set of actions in the footer. Use\n",Object(d.mdx)("inlineCode",{parentName:"p"},"<Modal/>")," in combination with other components to show or hide your\nModal. The ",Object(d.mdx)("inlineCode",{parentName:"p"},"<Modal/>"),' Component comes with a few convenient "sub components": ',Object(d.mdx)("inlineCode",{parentName:"p"},"<Modal.Header/>"),",\n",Object(d.mdx)("inlineCode",{parentName:"p"},"<Modal.Title/>"),", ",Object(d.mdx)("inlineCode",{parentName:"p"},"<Modal.Body/>"),", and ",Object(d.mdx)("inlineCode",{parentName:"p"},"<Modal.Footer/>"),", which you can use to build the Modal content."),Object(d.mdx)(s.a,{codeText:p.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h3",{id:"static-backdrop"},"Static backdrop"),Object(d.mdx)("p",null,"When backdrop is set to static, the modal will not close when clicking\noutside it. Click the button below to try it."),Object(d.mdx)(s.a,{codeText:M.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h3",{id:"without-animation"},"Without Animation"),Object(d.mdx)("p",null,"A Modal can also be without an animation. For that set the ",Object(d.mdx)("inlineCode",{parentName:"p"},"animation"),"\nprop to ",Object(d.mdx)("inlineCode",{parentName:"p"},"false"),"."),Object(d.mdx)(s.a,{codeText:O.a,mdxType:"ReactPlayground"}),Object(d.mdx)("div",{className:"bs-callout bs-callout-info"},Object(d.mdx)("div",{className:"h4"},"Additional Import Options"),Object(d.mdx)("p",null,"The Modal Header, Title, Body, and Footer components are available as static properties the ",Object(d.mdx)("code",null,"<Modal/>")," component, but you can also, import them directly like: ",Object(d.mdx)("code",null,'require("react-bootstrap/ModalHeader")'),".")),Object(d.mdx)("h3",{id:"vertically-centered"},"Vertically centered"),Object(d.mdx)("p",null,"You can vertically center a modal by passing the ",Object(d.mdx)("inlineCode",{parentName:"p"},"centered")," prop."),Object(d.mdx)(s.a,{codeText:S.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h3",{id:"using-the-grid"},"Using the grid"),Object(d.mdx)("p",null,"You can use grid layouts within a model using regular grid components\ninside the modal content."),Object(d.mdx)(s.a,{codeText:v.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h3",{id:"focus-on-specific-element"},"Focus on specific element"),Object(d.mdx)("p",null,"You can focus on an element inside the modal using ",Object(d.mdx)("inlineCode",{parentName:"p"},"autoFocus")," attribute on the element."),Object(d.mdx)(s.a,{codeText:k.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h2",{id:"optional-sizes"},"Optional Sizes"),Object(d.mdx)("p",null,"You can specify a Bootstrap large or small modal by using the\n",Object(d.mdx)("inlineCode",{parentName:"p"},"size")," prop."),Object(d.mdx)(s.a,{codeText:b.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h3",{id:"fullscreen-modal"},"Fullscreen Modal"),Object(d.mdx)("p",null,"You can use the ",Object(d.mdx)("inlineCode",{parentName:"p"},"fullscreen")," prop to make the modal\nfullscreen. Specifying a breakpoint will only set the modal as\nfullscreen ",Object(d.mdx)("strong",{parentName:"p"},"below")," the breakpoint size."),Object(d.mdx)(s.a,{codeText:w.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h3",{id:"sizing-modals-using-custom-css"},"Sizing modals using custom CSS"),Object(d.mdx)("p",null,"You can apply custom css to the modal dialog div using the\n",Object(d.mdx)("inlineCode",{parentName:"p"},"dialogClassName")," prop. Example is using a custom css class with width\nset to 90%."),Object(d.mdx)(s.a,{codeText:C.a,exampleClassName:H.a.modal90w,mdxType:"ReactPlayground"}),Object(d.mdx)("h2",{id:"api"},"API"),Object(d.mdx)(i.a,{metadata:e.data.Modal,mdxType:"ComponentApi"}),Object(d.mdx)(i.a,{metadata:e.data.ModalDialog,mdxType:"ComponentApi"}),Object(d.mdx)(i.a,{metadata:e.data.ModalHeader,mdxType:"ComponentApi"}),Object(d.mdx)(i.a,{metadata:e.data.ModalTitle,mdxType:"ComponentApi"}),Object(d.mdx)(i.a,{metadata:e.data.ModalBody,mdxType:"ComponentApi"}),Object(d.mdx)(i.a,{metadata:e.data.ModalFooter,mdxType:"ComponentApi"}))}A.isMDXComponent=!0},TeCf:function(o,n){o.exports="import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction Example() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Launch demo modal\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nrender(<Example />);\n"},Wi8L:function(o,n){o.exports="import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\n\nfunction MydModalWithGrid(props) {\n  return (\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\">\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Using Grid in Modal\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"show-grid\">\n        <Container>\n          <Row>\n            <Col xs={12} md={8}>\n              .col-xs-12 .col-md-8\n            </Col>\n            <Col xs={6} md={4}>\n              .col-xs-6 .col-md-4\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={6} md={4}>\n              .col-xs-6 .col-md-4\n            </Col>\n            <Col xs={6} md={4}>\n              .col-xs-6 .col-md-4\n            </Col>\n            <Col xs={6} md={4}>\n              .col-xs-6 .col-md-4\n            </Col>\n          </Row>\n        </Container>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nfunction App() {\n  const [modalShow, setModalShow] = useState(false);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n        Launch modal with grid\n      </Button>\n\n      <MydModalWithGrid show={modalShow} onHide={() => setModalShow(false)} />\n    </>\n  );\n}\n\nrender(<App />);\n"},Yaa7:function(o,n){o.exports='import React, { useState } from \'react\';\nimport Button from \'react-bootstrap/Button\';\nimport Form from \'react-bootstrap/Form\';\nimport Modal from \'react-bootstrap/Modal\';\n\nfunction Example() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant="primary" onClick={handleShow}>\n        Launch demo modal\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type="email"\n                placeholder="name@example.com"\n                autoFocus\n              />\n            </Form.Group>\n            <Form.Group\n              className="mb-3"\n              controlId="exampleForm.ControlTextarea1"\n            >\n              <Form.Label>Example textarea</Form.Label>\n              <Form.Control as="textarea" rows={3} />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant="secondary" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant="primary" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nrender(<Example />);\n'},bTvO:function(o,n,e){o.exports={listGroup:"examples-module--list-group--IXNCn",ratioExamples:"examples-module--ratio-examples--Gv1Nw",staticDropdownMenu:"examples-module--static-dropdown-menu--kkfyD clearfix",customDropdownMenu:"examples-module--custom-dropdown-menu--2e_DR",overlayContained:"examples-module--overlay-contained--11C4s"}},c6wA:function(o,n){o.exports='import React, { useState } from \'react\';\nimport Button from \'react-bootstrap/Button\';\nimport Modal from \'react-bootstrap/Modal\';\n\nfunction Example() {\n  const [smShow, setSmShow] = useState(false);\n  const [lgShow, setLgShow] = useState(false);\n\n  return (\n    <>\n      <Button onClick={() => setSmShow(true)} className="me-2">\n        Small modal\n      </Button>\n      <Button onClick={() => setLgShow(true)}>Large modal</Button>\n      <Modal\n        size="sm"\n        show={smShow}\n        onHide={() => setSmShow(false)}\n        aria-labelledby="example-modal-sizes-title-sm"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id="example-modal-sizes-title-sm">\n            Small Modal\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>...</Modal.Body>\n      </Modal>\n      <Modal\n        size="lg"\n        show={lgShow}\n        onHide={() => setLgShow(false)}\n        aria-labelledby="example-modal-sizes-title-lg"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id="example-modal-sizes-title-lg">\n            Large Modal\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>...</Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nrender(<Example />);\n'},fEfa:function(o,n){o.exports='import Button from \'react-bootstrap/Button\';\nimport Modal from \'react-bootstrap/Modal\';\n\nfunction MyVerticallyCenteredModal(props) {\n  return (\n    <Modal\n      {...props}\n      size="lg"\n      aria-labelledby="contained-modal-title-vcenter"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id="contained-modal-title-vcenter">\n          Modal heading\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Centered Modal</h4>\n        <p>\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\n          consectetur ac, vestibulum at eros.\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nfunction App() {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n      <Button variant="primary" onClick={() => setModalShow(true)}>\n        Launch vertically centered modal\n      </Button>\n\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n\nrender(<App />);\n'},l8p8:function(o,n){o.exports="import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction StaticExample() {\n  return (\n    <div\n      className=\"modal show\"\n      style={{ display: 'block', position: 'initial' }}\n    >\n      <Modal.Dialog>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal title</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p>Modal body text goes here.</p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\">Close</Button>\n          <Button variant=\"primary\">Save changes</Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    </div>\n  );\n}\n\nexport default StaticExample;\n"},oudZ:function(o,n){o.exports="import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction Example() {\n  const values = [true, 'sm-down', 'md-down', 'lg-down', 'xl-down', 'xxl-down'];\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n\n  function handleShow(breakpoint) {\n    setFullscreen(breakpoint);\n    setShow(true);\n  }\n\n  return (\n    <>\n      {values.map((v, idx) => (\n        <Button key={idx} className=\"me-2 mb-2\" onClick={() => handleShow(v)}>\n          Full screen\n          {typeof v === 'string' && `below ${v.split('-')[0]}`}\n        </Button>\n      ))}\n      <Modal show={show} fullscreen={fullscreen} onHide={() => setShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Modal body content</Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nrender(<Example />);\n"},smJP:function(o,n){o.exports="import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction Example() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Launch demo modal\n      </Button>\n\n      <Modal show={show} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nrender(<Example />);\n"},tQfX:function(o,n){o.exports='import React, { useState } from \'react\';\nimport Button from \'react-bootstrap/Button\';\nimport Modal from \'react-bootstrap/Modal\';\n\nfunction Example() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant="primary" onClick={handleShow}>\n        Launch static backdrop modal\n      </Button>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop="static"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Modal title</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          I will not close if you click outside me. Don\'t even try to press\n          escape key.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant="secondary" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant="primary">Understood</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nrender(<Example />);\n'}}]);
//# sourceMappingURL=component---src-pages-components-modal-mdx-72b211b8dbbcb17f5367.js.map