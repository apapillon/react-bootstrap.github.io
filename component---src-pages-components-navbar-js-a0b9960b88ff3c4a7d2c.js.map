{"version":3,"sources":["webpack:///./src/examples/Navbar/Collapsible.js","webpack:///./src/pages/components/navbar.js","webpack:///./src/components/DocLink.js","webpack:///./src/examples/Navbar/ColorSchemes.js","webpack:///./src/examples/Navbar/TextLink.js","webpack:///./src/components/Callout-styles.module.scss","webpack:///./src/examples/Navbar/NavScroll.js","webpack:///./src/examples/Navbar/ContainerOutside.js","webpack:///./src/examples/Navbar/Brand.js","webpack:///./src/examples/Navbar/ContainerInside.js","webpack:///./src/components/Callout.js","webpack:///./src/examples/Navbar/Offcanvas.js","webpack:///./src/examples/Navbar/Basic.js","webpack:///./src/withLayout.js"],"names":["module","exports","withLayout","data","h","id","className","href","codeText","NavbarBasic","NavbarBrand","NavbarTextLink","NavbarColorSchemes","ContainerOutside","ContainerInside","path","NavScroll","theme","NavbarCollapsible","NavbarOffcanvas","metadata","Navbar","exportedBy","NavbarToggle","NavbarCollapse","DocLink","children","config","Component","props","pathname","location","Layout","DefaultLayout","startsWith","ApiLayout"],"mappings":"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","file":"component---src-pages-components-navbar-js-a0b9960b88ff3c4a7d2c.js","sourcesContent":["module.exports = \"<Navbar collapseOnSelect expand=\\\"lg\\\" bg=\\\"dark\\\" variant=\\\"dark\\\">\\n  <Container>\\n  <Navbar.Brand href=\\\"#home\\\">React-Bootstrap</Navbar.Brand>\\n  <Navbar.Toggle aria-controls=\\\"responsive-navbar-nav\\\" />\\n  <Navbar.Collapse id=\\\"responsive-navbar-nav\\\">\\n    <Nav className=\\\"me-auto\\\">\\n      <Nav.Link href=\\\"#features\\\">Features</Nav.Link>\\n      <Nav.Link href=\\\"#pricing\\\">Pricing</Nav.Link>\\n      <NavDropdown title=\\\"Dropdown\\\" id=\\\"collasible-nav-dropdown\\\">\\n        <NavDropdown.Item href=\\\"#action/3.1\\\">Action</NavDropdown.Item>\\n        <NavDropdown.Item href=\\\"#action/3.2\\\">Another action</NavDropdown.Item>\\n        <NavDropdown.Item href=\\\"#action/3.3\\\">Something</NavDropdown.Item>\\n        <NavDropdown.Divider />\\n        <NavDropdown.Item href=\\\"#action/3.4\\\">Separated link</NavDropdown.Item>\\n      </NavDropdown>\\n    </Nav>\\n    <Nav>\\n      <Nav.Link href=\\\"#deets\\\">More deets</Nav.Link>\\n      <Nav.Link eventKey={2} href=\\\"#memes\\\">\\n        Dank memes\\n      </Nav.Link>\\n    </Nav>\\n  </Navbar.Collapse>\\n  </Container>\\n</Navbar>;\\n\"","import { graphql } from 'gatsby';\n\nimport DocLink from '../../components/DocLink';\nimport LinkedHeading from '../../components/LinkedHeading';\nimport Callout from '../../components/Callout';\nimport CodeBlock from '../../components/CodeBlock';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport NavbarBasic from '../../examples/Navbar/Basic';\nimport NavbarBrand from '../../examples/Navbar/Brand';\nimport NavbarCollapsible from '../../examples/Navbar/Collapsible';\nimport NavbarColorSchemes from '../../examples/Navbar/ColorSchemes';\nimport NavScroll from '../../examples/Navbar/NavScroll';\nimport NavbarOffcanvas from '../../examples/Navbar/Offcanvas';\nimport NavbarTextLink from '../../examples/Navbar/TextLink';\nimport ContainerOutside from '../../examples/Navbar/ContainerOutside';\nimport ContainerInside from '../../examples/Navbar/ContainerInside';\nimport withLayout from '../../withLayout';\n\nexport default withLayout(function NaπvbarSection({ data }) {\n  return (\n    <>\n      <LinkedHeading h=\"1\" id=\"navbars\">\n        Navbars\n      </LinkedHeading>\n      <p className=\"lead\">\n        A powerful, responsive navigation header, the navbar. Includes support\n        for branding, navigation, and more\n      </p>\n\n      <LinkedHeading h=\"2\" id=\"navbars-overview\">\n        Overview\n      </LinkedHeading>\n      <p>\n        Here’s what you need to know before getting started with the Navbar:\n      </p>\n      <ul>\n        <li>\n          Use the <code>expand</code> prop to allow for collapsing the Navbar at\n          lower breakpoints.\n        </li>\n        <li>\n          Navbars and their contents are fluid by default. Use optional{' '}\n          <a href=\"#navbars-containers\">containers </a> to limit their\n          horizontal width.\n        </li>\n        <li>Use spacing and flex utilities to size and position content</li>\n      </ul>\n\n      <p>\n        A responsive navigation header, including support for branding,\n        navigation, and more. Here’s an example of all the sub-components\n        included in a responsive light-themed navbar that automatically\n        collapses at the lg (large) breakpoint.\n      </p>\n\n      <ReactPlayground codeText={NavbarBasic} />\n      <LinkedHeading h=\"2\" id=\"navbars-brand\">\n        Brand\n      </LinkedHeading>\n      <p>\n        A simple flexible branding component. Images are supported but will\n        likely require custom styling to work well.\n      </p>\n      <ReactPlayground codeText={NavbarBrand} />\n\n      <LinkedHeading h=\"2\" id=\"navbars-form\">\n        Forms\n      </LinkedHeading>\n\n      <LinkedHeading h=\"2\" id=\"navbars-text-link\">\n        Text and Non-nav links\n      </LinkedHeading>\n      <p>\n        Loose text and links can be wrapped <code>Navbar.Text</code> in order to\n        correctly align it vertically.\n      </p>\n      <ReactPlayground codeText={NavbarTextLink} />\n\n      <LinkedHeading h=\"2\" id=\"navbars-colors\">\n        Color schemes\n      </LinkedHeading>\n      <p>\n        Theming the navbar has never been easier thanks to the combination of\n        theming classes and background-color utilities. Choose from{' '}\n        <code>variant=\"light\"</code> for use with light background colors, or{' '}\n        <code>variant=\"dark\"</code> for dark background colors. Then, customize\n        with the <code>bg</code> prop or any custom css!\n      </p>\n\n      <ReactPlayground codeText={NavbarColorSchemes} />\n\n      <LinkedHeading h=\"2\" id=\"navbars-containers\">\n        Containers\n      </LinkedHeading>\n      <p>\n        While not required, you can wrap the Navbar in a{' '}\n        <code>{'<Container>'}</code> component to center it on a page, or add\n        one within to only center the contents of a{' '}\n        <a href=\"#navbars-placement\">fixed or static top navbar</a>.\n      </p>\n      <ReactPlayground codeText={ContainerOutside} />\n\n      <p>\n        When the container is within your navbar, its horizontal padding is\n        removed at breakpoints lower than your specified{' '}\n        <code>{`expand={'sm' | 'md' | 'lg' | 'xl' | 'xxl'}`}</code> prop. This\n        ensures we’re not doubling up on padding unnecessarily on lower\n        viewports when your navbar is collapsed.\n      </p>\n      <ReactPlayground codeText={ContainerInside} />\n\n      <LinkedHeading h=\"2\" id=\"navbars-placement\">\n        Placement\n      </LinkedHeading>\n      <p>\n        You can use Bootstrap's{' '}\n        <DocLink path=\"/utilities/position/\">position utilities</DocLink> to\n        place navbars in non-static positions. Choose from fixed to the top,\n        fixed to the bottom, or stickied to the top (scrolls with the page until\n        it reaches the top, then stays there). Fixed navbars use{' '}\n        <code>position: fixed</code>, meaning they’re pulled from the normal\n        flow of the DOM and may require custom CSS (e.g., padding-top on the{' '}\n        <code>{'<body>'}</code>) to prevent overlap with other elements. Also\n        note that{' '}\n        <strong>\n          <code>.sticky-top</code> uses <code>position: sticky</code>, which{' '}\n          <a href=\"https://caniuse.com/#feat=css-sticky\">\n            isn’t fully supported in every browser\n          </a>\n        </strong>\n        .\n      </p>\n\n      <p>\n        Since these positioning needs are so common for Navbars, we've added\n        convenience props for them\n      </p>\n      <h3 className=\"h4\">Fixed top</h3>\n      <CodeBlock codeText={` <Navbar fixed=\"top\" />`} />\n\n      <h3 className=\"h4\">Fixed bottom</h3>\n      <CodeBlock codeText={` <Navbar fixed=\"bottom\" />`} />\n\n      <h3 className=\"h4\">Sticky top</h3>\n      <CodeBlock codeText={` <Navbar sticky=\"top\" />`} />\n\n      <LinkedHeading h=\"2\" id=\"navbars-nav-scroll\">\n        Scrolling\n      </LinkedHeading>\n      <p>\n        You can use the <code>navbarScroll</code> prop in a{' '}\n        <code>{'<Nav>'}</code> to enable vertical scrolling within the\n        toggleable contents of a collapsed navbar. See the{' '}\n        <DocLink path=\"/components/navbar/#scrolling\">Bootstrap docs</DocLink>{' '}\n        for more information.\n      </p>\n      <ReactPlayground codeText={NavScroll} />\n\n      <LinkedHeading h=\"2\" id=\"navbars-mobile-friendly\">\n        Responsive behaviors\n      </LinkedHeading>\n      <p>\n        Use the <code>expand</code> prop as well as the{' '}\n        <code>Navbar.Toggle</code> and <code>Navbar.Collapse</code> components\n        to control when content collapses behind a button.\n      </p>\n      <p>\n        Set the <code>defaultExpanded</code> prop to make the Navbar start\n        expanded. Set <code>collapseOnSelect</code> to make the Navbar collapse\n        automatically when the user selects an item. You can also finely control\n        the collapsing behavior by using the <code>expanded</code> and{' '}\n        <code>onToggle</code> props.\n      </p>\n\n      <Callout theme=\"warning\">\n        Watch out! You <strong>need</strong> to provide a breakpoint value to{' '}\n        <code>expand</code> in order for the Navbar to collapse at all.\n      </Callout>\n      <ReactPlayground codeText={NavbarCollapsible} />\n\n      <LinkedHeading h=\"3\" id=\"navbar-offcanvas\">\n        Offcanvas\n      </LinkedHeading>\n\n      <p>\n        Transform your expanding and collapsing navbar into an offcanvas drawer\n        with the offcanvas component. We extend both the offcanvas default\n        styles and use the <code>expand</code> prop to create a dynamic and\n        flexible navigation sidebar.\n      </p>\n\n      <p>\n        In the example below, to create an offcanvas navbar that is always\n        collapsed across all breakpoints, set the <code>expand</code> prop to{' '}\n        <code>false</code>.\n      </p>\n\n      <ReactPlayground codeText={NavbarOffcanvas} />\n\n      <LinkedHeading h=\"2\" id=\"navbar-api\">\n        API\n      </LinkedHeading>\n\n      <ComponentApi metadata={data.Navbar} />\n      <ComponentApi metadata={data.NavbarBrand} exportedBy={data.Navbar} />\n      <ComponentApi metadata={data.NavbarToggle} exportedBy={data.Navbar} />\n      <ComponentApi metadata={data.NavbarCollapse} exportedBy={data.Navbar} />\n    </>\n  );\n});\n\nexport const query = graphql`\n  query NavbarQuery {\n    Navbar: componentMetadata(displayName: { eq: \"Navbar\" }) {\n      ...ComponentApi_metadata\n    }\n    NavbarBrand: componentMetadata(displayName: { eq: \"NavbarBrand\" }) {\n      ...ComponentApi_metadata\n    }\n    NavbarToggle: componentMetadata(displayName: { eq: \"NavbarToggle\" }) {\n      ...ComponentApi_metadata\n    }\n    NavbarCollapse: componentMetadata(displayName: { eq: \"NavbarCollapse\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\n","function DocLink({ path, children }) {\n  return <a href={`${config.docsUrl}${path}`}>{children}</a>;\n}\n\nexport default DocLink;\n","module.exports = \"<>\\n  <Navbar bg=\\\"dark\\\" variant=\\\"dark\\\">\\n    <Container>\\n    <Navbar.Brand href=\\\"#home\\\">Navbar</Navbar.Brand>\\n    <Nav className=\\\"me-auto\\\">\\n      <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n      <Nav.Link href=\\\"#features\\\">Features</Nav.Link>\\n      <Nav.Link href=\\\"#pricing\\\">Pricing</Nav.Link>\\n    </Nav>\\n    </Container>\\n  </Navbar>\\n  <br />\\n  <Navbar bg=\\\"primary\\\" variant=\\\"dark\\\">\\n    <Container>\\n    <Navbar.Brand href=\\\"#home\\\">Navbar</Navbar.Brand>\\n    <Nav className=\\\"me-auto\\\">\\n      <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n      <Nav.Link href=\\\"#features\\\">Features</Nav.Link>\\n      <Nav.Link href=\\\"#pricing\\\">Pricing</Nav.Link>\\n    </Nav>\\n    </Container>\\n  </Navbar>\\n\\n  <br />\\n  <Navbar bg=\\\"light\\\" variant=\\\"light\\\">\\n    <Container>\\n    <Navbar.Brand href=\\\"#home\\\">Navbar</Navbar.Brand>\\n    <Nav className=\\\"me-auto\\\">\\n      <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n      <Nav.Link href=\\\"#features\\\">Features</Nav.Link>\\n      <Nav.Link href=\\\"#pricing\\\">Pricing</Nav.Link>\\n    </Nav>\\n    </Container>\\n  </Navbar>\\n</>;\\n\"","module.exports = \"<Navbar>\\n  <Container>\\n    <Navbar.Brand href=\\\"#home\\\">Navbar with text</Navbar.Brand>\\n    <Navbar.Toggle />\\n    <Navbar.Collapse className=\\\"justify-content-end\\\">\\n      <Navbar.Text>\\n        Signed in as: <a href=\\\"#login\\\">Mark Otto</a>\\n      </Navbar.Text>\\n    </Navbar.Collapse>\\n  </Container>\\n</Navbar>;\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"callout\":\"Callout-styles-module--callout--1_K3h\",\"warning\":\"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h\",\"danger\":\"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h\"};","module.exports = \"<Navbar bg=\\\"light\\\" expand=\\\"lg\\\">\\n  <Container fluid>\\n    <Navbar.Brand href=\\\"#\\\">Navbar scroll</Navbar.Brand>\\n    <Navbar.Toggle aria-controls=\\\"navbarScroll\\\" />\\n    <Navbar.Collapse id=\\\"navbarScroll\\\">\\n      <Nav\\n        className=\\\"me-auto my-2 my-lg-0\\\"\\n        style={{ maxHeight: '100px' }}\\n        navbarScroll\\n      >\\n        <Nav.Link href=\\\"#action1\\\">Home</Nav.Link>\\n        <Nav.Link href=\\\"#action2\\\">Link</Nav.Link>\\n        <NavDropdown title=\\\"Link\\\" id=\\\"navbarScrollingDropdown\\\">\\n          <NavDropdown.Item href=\\\"#action3\\\">Action</NavDropdown.Item>\\n          <NavDropdown.Item href=\\\"#action4\\\">Another action</NavDropdown.Item>\\n          <NavDropdown.Divider />\\n          <NavDropdown.Item href=\\\"#action5\\\">\\n            Something else here\\n          </NavDropdown.Item>\\n        </NavDropdown>\\n        <Nav.Link href=\\\"#\\\" disabled>\\n          Link\\n        </Nav.Link>\\n      </Nav>\\n      <Form className=\\\"d-flex\\\">\\n        <FormControl\\n          type=\\\"search\\\"\\n          placeholder=\\\"Search\\\"\\n          className=\\\"me-2\\\"\\n          aria-label=\\\"Search\\\"\\n        />\\n        <Button variant=\\\"outline-success\\\">Search</Button>\\n      </Form>\\n    </Navbar.Collapse>\\n  </Container>\\n</Navbar>;\\n\"","module.exports = \"<Container>\\n  <Navbar expand=\\\"lg\\\" variant=\\\"light\\\" bg=\\\"light\\\">\\n    <Container>\\n      <Navbar.Brand href=\\\"#\\\">Navbar</Navbar.Brand>\\n    </Container>\\n  </Navbar>\\n</Container>;\\n\"","module.exports = \"<>\\n  <Navbar bg=\\\"light\\\">\\n    <Container>\\n      <Navbar.Brand href=\\\"#home\\\">Brand link</Navbar.Brand>\\n    </Container>\\n  </Navbar>\\n  <br />\\n  <Navbar bg=\\\"light\\\">\\n    <Container>\\n      <Navbar.Brand>Brand text</Navbar.Brand>\\n    </Container>\\n  </Navbar>\\n  <br />\\n  <Navbar bg=\\\"dark\\\">\\n  <Container>\\n    <Navbar.Brand href=\\\"#home\\\">\\n      <img\\n        src=\\\"/logo.svg\\\"\\n        width=\\\"30\\\"\\n        height=\\\"30\\\"\\n        className=\\\"d-inline-block align-top\\\"\\n        alt=\\\"React Bootstrap logo\\\"\\n      />\\n    </Navbar.Brand>\\n  </Container>\\n  </Navbar>\\n  <br />\\n  <Navbar bg=\\\"dark\\\" variant=\\\"dark\\\">\\n    <Container>\\n      <Navbar.Brand href=\\\"#home\\\">\\n        <img\\n          alt=\\\"\\\"\\n          src=\\\"/logo.svg\\\"\\n          width=\\\"30\\\"\\n          height=\\\"30\\\"\\n          className=\\\"d-inline-block align-top\\\"\\n        />{' '}\\n      React Bootstrap\\n      </Navbar.Brand>\\n    </Container>\\n  </Navbar>\\n</>;\\n\"","module.exports = \"<Navbar expand=\\\"lg\\\" variant=\\\"light\\\" bg=\\\"light\\\">\\n  <Container>\\n    <Navbar.Brand href=\\\"#\\\">Navbar</Navbar.Brand>\\n  </Container>\\n</Navbar>;\\n\"","import PropTypes from 'prop-types';\n\nimport { css } from 'astroturf';\n\nconst styles = css`\n  @import '../css/theme';\n\n  .callout {\n    border-left: 4px solid transparent;\n    padding: 1.2rem 1.2rem 1.2rem calc(1rem - 4px);\n    margin-left: -1rem;\n    margin-bottom: 2rem;\n  }\n\n  .warning {\n    composes: callout;\n    background-color: transparentize($note, 0.7);\n    border-left-color: $note;\n  }\n  .danger {\n    composes: callout;\n    background-color: transparentize($error, 0.7);\n    border-left-color: $error;\n  }\n`;\n\nconst propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n  theme: PropTypes.oneOf(['danger', 'warning']),\n};\n\nfunction Callout({ title, children, theme }) {\n  return (\n    <aside role=\"note\" className={styles[theme || 'warning']}>\n      {title && <header className=\"h5\">{title}</header>}\n      <div>{children}</div>\n    </aside>\n  );\n}\n\nCallout.propTypes = propTypes;\n\nexport default Callout;\n","module.exports = \"<Navbar bg=\\\"light\\\" expand={false}>\\n  <Container fluid>\\n    <Navbar.Brand href=\\\"#\\\">Navbar Offcanvas</Navbar.Brand>\\n    <Navbar.Toggle aria-controls=\\\"offcanvasNavbar\\\" />\\n    <Navbar.Offcanvas\\n      id=\\\"offcanvasNavbar\\\"\\n      aria-labelledby=\\\"offcanvasNavbarLabel\\\"\\n      placement=\\\"end\\\"\\n    >\\n      <Offcanvas.Header closeButton>\\n        <Offcanvas.Title id=\\\"offcanvasNavbarLabel\\\">Offcanvas</Offcanvas.Title>\\n      </Offcanvas.Header>\\n      <Offcanvas.Body>\\n        <Nav className=\\\"justify-content-end flex-grow-1 pe-3\\\">\\n          <Nav.Link href=\\\"#action1\\\">Home</Nav.Link>\\n          <Nav.Link href=\\\"#action2\\\">Link</Nav.Link>\\n          <NavDropdown title=\\\"Dropdown\\\" id=\\\"offcanvasNavbarDropdown\\\">\\n            <NavDropdown.Item href=\\\"#action3\\\">Action</NavDropdown.Item>\\n            <NavDropdown.Item href=\\\"#action4\\\">Another action</NavDropdown.Item>\\n            <NavDropdown.Divider />\\n            <NavDropdown.Item href=\\\"#action5\\\">\\n              Something else here\\n            </NavDropdown.Item>\\n          </NavDropdown>\\n        </Nav>\\n        <Form className=\\\"d-flex\\\">\\n          <FormControl\\n            type=\\\"search\\\"\\n            placeholder=\\\"Search\\\"\\n            className=\\\"me-2\\\"\\n            aria-label=\\\"Search\\\"\\n          />\\n          <Button variant=\\\"outline-success\\\">Search</Button>\\n        </Form>\\n      </Offcanvas.Body>\\n    </Navbar.Offcanvas>\\n  </Container>\\n</Navbar>;\\n\"","module.exports = \"<Navbar bg=\\\"light\\\" expand=\\\"lg\\\">\\n  <Container>\\n    <Navbar.Brand href=\\\"#home\\\">React-Bootstrap</Navbar.Brand>\\n    <Navbar.Toggle aria-controls=\\\"basic-navbar-nav\\\" />\\n    <Navbar.Collapse id=\\\"basic-navbar-nav\\\">\\n      <Nav className=\\\"me-auto\\\">\\n        <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n        <Nav.Link href=\\\"#link\\\">Link</Nav.Link>\\n        <NavDropdown title=\\\"Dropdown\\\" id=\\\"basic-nav-dropdown\\\">\\n          <NavDropdown.Item href=\\\"#action/3.1\\\">Action</NavDropdown.Item>\\n          <NavDropdown.Item href=\\\"#action/3.2\\\">Another action</NavDropdown.Item>\\n          <NavDropdown.Item href=\\\"#action/3.3\\\">Something</NavDropdown.Item>\\n          <NavDropdown.Divider />\\n          <NavDropdown.Item href=\\\"#action/3.4\\\">Separated link</NavDropdown.Item>\\n        </NavDropdown>\\n      </Nav>\\n    </Navbar.Collapse>\\n  </Container>\\n</Navbar>;\\n\"","import ApiLayout from './layouts/ApiLayout';\nimport DefaultLayout from './layouts';\n\nexport default function withLayout(Component) {\n  return (props) => {\n    const { pathname } = props.location;\n    let Layout = DefaultLayout;\n    if (\n      pathname.startsWith('/getting-started') ||\n      pathname.startsWith('/layout') ||\n      pathname.startsWith('/components') ||\n      pathname.startsWith('/utilities')\n    ) {\n      Layout = ApiLayout;\n    }\n\n    return (\n      <Layout location={props.location}>\n        <Component {...props} />\n      </Layout>\n    );\n  };\n}\n"],"sourceRoot":""}