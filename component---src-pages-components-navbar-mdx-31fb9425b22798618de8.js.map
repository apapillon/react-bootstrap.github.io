{"version":3,"sources":["webpack:///./src/pages/components/navbar.mdx","webpack:///./src/examples/Navbar/Collapsible.js","webpack:///./src/components/DocLink.js","webpack:///./src/examples/Navbar/ColorSchemes.js","webpack:///./src/examples/Navbar/TextLink.js","webpack:///./src/components/Callout-styles.module.scss","webpack:///./src/examples/Navbar/NavScroll.js","webpack:///./src/examples/Navbar/ContainerOutside.js","webpack:///./src/examples/Navbar/Brand.js","webpack:///./src/examples/Navbar/ContainerInside.js","webpack:///./src/components/Callout.js","webpack:///./src/examples/Navbar/Offcanvas.js","webpack:///./src/examples/Navbar/Basic.js"],"names":["_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","className","parentName","codeText","NavbarBasic","NavbarBrand","NavbarTextLink","NavbarColorSchemes","ContainerOutside","ContainerInside","path","NavScroll","theme","NavbarCollapsible","NavbarOffcanvas","metadata","data","Navbar","exportedBy","NavbarToggle","NavbarCollapse","isMDXComponent","module","exports","DocLink","children","href","config"],"mappings":"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","file":"component---src-pages-components-navbar-mdx-31fb9425b22798618de8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport DocLink from '../../components/DocLink';\nimport Callout from '../../components/Callout';\nimport CodeBlock from '../../components/CodeBlock';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport NavbarBasic from '../../examples/Navbar/Basic';\nimport NavbarBrand from '../../examples/Navbar/Brand';\nimport NavbarCollapsible from '../../examples/Navbar/Collapsible';\nimport NavbarColorSchemes from '../../examples/Navbar/ColorSchemes';\nimport NavScroll from '../../examples/Navbar/NavScroll';\nimport NavbarOffcanvas from '../../examples/Navbar/Offcanvas';\nimport NavbarTextLink from '../../examples/Navbar/TextLink';\nimport ContainerOutside from '../../examples/Navbar/ContainerOutside';\nimport ContainerInside from '../../examples/Navbar/ContainerInside';\nexport const query = graphql`\n  query NavbarQuery {\n    Navbar: componentMetadata(displayName: { eq: \"Navbar\" }) {\n      ...ComponentApi_metadata\n    }\n    NavbarBrand: componentMetadata(displayName: { eq: \"NavbarBrand\" }) {\n      ...ComponentApi_metadata\n    }\n    NavbarToggle: componentMetadata(displayName: { eq: \"NavbarToggle\" }) {\n      ...ComponentApi_metadata\n    }\n    NavbarCollapse: componentMetadata(displayName: { eq: \"NavbarCollapse\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"navbars\"\n    }}>{`Navbars`}</h1>\n    <p className=\"lead\">\n  A powerful, responsive navigation header, the navbar. Includes support for\n  branding, navigation, and more\n    </p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Here’s what you need to know before getting started with the Navbar:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Use the `}<inlineCode parentName=\"li\">{`expand`}</inlineCode>{` prop to allow for collapsing the `}<inlineCode parentName=\"li\">{`Navbar`}</inlineCode>{` at\nlower breakpoints.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Navbar`}</inlineCode>{`s and their contents are fluid by default. Use optional\n`}<a parentName=\"li\" {...{\n          \"href\": \"#containers\"\n        }}>{`containers`}</a>{` to limit their horizontal width.`}</li>\n      <li parentName=\"ul\">{`Use spacing and flex utilities to size and position content`}</li>\n    </ul>\n    <p>{`A responsive navigation header, including support for branding,\nnavigation, and more. Here’s an example of all the sub-components\nincluded in a responsive light-themed navbar that automatically\ncollapses at the lg (large) breakpoint.`}</p>\n    <ReactPlayground codeText={NavbarBasic} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"brand\"\n    }}>{`Brand`}</h2>\n    <p>{`A simple flexible branding component. Images are supported but will\nlikely require custom styling to work well.`}</p>\n    <ReactPlayground codeText={NavbarBrand} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"forms\"\n    }}>{`Forms`}</h2>\n    <h2 {...{\n      \"id\": \"text-and-non-nav-links\"\n    }}>{`Text and Non-nav links`}</h2>\n    <p>{`Loose text and links can be wrapped `}<inlineCode parentName=\"p\">{`Navbar.Text`}</inlineCode>{` in order to\ncorrectly align it vertically.`}</p>\n    <ReactPlayground codeText={NavbarTextLink} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"color-schemes\"\n    }}>{`Color schemes`}</h2>\n    <p>{`Theming the navbar has never been easier thanks to the combination of\ntheming classes and background-color utilities. Choose from\n`}<inlineCode parentName=\"p\">{`variant=\"light\"`}</inlineCode>{` for use with light background colors, or\n`}<inlineCode parentName=\"p\">{`variant=\"dark\"`}</inlineCode>{` for dark background colors. Then, customize\nwith the `}<inlineCode parentName=\"p\">{`bg`}</inlineCode>{` prop or any custom css!`}</p>\n    <ReactPlayground codeText={NavbarColorSchemes} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"containers\"\n    }}>{`Containers`}</h2>\n    <p>{`While not required, you can wrap the Navbar in a `}<inlineCode parentName=\"p\">{`<Container>`}</inlineCode>{` component\nto center it on a page, or add one within to only center the contents of a\n`}<a parentName=\"p\" {...{\n        \"href\": \"#placement\"\n      }}>{`fixed or static top navbar`}</a>{`.`}</p>\n    <ReactPlayground codeText={ContainerOutside} mdxType=\"ReactPlayground\" />\n    <p>{`When the container is within your navbar, its horizontal padding is\nremoved at breakpoints lower than your specified\n`}<inlineCode parentName=\"p\">{`expand={'sm' | 'md' | 'lg' | 'xl' | 'xxl'}`}</inlineCode>{` prop. This\nensures we’re not doubling up on padding unnecessarily on lower\nviewports when your navbar is collapsed.`}</p>\n    <ReactPlayground codeText={ContainerInside} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"placement\"\n    }}>{`Placement`}</h2>\n    <p>{`You can use Bootstrap's `}<DocLink path=\"/utilities/position/\" mdxType=\"DocLink\">{`position utilities`}</DocLink>{` to\nplace navbars in non-static positions. Choose from fixed to the top,\nfixed to the bottom, or stickied to the top (scrolls with the page until\nit reaches the top, then stays there). Fixed navbars use\n`}<inlineCode parentName=\"p\">{`position: fixed`}</inlineCode>{`, meaning they’re pulled from the normal\nflow of the DOM and may require custom CSS (e.g., padding-top on the\n`}<inlineCode parentName=\"p\">{`<body>`}</inlineCode>{`) to prevent overlap with other elements. Also\nnote that `}<inlineCode parentName=\"p\">{`.sticky-top`}</inlineCode>{` uses `}<inlineCode parentName=\"p\">{`position: sticky`}</inlineCode>{`, which\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://caniuse.com/#feat=css-sticky\"\n      }}>{`isn’t fully supported in every browser`}</a>{`.`}</p>\n    <p>{`Since these positioning needs are so common for Navbars, we've added\nconvenience props for them.`}</p>\n    <h3 className=\"h4\">Fixed top</h3>\n    <CodeBlock codeText={` <Navbar fixed=\"top\" />`} mdxType=\"CodeBlock\" />\n    <h3 className=\"h4\">Fixed bottom</h3>\n    <CodeBlock codeText={` <Navbar fixed=\"bottom\" />`} mdxType=\"CodeBlock\" />\n    <h3 className=\"h4\">Sticky top</h3>\n    <CodeBlock codeText={` <Navbar sticky=\"top\" />`} mdxType=\"CodeBlock\" />\n    <h2 {...{\n      \"id\": \"scrolling\"\n    }}>{`Scrolling`}</h2>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`navbarScroll`}</inlineCode>{` prop in a `}<inlineCode parentName=\"p\">{`<Nav>`}</inlineCode>{` to enable vertical scrolling within the\ntoggleable contents of a collapsed navbar. See the `}<DocLink path=\"/components/navbar/#scrolling\" mdxType=\"DocLink\">{`Bootstrap docs`}</DocLink>{` for more information.`}</p>\n    <ReactPlayground codeText={NavScroll} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"responsive-behaviors\"\n    }}>{`Responsive behaviors`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`expand`}</inlineCode>{` prop as well as the\n`}<inlineCode parentName=\"p\">{`Navbar.Toggle`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Navbar.Collapse`}</inlineCode>{` components\nto control when content collapses behind a button.`}</p>\n    <p>{`Set the `}<inlineCode parentName=\"p\">{`defaultExpanded`}</inlineCode>{` prop to make the Navbar start\nexpanded. Set `}<inlineCode parentName=\"p\">{`collapseOnSelect`}</inlineCode>{` to make the Navbar collapse\nautomatically when the user selects an item. You can also finely control\nthe collapsing behavior by using the `}<inlineCode parentName=\"p\">{`expanded`}</inlineCode>{` and\n`}<inlineCode parentName=\"p\">{`onToggle`}</inlineCode>{` props.`}</p>\n    <Callout theme=\"warning\" mdxType=\"Callout\">\n  Watch out! You <strong>need</strong> to provide a breakpoint value to <code>expand</code> in\n  order for the Navbar to collapse at all.\n    </Callout>\n    <ReactPlayground codeText={NavbarCollapsible} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"offcanvas\"\n    }}>{`Offcanvas`}</h3>\n    <p>{`Transform your expanding and collapsing navbar into an offcanvas drawer\nwith the offcanvas component. We extend both the offcanvas default\nstyles and use the `}<inlineCode parentName=\"p\">{`expand`}</inlineCode>{` prop to create a dynamic and\nflexible navigation sidebar.`}</p>\n    <p>{`In the example below, to create an offcanvas navbar that is always\ncollapsed across all breakpoints, set the `}<inlineCode parentName=\"p\">{`expand`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={NavbarOffcanvas} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.Navbar} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.NavbarBrand} exportedBy={props.data.Navbar} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.NavbarToggle} exportedBy={props.data.Navbar} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.NavbarCollapse} exportedBy={props.data.Navbar} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = \"<Navbar collapseOnSelect expand=\\\"lg\\\" bg=\\\"dark\\\" variant=\\\"dark\\\">\\n  <Container>\\n  <Navbar.Brand href=\\\"#home\\\">React-Bootstrap</Navbar.Brand>\\n  <Navbar.Toggle aria-controls=\\\"responsive-navbar-nav\\\" />\\n  <Navbar.Collapse id=\\\"responsive-navbar-nav\\\">\\n    <Nav className=\\\"me-auto\\\">\\n      <Nav.Link href=\\\"#features\\\">Features</Nav.Link>\\n      <Nav.Link href=\\\"#pricing\\\">Pricing</Nav.Link>\\n      <NavDropdown title=\\\"Dropdown\\\" id=\\\"collasible-nav-dropdown\\\">\\n        <NavDropdown.Item href=\\\"#action/3.1\\\">Action</NavDropdown.Item>\\n        <NavDropdown.Item href=\\\"#action/3.2\\\">Another action</NavDropdown.Item>\\n        <NavDropdown.Item href=\\\"#action/3.3\\\">Something</NavDropdown.Item>\\n        <NavDropdown.Divider />\\n        <NavDropdown.Item href=\\\"#action/3.4\\\">Separated link</NavDropdown.Item>\\n      </NavDropdown>\\n    </Nav>\\n    <Nav>\\n      <Nav.Link href=\\\"#deets\\\">More deets</Nav.Link>\\n      <Nav.Link eventKey={2} href=\\\"#memes\\\">\\n        Dank memes\\n      </Nav.Link>\\n    </Nav>\\n  </Navbar.Collapse>\\n  </Container>\\n</Navbar>;\\n\"","function DocLink({ path, children }) {\n  return <a href={`${config.docsUrl}${path}`}>{children}</a>;\n}\n\nexport default DocLink;\n","module.exports = \"<>\\n  <Navbar bg=\\\"dark\\\" variant=\\\"dark\\\">\\n    <Container>\\n    <Navbar.Brand href=\\\"#home\\\">Navbar</Navbar.Brand>\\n    <Nav className=\\\"me-auto\\\">\\n      <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n      <Nav.Link href=\\\"#features\\\">Features</Nav.Link>\\n      <Nav.Link href=\\\"#pricing\\\">Pricing</Nav.Link>\\n    </Nav>\\n    </Container>\\n  </Navbar>\\n  <br />\\n  <Navbar bg=\\\"primary\\\" variant=\\\"dark\\\">\\n    <Container>\\n    <Navbar.Brand href=\\\"#home\\\">Navbar</Navbar.Brand>\\n    <Nav className=\\\"me-auto\\\">\\n      <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n      <Nav.Link href=\\\"#features\\\">Features</Nav.Link>\\n      <Nav.Link href=\\\"#pricing\\\">Pricing</Nav.Link>\\n    </Nav>\\n    </Container>\\n  </Navbar>\\n\\n  <br />\\n  <Navbar bg=\\\"light\\\" variant=\\\"light\\\">\\n    <Container>\\n    <Navbar.Brand href=\\\"#home\\\">Navbar</Navbar.Brand>\\n    <Nav className=\\\"me-auto\\\">\\n      <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n      <Nav.Link href=\\\"#features\\\">Features</Nav.Link>\\n      <Nav.Link href=\\\"#pricing\\\">Pricing</Nav.Link>\\n    </Nav>\\n    </Container>\\n  </Navbar>\\n</>;\\n\"","module.exports = \"<Navbar>\\n  <Container>\\n    <Navbar.Brand href=\\\"#home\\\">Navbar with text</Navbar.Brand>\\n    <Navbar.Toggle />\\n    <Navbar.Collapse className=\\\"justify-content-end\\\">\\n      <Navbar.Text>\\n        Signed in as: <a href=\\\"#login\\\">Mark Otto</a>\\n      </Navbar.Text>\\n    </Navbar.Collapse>\\n  </Container>\\n</Navbar>;\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"callout\":\"Callout-styles-module--callout--1_K3h\",\"warning\":\"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h\",\"danger\":\"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h\"};","module.exports = \"<Navbar bg=\\\"light\\\" expand=\\\"lg\\\">\\n  <Container fluid>\\n    <Navbar.Brand href=\\\"#\\\">Navbar scroll</Navbar.Brand>\\n    <Navbar.Toggle aria-controls=\\\"navbarScroll\\\" />\\n    <Navbar.Collapse id=\\\"navbarScroll\\\">\\n      <Nav\\n        className=\\\"me-auto my-2 my-lg-0\\\"\\n        style={{ maxHeight: '100px' }}\\n        navbarScroll\\n      >\\n        <Nav.Link href=\\\"#action1\\\">Home</Nav.Link>\\n        <Nav.Link href=\\\"#action2\\\">Link</Nav.Link>\\n        <NavDropdown title=\\\"Link\\\" id=\\\"navbarScrollingDropdown\\\">\\n          <NavDropdown.Item href=\\\"#action3\\\">Action</NavDropdown.Item>\\n          <NavDropdown.Item href=\\\"#action4\\\">Another action</NavDropdown.Item>\\n          <NavDropdown.Divider />\\n          <NavDropdown.Item href=\\\"#action5\\\">\\n            Something else here\\n          </NavDropdown.Item>\\n        </NavDropdown>\\n        <Nav.Link href=\\\"#\\\" disabled>\\n          Link\\n        </Nav.Link>\\n      </Nav>\\n      <Form className=\\\"d-flex\\\">\\n        <FormControl\\n          type=\\\"search\\\"\\n          placeholder=\\\"Search\\\"\\n          className=\\\"me-2\\\"\\n          aria-label=\\\"Search\\\"\\n        />\\n        <Button variant=\\\"outline-success\\\">Search</Button>\\n      </Form>\\n    </Navbar.Collapse>\\n  </Container>\\n</Navbar>;\\n\"","module.exports = \"<Container>\\n  <Navbar expand=\\\"lg\\\" variant=\\\"light\\\" bg=\\\"light\\\">\\n    <Container>\\n      <Navbar.Brand href=\\\"#\\\">Navbar</Navbar.Brand>\\n    </Container>\\n  </Navbar>\\n</Container>;\\n\"","module.exports = \"<>\\n  <Navbar bg=\\\"light\\\">\\n    <Container>\\n      <Navbar.Brand href=\\\"#home\\\">Brand link</Navbar.Brand>\\n    </Container>\\n  </Navbar>\\n  <br />\\n  <Navbar bg=\\\"light\\\">\\n    <Container>\\n      <Navbar.Brand>Brand text</Navbar.Brand>\\n    </Container>\\n  </Navbar>\\n  <br />\\n  <Navbar bg=\\\"dark\\\">\\n  <Container>\\n    <Navbar.Brand href=\\\"#home\\\">\\n      <img\\n        src=\\\"/logo.svg\\\"\\n        width=\\\"30\\\"\\n        height=\\\"30\\\"\\n        className=\\\"d-inline-block align-top\\\"\\n        alt=\\\"React Bootstrap logo\\\"\\n      />\\n    </Navbar.Brand>\\n  </Container>\\n  </Navbar>\\n  <br />\\n  <Navbar bg=\\\"dark\\\" variant=\\\"dark\\\">\\n    <Container>\\n      <Navbar.Brand href=\\\"#home\\\">\\n        <img\\n          alt=\\\"\\\"\\n          src=\\\"/logo.svg\\\"\\n          width=\\\"30\\\"\\n          height=\\\"30\\\"\\n          className=\\\"d-inline-block align-top\\\"\\n        />{' '}\\n      React Bootstrap\\n      </Navbar.Brand>\\n    </Container>\\n  </Navbar>\\n</>;\\n\"","module.exports = \"<Navbar expand=\\\"lg\\\" variant=\\\"light\\\" bg=\\\"light\\\">\\n  <Container>\\n    <Navbar.Brand href=\\\"#\\\">Navbar</Navbar.Brand>\\n  </Container>\\n</Navbar>;\\n\"","import PropTypes from 'prop-types';\n\nimport { css } from 'astroturf';\n\nconst styles = css`\n  @import '../css/theme';\n\n  .callout {\n    border-left: 4px solid transparent;\n    padding: 1.2rem 1.2rem 1.2rem calc(1rem - 4px);\n    margin-left: -1rem;\n    margin-bottom: 2rem;\n  }\n\n  .warning {\n    composes: callout;\n    background-color: transparentize($note, 0.7);\n    border-left-color: $note;\n  }\n  .danger {\n    composes: callout;\n    background-color: transparentize($error, 0.7);\n    border-left-color: $error;\n  }\n`;\n\nconst propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n  theme: PropTypes.oneOf(['danger', 'warning']),\n};\n\nfunction Callout({ title, children, theme }) {\n  return (\n    <aside role=\"note\" className={styles[theme || 'warning']}>\n      {title && <header className=\"h5\">{title}</header>}\n      <div>{children}</div>\n    </aside>\n  );\n}\n\nCallout.propTypes = propTypes;\n\nexport default Callout;\n","module.exports = \"<Navbar bg=\\\"light\\\" expand={false}>\\n  <Container fluid>\\n    <Navbar.Brand href=\\\"#\\\">Navbar Offcanvas</Navbar.Brand>\\n    <Navbar.Toggle aria-controls=\\\"offcanvasNavbar\\\" />\\n    <Navbar.Offcanvas\\n      id=\\\"offcanvasNavbar\\\"\\n      aria-labelledby=\\\"offcanvasNavbarLabel\\\"\\n      placement=\\\"end\\\"\\n    >\\n      <Offcanvas.Header closeButton>\\n        <Offcanvas.Title id=\\\"offcanvasNavbarLabel\\\">Offcanvas</Offcanvas.Title>\\n      </Offcanvas.Header>\\n      <Offcanvas.Body>\\n        <Nav className=\\\"justify-content-end flex-grow-1 pe-3\\\">\\n          <Nav.Link href=\\\"#action1\\\">Home</Nav.Link>\\n          <Nav.Link href=\\\"#action2\\\">Link</Nav.Link>\\n          <NavDropdown title=\\\"Dropdown\\\" id=\\\"offcanvasNavbarDropdown\\\">\\n            <NavDropdown.Item href=\\\"#action3\\\">Action</NavDropdown.Item>\\n            <NavDropdown.Item href=\\\"#action4\\\">Another action</NavDropdown.Item>\\n            <NavDropdown.Divider />\\n            <NavDropdown.Item href=\\\"#action5\\\">\\n              Something else here\\n            </NavDropdown.Item>\\n          </NavDropdown>\\n        </Nav>\\n        <Form className=\\\"d-flex\\\">\\n          <FormControl\\n            type=\\\"search\\\"\\n            placeholder=\\\"Search\\\"\\n            className=\\\"me-2\\\"\\n            aria-label=\\\"Search\\\"\\n          />\\n          <Button variant=\\\"outline-success\\\">Search</Button>\\n        </Form>\\n      </Offcanvas.Body>\\n    </Navbar.Offcanvas>\\n  </Container>\\n</Navbar>;\\n\"","module.exports = \"<Navbar bg=\\\"light\\\" expand=\\\"lg\\\">\\n  <Container>\\n    <Navbar.Brand href=\\\"#home\\\">React-Bootstrap</Navbar.Brand>\\n    <Navbar.Toggle aria-controls=\\\"basic-navbar-nav\\\" />\\n    <Navbar.Collapse id=\\\"basic-navbar-nav\\\">\\n      <Nav className=\\\"me-auto\\\">\\n        <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n        <Nav.Link href=\\\"#link\\\">Link</Nav.Link>\\n        <NavDropdown title=\\\"Dropdown\\\" id=\\\"basic-nav-dropdown\\\">\\n          <NavDropdown.Item href=\\\"#action/3.1\\\">Action</NavDropdown.Item>\\n          <NavDropdown.Item href=\\\"#action/3.2\\\">Another action</NavDropdown.Item>\\n          <NavDropdown.Item href=\\\"#action/3.3\\\">Something</NavDropdown.Item>\\n          <NavDropdown.Divider />\\n          <NavDropdown.Item href=\\\"#action/3.4\\\">Separated link</NavDropdown.Item>\\n        </NavDropdown>\\n      </Nav>\\n    </Navbar.Collapse>\\n  </Container>\\n</Navbar>;\\n\""],"sourceRoot":""}