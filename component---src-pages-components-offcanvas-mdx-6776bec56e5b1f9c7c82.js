(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{"1SoR":function(e,n){e.exports='function Example() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant="primary" onClick={handleShow}>\n        Launch\n      </Button>\n\n      <Offcanvas show={show} onHide={handleClose}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nrender(<Example />);\n'},Q6D8:function(e,n,a){e.exports={callout:"Callout-styles-module--callout--1_K3h",warning:"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h",danger:"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h"}},h55t:function(e,n,a){"use strict";var t=a("oYCi"),o=a("Q6D8");n.a=function(e){var n=e.title,a=e.children,s=e.theme;return Object(t.jsxs)("aside",{role:"note",className:o[s||"warning"],children:[n&&Object(t.jsx)("header",{className:"h5",children:n}),Object(t.jsx)("div",{children:a})]})}},l0mA:function(e,n){e.exports="const options = [\n  {\n    name: 'Enable backdrop (default)',\n    scroll: false,\n    backdrop: true,\n  },\n  {\n    name: 'Disable backdrop',\n    scroll: false,\n    backdrop: false,\n  },\n  {\n    name: 'Enable body scrolling',\n    scroll: true,\n    backdrop: false,\n  },\n  {\n    name: 'Enable both scrolling & backdrop',\n    scroll: true,\n    backdrop: true,\n  },\n];\n\nfunction OffCanvasExample({ name, ...props }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const toggleShow = () => setShow((s) => !s);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={toggleShow} className=\"me-2\">\n        {name}\n      </Button>\n      <Offcanvas show={show} onHide={handleClose} {...props}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nfunction Example() {\n  return (\n    <>\n      {options.map((props, idx) => (\n        <OffCanvasExample key={idx} {...props} />\n      ))}\n    </>\n  );\n}\n\nrender(<Example />);\n"},ppAh:function(e,n){e.exports="function OffCanvasExample({ name, ...props }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow} className=\"me-2\">\n        {name}\n      </Button>\n      <Offcanvas show={show} onHide={handleClose} {...props}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nfunction Example() {\n  return (\n    <>\n      {['start', 'end', 'top', 'bottom'].map((placement, idx) => (\n        <OffCanvasExample key={idx} placement={placement} name={placement} />\n      ))}\n    </>\n  );\n}\n\nrender(<Example />);\n"},zlVk:function(e,n,a){"use strict";a.r(n),a.d(n,"_frontmatter",(function(){return b})),a.d(n,"default",(function(){return j}));var t=a("rePB"),o=a("zLVn"),s=(a("mXGw"),a("7ljp")),c=a("Snbm"),l=(a("h55t"),a("vXRK")),r=a("1u5/"),d=a("1SoR"),i=a.n(d),p=a("l0mA"),f=a.n(p),m=a("ppAh"),u=a.n(m);function h(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function O(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?h(Object(a),!0).forEach((function(n){Object(t.a)(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):h(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}var b={},x={query:"3822479910",_frontmatter:b},v=c.a;function j(e){var n=e.components,a=Object(o.a)(e,["components"]);return Object(s.mdx)(v,O(O(O({},x),a),{},{components:n,mdxType:"MDXLayout"}),Object(s.mdx)("h1",O({},{id:"offcanvas"}),"Offcanvas"),Object(s.mdx)("p",{className:"lead"},"Build hidden sidebars into your project for navigation, shopping carts, and more."),Object(s.mdx)("h2",O({},{id:"examples"}),"Examples"),Object(s.mdx)("p",null,"Offcanvas includes support for a header with a close button and an optional body class\nfor some initial padding. We suggest that you include offcanvas headers with dismiss\nactions whenever possible, or provide an explicit dismiss action."),Object(s.mdx)("h3",O({},{id:"basic-example"}),"Basic Example"),Object(s.mdx)(r.a,{codeText:i.a,mdxType:"ReactPlayground"}),Object(s.mdx)("h3",O({},{id:"placement"}),"Placement"),Object(s.mdx)("p",null,"Offcanvas supports a few different placements:"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("inlineCode",{parentName:"li"},"start")," places offcanvas on the left of the viewport"),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("inlineCode",{parentName:"li"},"end")," places offcanvas on the right of the viewport"),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("inlineCode",{parentName:"li"},"top")," places offcanvas on the top of the viewport"),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("inlineCode",{parentName:"li"},"bottom")," places offcanvas on the bottom of the viewport")),Object(s.mdx)(r.a,{codeText:u.a,mdxType:"ReactPlayground"}),Object(s.mdx)("h3",O({},{id:"backdrop"}),"Backdrop"),Object(s.mdx)("p",null,"Scrolling the ",Object(s.mdx)("inlineCode",{parentName:"p"},"<body>")," element is disabled when an offcanvas and its backdrop are\nvisible. Use the ",Object(s.mdx)("inlineCode",{parentName:"p"},"scroll")," prop to toggle ",Object(s.mdx)("inlineCode",{parentName:"p"},"<body>")," scrolling and the ",Object(s.mdx)("inlineCode",{parentName:"p"},"backdrop")," prop\nto toggle the backdrop."),Object(s.mdx)(r.a,{codeText:f.a,mdxType:"ReactPlayground"}),Object(s.mdx)("h2",O({},{id:"api"}),"API"),Object(s.mdx)(l.a,{metadata:a.data.Offcanvas,mdxType:"ComponentApi"}),Object(s.mdx)(l.a,{metadata:a.data.OffcanvasHeader,mdxType:"ComponentApi"}),Object(s.mdx)(l.a,{metadata:a.data.OffcanvasTitle,mdxType:"ComponentApi"}),Object(s.mdx)(l.a,{metadata:a.data.OffcanvasBody,mdxType:"ComponentApi"}),Object(s.mdx)("p",null,";"))}j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-components-offcanvas-mdx-6776bec56e5b1f9c7c82.js.map