(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{"74Zq":function(e,r,n){"use strict";n.r(r),n.d(r,"_frontmatter",(function(){return h})),n.d(r,"default",(function(){return C}));var t,a=n("wx14"),o=n("zLVn"),s=(n("mXGw"),n("7ljp")),d=n("Snbm"),i=n("vXRK"),p=n("1u5/"),c=n("Y9fO"),l=n.n(c),m=n("BMm0"),x=n.n(m),u=n("BAd4"),b=n.n(u),g=n("dl4j"),f=n.n(g),P=n("speV"),w=n.n(P),B=n("WzDh"),j=n.n(B),O=n("C3ZM"),y=n.n(O),v=["components"],h={},T=(t="PageHeader",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),Object(s.mdx)("div",e)}),E={query:"1323565361",_frontmatter:h},k=d.a;function C(e){var r=e.components,n=Object(o.a)(e,v);return Object(s.mdx)(k,Object(a.a)({},E,n,{components:r,mdxType:"MDXLayout"}),Object(s.mdx)(T,{title:"Progress bars",subTitle:"Provide up-to-date feedback on the progress of a workflow or action with simple yet flexible progress bars.",mdxType:"PageHeader"}),Object(s.mdx)("h2",{id:"example"},"Example"),Object(s.mdx)("p",null,"Default progress bar."),Object(s.mdx)(p.a,{codeText:x.a,mdxType:"ReactPlayground"}),Object(s.mdx)("h2",{id:"with-label"},"With label"),Object(s.mdx)("p",null,"Add a ",Object(s.mdx)("inlineCode",{parentName:"p"},"label")," prop to show a visible percentage. For low\npercentages, consider adding a min-width to ensure the label's text is\nfully visible."),Object(s.mdx)(p.a,{codeText:y.a,mdxType:"ReactPlayground"}),Object(s.mdx)("h2",{id:"screenreader-only-label"},"Screenreader only label"),Object(s.mdx)("p",null,"Add a ",Object(s.mdx)("inlineCode",{parentName:"p"},"visuallyHidden")," prop to hide the label visually."),Object(s.mdx)(p.a,{codeText:f.a,mdxType:"ReactPlayground"}),Object(s.mdx)("h2",{id:"contextual-alternatives"},"Contextual alternatives"),Object(s.mdx)("p",null,"Progress bars use some of the same button and alert classes for\nconsistent styles."),Object(s.mdx)(p.a,{codeText:b.a,mdxType:"ReactPlayground"}),Object(s.mdx)("h2",{id:"striped"},"Striped"),Object(s.mdx)("p",null,"Uses a gradient to create a striped effect."),Object(s.mdx)(p.a,{codeText:j.a,mdxType:"ReactPlayground"}),Object(s.mdx)("h2",{id:"animated"},"Animated"),Object(s.mdx)("p",null,"Add ",Object(s.mdx)("inlineCode",{parentName:"p"},"animated")," prop to animate the stripes right to left."),Object(s.mdx)(p.a,{codeText:l.a,mdxType:"ReactPlayground"}),Object(s.mdx)("h2",{id:"stacked"},"Stacked"),Object(s.mdx)("p",null,"Nest ",Object(s.mdx)("inlineCode",{parentName:"p"},"<ProgressBar />"),"s to stack them."),Object(s.mdx)(p.a,{codeText:w.a,mdxType:"ReactPlayground"}),Object(s.mdx)("h2",{id:"api"},"API"),Object(s.mdx)(i.a,{metadata:n.data.ProgressBar,mdxType:"ComponentApi"}))}C.isMDXComponent=!0},BAd4:function(e,r){e.exports='import ProgressBar from \'react-bootstrap/ProgressBar\';\n\nfunction ContextualExample() {\n  return (\n    <div>\n      <ProgressBar variant="success" now={40} />\n      <ProgressBar variant="info" now={20} />\n      <ProgressBar variant="warning" now={60} />\n      <ProgressBar variant="danger" now={80} />\n    </div>\n  );\n}\n\nexport default ContextualExample;\n'},BMm0:function(e,r){e.exports="import ProgressBar from 'react-bootstrap/ProgressBar';\n\nfunction BasicExample() {\n  return <ProgressBar now={60} />;\n}\n\nexport default BasicExample;\n"},C3ZM:function(e,r){e.exports="import ProgressBar from 'react-bootstrap/ProgressBar';\n\nfunction WithLabelExample() {\n  const now = 60;\n  return <ProgressBar now={now} label={`${now}%`} />;\n}\n\nexport default WithLabelExample;\n"},WzDh:function(e,r){e.exports='import ProgressBar from \'react-bootstrap/ProgressBar\';\n\nfunction StripedExample() {\n  return (\n    <div>\n      <ProgressBar striped variant="success" now={40} />\n      <ProgressBar striped variant="info" now={20} />\n      <ProgressBar striped variant="warning" now={60} />\n      <ProgressBar striped variant="danger" now={80} />\n    </div>\n  );\n}\n\nexport default StripedExample;\n'},Y9fO:function(e,r){e.exports="import ProgressBar from 'react-bootstrap/ProgressBar';\n\nfunction AnimatedExample() {\n  return <ProgressBar animated now={45} />;\n}\n\nexport default AnimatedExample;\n"},dl4j:function(e,r){e.exports="import ProgressBar from 'react-bootstrap/ProgressBar';\n\nfunction ScreenreaderLabelExample() {\n  const now = 60;\n  return <ProgressBar now={now} label={`${now}%`} visuallyHidden />;\n}\n\nexport default ScreenreaderLabelExample;\n"},speV:function(e,r){e.exports='import ProgressBar from \'react-bootstrap/ProgressBar\';\n\nfunction StackedExample() {\n  return (\n    <ProgressBar>\n      <ProgressBar striped variant="success" now={35} key={1} />\n      <ProgressBar variant="warning" now={20} key={2} />\n      <ProgressBar striped variant="danger" now={10} key={3} />\n    </ProgressBar>\n  );\n}\n\nexport default StackedExample;\n'}}]);
//# sourceMappingURL=component---src-pages-components-progress-mdx-e3b6d30d07d69f6c8c22.js.map