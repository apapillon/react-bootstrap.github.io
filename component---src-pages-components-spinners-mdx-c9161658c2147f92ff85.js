(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{"5exc":function(n,e){n.exports='<>\n  <Spinner animation="border" variant="primary" />\n  <Spinner animation="border" variant="secondary" />\n  <Spinner animation="border" variant="success" />\n  <Spinner animation="border" variant="danger" />\n  <Spinner animation="border" variant="warning" />\n  <Spinner animation="border" variant="info" />\n  <Spinner animation="border" variant="light" />\n  <Spinner animation="border" variant="dark" />\n  <Spinner animation="grow" variant="primary" />\n  <Spinner animation="grow" variant="secondary" />\n  <Spinner animation="grow" variant="success" />\n  <Spinner animation="grow" variant="danger" />\n  <Spinner animation="grow" variant="warning" />\n  <Spinner animation="grow" variant="info" />\n  <Spinner animation="grow" variant="light" />\n  <Spinner animation="grow" variant="dark" />\n</>;\n'},"9Dqt":function(n,e){n.exports='<Spinner animation="grow" />;\n'},ETnU:function(n,e){n.exports='<>\n  <Button variant="primary" disabled>\n    <Spinner\n      as="span"\n      animation="border"\n      size="sm"\n      role="status"\n      aria-hidden="true"\n    />\n    <span className="visually-hidden">Loading...</span>\n  </Button>{\' \'}\n  <Button variant="primary" disabled>\n    <Spinner\n      as="span"\n      animation="grow"\n      size="sm"\n      role="status"\n      aria-hidden="true"\n    />\n    Loading...\n  </Button>\n</>;\n'},HufS:function(n,e){n.exports='<>\n  <Spinner animation="border" size="sm" />\n  <Spinner animation="border" />\n  <Spinner animation="grow" size="sm" />\n  <Spinner animation="grow" />\n</>;\n'},"q+GK":function(n,e,t){"use strict";t.r(e),t.d(e,"_frontmatter",(function(){return w})),t.d(e,"default",(function(){return P}));var a=t("rePB"),i=t("zLVn"),r=(t("mXGw"),t("7ljp")),o=t("Snbm"),s=t("vXRK"),d=t("1u5/"),p=t("w+YF"),m=t.n(p),c=t("su+/"),l=t.n(c),b=t("9Dqt"),u=t.n(b),x=t("5exc"),y=t.n(x),g=t("HufS"),O=t.n(g),j=t("ETnU"),h=t.n(j);function f(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function v(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?f(Object(t),!0).forEach((function(e){Object(a.a)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):f(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var w={},S={query:"2690958107",_frontmatter:w},T=o.a;function P(n){var e=n.components,t=Object(i.a)(n,["components"]);return Object(r.mdx)(T,v(v(v({},S),t),{},{components:e,mdxType:"MDXLayout"}),Object(r.mdx)("h1",v({},{id:"spinners"}),"Spinners"),Object(r.mdx)("p",null,"Spinners can be used to show the loading state in your projects."),Object(r.mdx)(d.a,{codeText:m.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",v({},{id:"animations"}),"Animations"),Object(r.mdx)("p",null,"Bootstrap offers two animation styles for spinners. The animation style\ncan be configured with the ",Object(r.mdx)("inlineCode",{parentName:"p"},"animation")," property. An animation style\nmust always be provided when creating a spinner."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"}," Border Spinner - ",Object(r.mdx)("inlineCode",{parentName:"strong"},"border"))),Object(r.mdx)(d.a,{codeText:l.a,mdxType:"ReactPlayground"}),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"}," Grow Spinner - ",Object(r.mdx)("inlineCode",{parentName:"strong"},"grow")," ")),Object(r.mdx)(d.a,{codeText:u.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",v({},{id:"variants"}),"Variants"),Object(r.mdx)("p",null,"All standard visual variants are available for both animation styles by\nsetting the ",Object(r.mdx)("inlineCode",{parentName:"p"},"variant")," property. Alternatively spinners can be custom\nsized with the ",Object(r.mdx)("inlineCode",{parentName:"p"},"style")," property, or custom CSS classes."),Object(r.mdx)(d.a,{codeText:y.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",v({},{id:"sizing"}),"Sizing"),Object(r.mdx)("p",null,"In addition to the standard size, a smaller additional preconfigured\nsize is available by configuring the ",Object(r.mdx)("inlineCode",{parentName:"p"},"size")," property to ",Object(r.mdx)("inlineCode",{parentName:"p"},"sm"),"."),Object(r.mdx)(d.a,{codeText:O.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",v({},{id:"buttons"}),"Buttons"),Object(r.mdx)("p",null,"Like the original Bootstrap spinners, these can also be used with\nbuttons. To use this component out-of-the-box it is recommended you\nchange the element type to ",Object(r.mdx)("inlineCode",{parentName:"p"},"span")," by configuring the ",Object(r.mdx)("inlineCode",{parentName:"p"},"as")," property when\nusing spinners inside buttons."),Object(r.mdx)(d.a,{codeText:h.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",v({},{id:"accessibility"}),"Accessibility"),Object(r.mdx)("p",null,"To ensure the maximum accessibility for spinner components it is\nrecommended you provide a relevant ARIA ",Object(r.mdx)("inlineCode",{parentName:"p"},"role")," property,\nand include screenreader-only readable text representation of the\nspinner's meaning inside the component using Bootstrap's ",Object(r.mdx)("inlineCode",{parentName:"p"},"visually-hidden"),"\nclass."),Object(r.mdx)("p",null,"The example below provides an example of accessible usage of this\ncomponent."),Object(r.mdx)(d.a,{codeText:m.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",v({},{id:"api"}),"API"),Object(r.mdx)(s.a,{metadata:t.data.metadata,mdxType:"ComponentApi"}))}P.isMDXComponent=!0},"su+/":function(n,e){n.exports='<Spinner animation="border" />;\n'},"w+YF":function(n,e){n.exports='<Spinner animation="border" role="status">\n  <span className="visually-hidden">Loading...</span>\n</Spinner>;\n'}}]);
//# sourceMappingURL=component---src-pages-components-spinners-mdx-c9161658c2147f92ff85.js.map