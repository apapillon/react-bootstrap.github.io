(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{"5exc":function(n,e){n.exports='<>\n  <Spinner animation="border" variant="primary" />\n  <Spinner animation="border" variant="secondary" />\n  <Spinner animation="border" variant="success" />\n  <Spinner animation="border" variant="danger" />\n  <Spinner animation="border" variant="warning" />\n  <Spinner animation="border" variant="info" />\n  <Spinner animation="border" variant="light" />\n  <Spinner animation="border" variant="dark" />\n  <Spinner animation="grow" variant="primary" />\n  <Spinner animation="grow" variant="secondary" />\n  <Spinner animation="grow" variant="success" />\n  <Spinner animation="grow" variant="danger" />\n  <Spinner animation="grow" variant="warning" />\n  <Spinner animation="grow" variant="info" />\n  <Spinner animation="grow" variant="light" />\n  <Spinner animation="grow" variant="dark" />\n</>;\n'},"9Dqt":function(n,e){n.exports='<Spinner animation="grow" />;\n'},ETnU:function(n,e){n.exports='<>\n  <Button variant="primary" disabled>\n    <Spinner\n      as="span"\n      animation="border"\n      size="sm"\n      role="status"\n      aria-hidden="true"\n    />\n    <span className="sr-only">Loading...</span>\n  </Button>{\' \'}\n  <Button variant="primary" disabled>\n    <Spinner\n      as="span"\n      animation="grow"\n      size="sm"\n      role="status"\n      aria-hidden="true"\n    />\n    Loading...\n  </Button>\n</>;\n'},HufS:function(n,e){n.exports='<>\n  <Spinner animation="border" size="sm" />\n  <Spinner animation="border" />\n  <Spinner animation="grow" size="sm" />\n  <Spinner animation="grow" />\n</>;\n'},"q+GK":function(n,e,t){"use strict";t.r(e),t.d(e,"query",(function(){return O})),t.d(e,"_frontmatter",(function(){return h})),t.d(e,"default",(function(){return v}));t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("91GP"),t("mXGw");var a=t("7ljp"),i=t("Snbm"),r=t("vXRK"),o=t("1u5/"),s=t("w+YF"),d=t.n(s),p=t("su+/"),m=t.n(p),c=t("9Dqt"),l=t.n(c),u=t("5exc"),b=t.n(u),x=t("HufS"),y=t.n(x),g=t("ETnU"),j=t.n(g);var O="2690958107",h={},S={query:O,_frontmatter:h},f=i.a;function v(n){var e=n.components,t=function(n,e){if(null==n)return{};var t,a,i={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,["components"]);return Object(a.mdx)(f,Object.assign({},S,t,{components:e,mdxType:"MDXLayout"}),Object(a.mdx)("h1",{id:"spinners"},"Spinners"),Object(a.mdx)("p",null,"Spinners can be used to show the loading state in your projects."),Object(a.mdx)(o.a,{codeText:d.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"animations"},"Animations"),Object(a.mdx)("p",null,"Bootstrap offers two animation styles for spinners. The animation style\ncan be configured with the ",Object(a.mdx)("inlineCode",{parentName:"p"},"animation")," property. An animation style\nmust always be provided when creating a spinner."),Object(a.mdx)("p",null,Object(a.mdx)("strong",{parentName:"p"}," Border Spinner - ",Object(a.mdx)("inlineCode",{parentName:"strong"},"border"))),Object(a.mdx)(o.a,{codeText:m.a,mdxType:"ReactPlayground"}),Object(a.mdx)("p",null,Object(a.mdx)("strong",{parentName:"p"}," Grow Spinner - ",Object(a.mdx)("inlineCode",{parentName:"strong"},"grow")," ")),Object(a.mdx)(o.a,{codeText:l.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"variants"},"Variants"),Object(a.mdx)("p",null,"All standard visual variants are available for both animation styles by\nsetting the ",Object(a.mdx)("inlineCode",{parentName:"p"},"variant")," property. Alternatively spinners can be custom\nsized with the ",Object(a.mdx)("inlineCode",{parentName:"p"},"style")," property, or custom CSS classes."),Object(a.mdx)(o.a,{codeText:b.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"sizing"},"Sizing"),Object(a.mdx)("p",null,"In addition to the standard size, a smaller additional preconfigured\nsize is available by configuring the ",Object(a.mdx)("inlineCode",{parentName:"p"},"size")," property to ",Object(a.mdx)("inlineCode",{parentName:"p"},"sm"),"."),Object(a.mdx)(o.a,{codeText:y.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"buttons"},"Buttons"),Object(a.mdx)("p",null,"Like the original Bootstrap spinners, these can also be used with\nbuttons. To use this component out-of-the-box it is recommended you\nchange the element type to ",Object(a.mdx)("inlineCode",{parentName:"p"},"span")," by configuring the ",Object(a.mdx)("inlineCode",{parentName:"p"},"as")," property when\nusing spinners inside buttons."),Object(a.mdx)(o.a,{codeText:j.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"accessibility"},"Accessibility"),Object(a.mdx)("p",null,"To ensure the maximum accessibility for spinner components it is\nrecommended you provide a relevant ARIA ",Object(a.mdx)("inlineCode",{parentName:"p"},"role")," property,\nand include screenreader-only readable text representation of the\nspinner's meaning inside the component using Bootstrap's ",Object(a.mdx)("inlineCode",{parentName:"p"},"sr-only"),"\nclass."),Object(a.mdx)("p",null,"The example below provides an example of accessible usage of this\ncomponent."),Object(a.mdx)(o.a,{codeText:d.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",{id:"api"},"API"),Object(a.mdx)(r.a,{metadata:t.data.metadata,mdxType:"ComponentApi"}))}v.isMDXComponent=!0},"su+/":function(n,e){n.exports='<Spinner animation="border" />;\n'},"w+YF":function(n,e){n.exports='<Spinner animation="border" role="status">\n  <span className="sr-only">Loading...</span>\n</Spinner>;\n'}}]);
//# sourceMappingURL=component---src-pages-components-spinners-mdx-d6ffdb565d44aad02069.js.map