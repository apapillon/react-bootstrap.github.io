{"version":3,"sources":["webpack:///./src/examples/Tabs/Justified.js","webpack:///./src/examples/Tabs/Controlled.js","webpack:///./src/components/AriaAbbr.js","webpack:///./src/examples/Tabs/LeftTabs.js","webpack:///./src/examples/Tabs/Uncontrolled.js","webpack:///./src/examples/Tabs/NoAnimation.js","webpack:///./src/examples/Tabs/Fill.js","webpack:///./src/pages/components/tabs.mdx"],"names":["module","exports","AriaAbbr","title","name","_frontmatter","PageHeader","props","console","warn","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","mdxType","subTitle","parentName","codeText","TabsUncontrolled","exampleClassName","TabsControlled","TabsNoAnimation","TabsFill","TabsJustified","LeftTabs","metadata","data","Tabs","Tab","TabContainer","TabContent","TabPane","isMDXComponent"],"mappings":"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","file":"component---src-pages-components-tabs-mdx-82b919452223017f637c.js","sourcesContent":["module.exports = \"import Tab from 'react-bootstrap/Tab';\\nimport Tabs from 'react-bootstrap/Tabs';\\n\\nimport Sonnet from '../../components/Sonnet';\\n\\nfunction JustifiedExample() {\\n  return (\\n    <Tabs\\n      defaultActiveKey=\\\"profile\\\"\\n      id=\\\"justify-tab-example\\\"\\n      className=\\\"mb-3\\\"\\n      justify\\n    >\\n      <Tab eventKey=\\\"home\\\" title=\\\"Home\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"profile\\\" title=\\\"Profile\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"longer-tab\\\" title=\\\"Loooonger Tab\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"contact\\\" title=\\\"Contact\\\" disabled>\\n        <Sonnet />\\n      </Tab>\\n    </Tabs>\\n  );\\n}\\n\\nexport default JustifiedExample;\\n\"","module.exports = \"import React, { useState } from 'react';\\nimport Tab from 'react-bootstrap/Tab';\\nimport Tabs from 'react-bootstrap/Tabs';\\n\\nimport Sonnet from '../../components/Sonnet';\\n\\nfunction ControlledTabsExample() {\\n  const [key, setKey] = useState('home');\\n\\n  return (\\n    <Tabs\\n      id=\\\"controlled-tab-example\\\"\\n      activeKey={key}\\n      onSelect={(k) => setKey(k)}\\n      className=\\\"mb-3\\\"\\n    >\\n      <Tab eventKey=\\\"home\\\" title=\\\"Home\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"profile\\\" title=\\\"Profile\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"contact\\\" title=\\\"Contact\\\" disabled>\\n        <Sonnet />\\n      </Tab>\\n    </Tabs>\\n  );\\n}\\n\\nexport default ControlledTabsExample;\\n\"","export default function AriaAbbr() {\n  return <abbr title=\"Accessible Rich Internet Applications\">ARIA</abbr>;\n}\n","module.exports = \"import Col from 'react-bootstrap/Col';\\nimport Nav from 'react-bootstrap/Nav';\\nimport Row from 'react-bootstrap/Row';\\nimport Tab from 'react-bootstrap/Tab';\\n\\nimport Sonnet from '../../components/Sonnet';\\n\\nfunction LeftTabsExample() {\\n  return (\\n    <Tab.Container id=\\\"left-tabs-example\\\" defaultActiveKey=\\\"first\\\">\\n      <Row>\\n        <Col sm={3}>\\n          <Nav variant=\\\"pills\\\" className=\\\"flex-column\\\">\\n            <Nav.Item>\\n              <Nav.Link eventKey=\\\"first\\\" href=\\\"#\\\">\\n                Tab 1\\n              </Nav.Link>\\n            </Nav.Item>\\n            <Nav.Item>\\n              <Nav.Link eventKey=\\\"second\\\" href=\\\"#\\\">\\n                Tab 2\\n              </Nav.Link>\\n            </Nav.Item>\\n          </Nav>\\n        </Col>\\n        <Col sm={9}>\\n          <Tab.Content>\\n            <Tab.Pane eventKey=\\\"first\\\">\\n              <Sonnet />\\n            </Tab.Pane>\\n            <Tab.Pane eventKey=\\\"second\\\">\\n              <Sonnet />\\n            </Tab.Pane>\\n          </Tab.Content>\\n        </Col>\\n      </Row>\\n    </Tab.Container>\\n  );\\n}\\n\\nexport default LeftTabsExample;\\n\"","module.exports = \"import Tab from 'react-bootstrap/Tab';\\nimport Tabs from 'react-bootstrap/Tabs';\\n\\nimport Sonnet from '../../components/Sonnet';\\n\\nfunction UncontrolledExample() {\\n  return (\\n    <Tabs\\n      defaultActiveKey=\\\"profile\\\"\\n      id=\\\"uncontrolled-tab-example\\\"\\n      className=\\\"mb-3\\\"\\n    >\\n      <Tab eventKey=\\\"home\\\" title=\\\"Home\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"profile\\\" title=\\\"Profile\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"contact\\\" title=\\\"Contact\\\" disabled>\\n        <Sonnet />\\n      </Tab>\\n    </Tabs>\\n  );\\n}\\n\\nexport default UncontrolledExample;\\n\"","module.exports = \"import Tab from 'react-bootstrap/Tab';\\nimport Tabs from 'react-bootstrap/Tabs';\\n\\nimport Sonnet from '../../components/Sonnet';\\n\\nfunction NoAnimationExample() {\\n  return (\\n    <Tabs\\n      defaultActiveKey=\\\"home\\\"\\n      transition={false}\\n      id=\\\"noanim-tab-example\\\"\\n      className=\\\"mb-3\\\"\\n    >\\n      <Tab eventKey=\\\"home\\\" title=\\\"Home\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"profile\\\" title=\\\"Profile\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"contact\\\" title=\\\"Contact\\\" disabled>\\n        <Sonnet />\\n      </Tab>\\n    </Tabs>\\n  );\\n}\\n\\nexport default NoAnimationExample;\\n\"","module.exports = \"import Tab from 'react-bootstrap/Tab';\\nimport Tabs from 'react-bootstrap/Tabs';\\n\\nimport Sonnet from '../../components/Sonnet';\\n\\nfunction FillExample() {\\n  return (\\n    <Tabs\\n      defaultActiveKey=\\\"profile\\\"\\n      id=\\\"fill-tab-example\\\"\\n      className=\\\"mb-3\\\"\\n      fill\\n    >\\n      <Tab eventKey=\\\"home\\\" title=\\\"Home\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"profile\\\" title=\\\"Profile\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"longer-tab\\\" title=\\\"Loooonger Tab\\\">\\n        <Sonnet />\\n      </Tab>\\n      <Tab eventKey=\\\"contact\\\" title=\\\"Contact\\\" disabled>\\n        <Sonnet />\\n      </Tab>\\n    </Tabs>\\n  );\\n}\\n\\nexport default FillExample;\\n\"","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ARIA from '../../components/AriaAbbr';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport TabsControlled from '../../examples/Tabs/Controlled';\nimport LeftTabs from '../../examples/Tabs/LeftTabs';\nimport TabsNoAnimation from '../../examples/Tabs/NoAnimation';\nimport TabsUncontrolled from '../../examples/Tabs/Uncontrolled';\nimport TabsFill from '../../examples/Tabs/Fill';\nimport TabsJustified from '../../examples/Tabs/Justified';\nexport const query = graphql`\n  query TabsQuery {\n    Tabs: componentMetadata(displayName: { eq: \"Tabs\" }) {\n      ...ComponentApi_metadata\n    }\n    Tab: componentMetadata(displayName: { eq: \"Tab\" }) {\n      ...ComponentApi_metadata\n    }\n    TabContainer: componentMetadata(displayName: { eq: \"TabContainer\" }) {\n      ...ComponentApi_metadata\n    }\n    TabContent: componentMetadata(displayName: { eq: \"TabContent\" }) {\n      ...ComponentApi_metadata\n    }\n    TabPane: componentMetadata(displayName: { eq: \"TabPane\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageHeader = makeShortcode(\"PageHeader\");\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <PageHeader title=\"Tabbed components\" subTitle=\"Dynamic tabbed interfaces\" mdxType=\"PageHeader\" />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`Create dynamic tabbed interfaces, as described in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/wai-aria-practices/#tabpanel\"\n      }}><abbr title=\"Web Accessibility Initiative\">{`WAI`}</abbr>{` `}<ARIA mdxType=\"ARIA\" />{` Authoring Practices`}</a>{`.\n`}<inlineCode parentName=\"p\">{`Tabs`}</inlineCode>{` is a higher-level component for quickly creating a\n`}<inlineCode parentName=\"p\">{`Nav`}</inlineCode>{` matched with a set of `}<inlineCode parentName=\"p\">{`TabPane`}</inlineCode>{`s.`}</p>\n    <ReactPlayground codeText={TabsUncontrolled} exampleClassName=\"bs-example-tabs\" mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <p><inlineCode parentName=\"p\">{`Tabs`}</inlineCode>{` can be controlled directly when you want to handle the\nselection logic personally.`}</p>\n    <ReactPlayground codeText={TabsControlled} exampleClassName=\"bs-example-tabs\" mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"no-animation\"\n    }}>{`No animation`}</h2>\n    <p>{`Set the `}<inlineCode parentName=\"p\">{`transition`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={TabsNoAnimation} exampleClassName=\"bs-example-tabs\" mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"fill-and-justify\"\n    }}>{`Fill and justify`}</h2>\n    <p>{`Similar to the `}<inlineCode parentName=\"p\">{`Nav`}</inlineCode>{` component, you can force the contents of your `}<inlineCode parentName=\"p\">{`Tabs`}</inlineCode>{` to extend the full available width. To\nproportionately fill the space use `}<inlineCode parentName=\"p\">{`fill`}</inlineCode>{`. Notice that the\n`}<inlineCode parentName=\"p\">{`Tabs`}</inlineCode>{` is the entire width but each `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` item is a different size.`}</p>\n    <ReactPlayground codeText={TabsFill} mdxType=\"ReactPlayground\" />\n    <p>{`If you want each `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` to be the same size use `}<inlineCode parentName=\"p\">{`justify`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={TabsJustified} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"dropdowns\"\n    }}>{`Dropdowns?`}</h2>\n    <p>{`Dynamic tabbed interfaces should not contain dropdown menus, as this\ncauses both usability and accessibility issues. From a usability\nperspective, the fact that the currently displayed tab’s trigger element\nis not immediately visible (as it’s inside the closed dropdown menu) can\ncause confusion. From an accessibility point of view, there is currently\nno sensible way to map this sort of construct to a standard WAI ARIA\npattern, meaning that it cannot be easily made understandable to users\nof assistive technologies.`}</p>\n    <p>{`That said, it Dropdowns do work technically (sans focus management), but\nwe don't make any claims about support.`}</p>\n    <h2 {...{\n      \"id\": \"custom-tab-layout\"\n    }}>{`Custom Tab Layout`}</h2>\n    <p>{`For more complex layouts the flexible `}<inlineCode parentName=\"p\">{`TabContainer`}</inlineCode>{`,`}</p>\n    <p><inlineCode parentName=\"p\">{`TabContent`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`TabPane`}</inlineCode>{` components along with any\nstyle of `}<inlineCode parentName=\"p\">{`Nav`}</inlineCode>{` allow you to quickly piece together your own Tabs\ncomponent with additional markup needed.`}</p>\n    <p>{`Create a set of NavItems each with an `}<inlineCode parentName=\"p\">{`eventKey`}</inlineCode>{`\ncorresponding to the eventKey of a `}<inlineCode parentName=\"p\">{`TabPane`}</inlineCode>{`. Wrap the whole\nthing in a `}<inlineCode parentName=\"p\">{`TabContainer`}</inlineCode>{` and you have fully functioning\ncustom tabs component. Check out the below example making use of the\ngrid system and pills.`}</p>\n    <ReactPlayground codeText={LeftTabs} exampleClassName=\"bs-example-tabs\" mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.Tabs} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.Tab} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.TabContainer} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.TabContent} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.TabPane} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}