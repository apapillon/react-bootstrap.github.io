{"version":3,"sources":["webpack:///./src/examples/Toast/Dismissible.js","webpack:///./src/examples/Toast/PlacementMulti.js","webpack:///./src/components/Callout-styles.module.scss","webpack:///./src/examples/Toast/Stacking.js","webpack:///./src/pages/components/toasts.mdx","webpack:///./src/examples/Toast/Basic.js","webpack:///./src/components/Callout.js","webpack:///./src/examples/Toast/Autohide.js","webpack:///./src/examples/Toast/Contextual.js","webpack:///./src/examples/Toast/Placement.js"],"names":["module","exports","name","_frontmatter","PageHeader","props","console","warn","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","mdxType","title","subTitle","codeText","ToastBasic","ToastDismissible","ToastStacking","parentName","ToastPlacement","ToastPlacementMulti","ToastAutohide","ToastContextual","metadata","data","Toast","ToastHeader","ToastBody","ToastContainer","isMDXComponent","require"],"mappings":"+EAAAA,EAAOC,QAAU,oxD,qBCAjBD,EAAOC,QAAU,k4C,qBCCjBD,EAAOC,QAAU,CAAC,QAAU,wCAAwC,QAAU,8EAA8E,OAAS,+E,mBCDrKD,EAAOC,QAAU,qhC,kICqCKC,E,oQAFTC,EAAe,GAOtBC,GALgBF,EAKW,aALH,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,oBAASG,KAIZG,EAAc,CAClBC,MAzBmB,aA0BnBN,gBAEIO,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGR,EACF,iBACD,OAAO,cAACK,EAAD,eAAeF,EAAiBH,EAAhC,CAAuCQ,WAAYA,EAAYC,QAAQ,cAM5E,cAACV,EAAD,CAAYW,MAAM,SAASC,SAAS,yGAAyGF,QAAQ,eACrJ,+OACA,oBACE,GAAM,YADR,YAGA,oBACE,GAAM,SADR,SAGA,0NACA,wNACA,cAAC,IAAD,CAAiBG,SAAUC,IAAYJ,QAAQ,oBAC/C,oBACE,GAAM,eADR,eAGA,cAAC,IAAD,CAAiBG,SAAUE,IAAkBL,QAAQ,oBACrD,oBACE,GAAM,YADR,YAGA,sHACA,cAAC,IAAD,CAAiBG,SAAUG,IAAeN,QAAQ,oBAClD,oBACE,GAAM,aADR,aAGA,oDAAiC,4BAAYO,WAAW,KAAvB,YAAjC,SAA+F,4BAAYA,WAAW,KAAvB,kBAA/F,0EACA,cAAC,IAAD,CAAiBJ,SAAUK,IAAgBR,QAAQ,oBACnD,oIACA,cAAC,IAAD,CAAiBG,SAAUM,IAAqBT,QAAQ,oBACxD,oBACE,GAAM,YADR,YAGA,6FAA0E,4BAAYO,WAAW,KAAvB,YAA1E,kBAAiJ,4BAAYA,WAAW,KAAvB,SAAjJ,qFACA,cAAC,IAAD,CAAiBJ,SAAUO,IAAeV,QAAQ,oBAClD,oBACE,GAAM,yBADR,yBAGA,+GACA,cAAC,IAAD,CAAiBG,SAAUQ,IAAiBX,QAAQ,oBACpD,oBACE,GAAM,OADR,OAGA,cAAC,IAAD,CAAcY,SAAUrB,EAAMsB,KAAKC,MAAOd,QAAQ,iBAClD,cAAC,IAAD,CAAcY,SAAUrB,EAAMsB,KAAKE,YAAaf,QAAQ,iBACxD,cAAC,IAAD,CAAcY,SAAUrB,EAAMsB,KAAKG,UAAWhB,QAAQ,iBACtD,cAAC,IAAD,CAAcY,SAAUrB,EAAMsB,KAAKI,eAAgBjB,QAAQ,kBAM/DF,EAAWoB,gBAAiB,G,mBC3G5BhC,EAAOC,QAAU,+b,kDCIjB,EAAegC,UAuCA,IAXf,SAAiB,GAAjB,qCACA,OACA,wEACAlB,uDACA,uC,mBCpCAf,EAAOC,QAAU,g+B,mBCAjBD,EAAOC,QAAU,m8B,mBCAjBD,EAAOC,QAAU","file":"component---src-pages-components-toasts-mdx-1095b29ee95b9882157c.js","sourcesContent":["module.exports = \"import React, { useState } from 'react';\\nimport Button from 'react-bootstrap/Button';\\nimport Col from 'react-bootstrap/Col';\\nimport Row from 'react-bootstrap/Row';\\nimport Toast from 'react-bootstrap/Toast';\\n\\nfunction DismissibleExample() {\\n  const [showA, setShowA] = useState(true);\\n  const [showB, setShowB] = useState(true);\\n\\n  const toggleShowA = () => setShowA(!showA);\\n  const toggleShowB = () => setShowB(!showB);\\n\\n  return (\\n    <Row>\\n      <Col md={6} className=\\\"mb-2\\\">\\n        <Button onClick={toggleShowA} className=\\\"mb-2\\\">\\n          Toggle Toast <strong>with</strong> Animation\\n        </Button>\\n        <Toast show={showA} onClose={toggleShowA}>\\n          <Toast.Header>\\n            <img\\n              src=\\\"holder.js/20x20?text=%20\\\"\\n              className=\\\"rounded me-2\\\"\\n              alt=\\\"\\\"\\n            />\\n            <strong className=\\\"me-auto\\\">Bootstrap</strong>\\n            <small>11 mins ago</small>\\n          </Toast.Header>\\n          <Toast.Body>Woohoo, you're reading this text in a Toast!</Toast.Body>\\n        </Toast>\\n      </Col>\\n      <Col md={6} className=\\\"mb-2\\\">\\n        <Button onClick={toggleShowB} className=\\\"mb-2\\\">\\n          Toggle Toast <strong>without</strong> Animation\\n        </Button>\\n        <Toast onClose={toggleShowB} show={showB} animation={false}>\\n          <Toast.Header>\\n            <img\\n              src=\\\"holder.js/20x20?text=%20\\\"\\n              className=\\\"rounded me-2\\\"\\n              alt=\\\"\\\"\\n            />\\n            <strong className=\\\"me-auto\\\">Bootstrap</strong>\\n            <small>11 mins ago</small>\\n          </Toast.Header>\\n          <Toast.Body>Woohoo, you're reading this text in a Toast!</Toast.Body>\\n        </Toast>\\n      </Col>\\n    </Row>\\n  );\\n}\\n\\nexport default DismissibleExample;\\n\"","module.exports = \"import React, { useState } from 'react';\\nimport Toast from 'react-bootstrap/Toast';\\nimport ToastContainer from 'react-bootstrap/ToastContainer';\\n\\nfunction PlacementMultiExample() {\\n  const [position, setPosition] = useState('top-start');\\n\\n  return (\\n    <div\\n      aria-live=\\\"polite\\\"\\n      aria-atomic=\\\"true\\\"\\n      className=\\\"bg-dark position-relative\\\"\\n      style={{ minHeight: '240px' }}\\n    >\\n      <ToastContainer position=\\\"top-end\\\" className=\\\"p-3\\\">\\n        <Toast>\\n          <Toast.Header>\\n            <img\\n              src=\\\"holder.js/20x20?text=%20\\\"\\n              className=\\\"rounded me-2\\\"\\n              alt=\\\"\\\"\\n            />\\n            <strong className=\\\"me-auto\\\">Bootstrap</strong>\\n            <small className=\\\"text-muted\\\">just now</small>\\n          </Toast.Header>\\n          <Toast.Body>See? Just like this.</Toast.Body>\\n        </Toast>\\n        <Toast>\\n          <Toast.Header>\\n            <img\\n              src=\\\"holder.js/20x20?text=%20\\\"\\n              className=\\\"rounded me-2\\\"\\n              alt=\\\"\\\"\\n            />\\n            <strong className=\\\"me-auto\\\">Bootstrap</strong>\\n            <small className=\\\"text-muted\\\">2 seconds ago</small>\\n          </Toast.Header>\\n          <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\\n        </Toast>\\n      </ToastContainer>\\n    </div>\\n  );\\n}\\n\\nexport default PlacementMultiExample;\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"callout\":\"Callout-styles-module--callout--1_K3h\",\"warning\":\"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h\",\"danger\":\"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h\"};","module.exports = \"import React, { useState } from 'react';\\nimport Toast from 'react-bootstrap/Toast';\\nimport ToastContainer from 'react-bootstrap/ToastContainer';\\n\\nfunction StackingExample() {\\n  const [position, setPosition] = useState('top-start');\\n\\n  return (\\n    <ToastContainer>\\n      <Toast>\\n        <Toast.Header>\\n          <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded me-2\\\" alt=\\\"\\\" />\\n          <strong className=\\\"me-auto\\\">Bootstrap</strong>\\n          <small className=\\\"text-muted\\\">just now</small>\\n        </Toast.Header>\\n        <Toast.Body>See? Just like this.</Toast.Body>\\n      </Toast>\\n      <Toast>\\n        <Toast.Header>\\n          <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded me-2\\\" alt=\\\"\\\" />\\n          <strong className=\\\"me-auto\\\">Bootstrap</strong>\\n          <small className=\\\"text-muted\\\">2 seconds ago</small>\\n        </Toast.Header>\\n        <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\\n      </Toast>\\n    </ToastContainer>\\n  );\\n}\\n\\nexport default StackingExample;\\n\"","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport Callout from '../../components/Callout';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport ToastBasic from '../../examples/Toast/Basic';\nimport ToastDismissible from '../../examples/Toast/Dismissible';\nimport ToastStacking from '../../examples/Toast/Stacking';\nimport ToastPlacement from '../../examples/Toast/Placement';\nimport ToastPlacementMulti from '../../examples/Toast/PlacementMulti';\nimport ToastAutohide from '../../examples/Toast/Autohide';\nimport ToastContextual from '../../examples/Toast/Contextual';\nexport const query = graphql`\n  query ToastQuery {\n    Toast: componentMetadata(displayName: { eq: \"Toast\" }) {\n      ...ComponentApi_metadata\n    }\n    ToastHeader: componentMetadata(displayName: { eq: \"ToastHeader\" }) {\n      ...ComponentApi_metadata\n    }\n    ToastBody: componentMetadata(displayName: { eq: \"ToastBody\" }) {\n      ...ComponentApi_metadata\n    }\n    ToastContainer: componentMetadata(displayName: { eq: \"ToastContainer\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageHeader = makeShortcode(\"PageHeader\");\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <PageHeader title=\"Toasts\" subTitle=\"Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.\" mdxType=\"PageHeader\" />\n    <p>{`Toasts are lightweight notifications designed to mimic the push notifications that have been popularized by mobile and desktop operating systems. They’re built with flexbox, so they’re easy to align and position.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"basic\"\n    }}>{`Basic`}</h3>\n    <p>{`To encourage extensible and predictable toasts, we recommend a header and body. Toast headers use display: flex, allowing easy alignment of content thanks to our margin and flexbox utilities.`}</p>\n    <p>{`Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your “toasted” content and strongly encourage a dismiss button.`}</p>\n    <ReactPlayground codeText={ToastBasic} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"dismissible\"\n    }}>{`Dismissible`}</h3>\n    <ReactPlayground codeText={ToastDismissible} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"stacking\"\n    }}>{`Stacking`}</h3>\n    <p>{`When you have multiple toasts, we default to vertically stacking them in a readable manner.`}</p>\n    <ReactPlayground codeText={ToastStacking} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"placement\"\n    }}>{`Placement`}</h3>\n    <p>{`Place toasts by setting a `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{` in a `}<inlineCode parentName=\"p\">{`ToastContainer`}</inlineCode>{`. The top right is often used for notifications, as is the top middle.`}</p>\n    <ReactPlayground codeText={ToastPlacement} mdxType=\"ReactPlayground\" />\n    <p>{`For systems that generate more notifications, consider using a wrapping element so they can easily stack.`}</p>\n    <ReactPlayground codeText={ToastPlacementMulti} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"autohide\"\n    }}>{`Autohide`}</h3>\n    <p>{`A Toast can also automatically hide after X milliseconds using the `}<inlineCode parentName=\"p\">{`autohide`}</inlineCode>{` prop with the `}<inlineCode parentName=\"p\">{`delay`}</inlineCode>{` prop to specify the delay. To open the toast, manually change the show property.`}</p>\n    <ReactPlayground codeText={ToastAutohide} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"contextual-variations\"\n    }}>{`Contextual variations`}</h3>\n    <p>{`Add any of the below mentioned modifier classes to change the appearance of a toast.`}</p>\n    <ReactPlayground codeText={ToastContextual} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.Toast} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.ToastHeader} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.ToastBody} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.ToastContainer} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = \"import Toast from 'react-bootstrap/Toast';\\n\\nfunction BasicExample() {\\n  return (\\n    <Toast>\\n      <Toast.Header>\\n        <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded me-2\\\" alt=\\\"\\\" />\\n        <strong className=\\\"me-auto\\\">Bootstrap</strong>\\n        <small>11 mins ago</small>\\n      </Toast.Header>\\n      <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\\n    </Toast>\\n  );\\n}\\n\\nexport default BasicExample;\\n\"","import PropTypes from 'prop-types';\n\nimport { css } from 'astroturf';\n\nconst styles = css`\n  @import '../css/theme';\n\n  .callout {\n    border-left: 4px solid transparent;\n    padding: 1.2rem 1.2rem 1.2rem calc(1rem - 4px);\n    margin-left: -1rem;\n    margin-bottom: 2rem;\n  }\n\n  .warning {\n    composes: callout;\n    background-color: transparentize($note, 0.7);\n    border-left-color: $note;\n  }\n  .danger {\n    composes: callout;\n    background-color: transparentize($error, 0.7);\n    border-left-color: $error;\n  }\n`;\n\nconst propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n  theme: PropTypes.oneOf(['danger', 'warning']),\n};\n\nfunction Callout({ title, children, theme }) {\n  return (\n    <aside role=\"note\" className={styles[theme || 'warning']}>\n      {title && <header className=\"h5\">{title}</header>}\n      <div>{children}</div>\n    </aside>\n  );\n}\n\nCallout.propTypes = propTypes;\n\nexport default Callout;\n","module.exports = \"import React, { useState } from 'react';\\nimport Button from 'react-bootstrap/Button';\\nimport Col from 'react-bootstrap/Col';\\nimport Row from 'react-bootstrap/Row';\\nimport Toast from 'react-bootstrap/Toast';\\n\\nfunction AutohideExample() {\\n  const [show, setShow] = useState(false);\\n\\n  return (\\n    <Row>\\n      <Col xs={6}>\\n        <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\\n          <Toast.Header>\\n            <img\\n              src=\\\"holder.js/20x20?text=%20\\\"\\n              className=\\\"rounded me-2\\\"\\n              alt=\\\"\\\"\\n            />\\n            <strong className=\\\"me-auto\\\">Bootstrap</strong>\\n            <small>11 mins ago</small>\\n          </Toast.Header>\\n          <Toast.Body>Woohoo, you're reading this text in a Toast!</Toast.Body>\\n        </Toast>\\n      </Col>\\n      <Col xs={6}>\\n        <Button onClick={() => setShow(true)}>Show Toast</Button>\\n      </Col>\\n    </Row>\\n  );\\n}\\n\\nexport default AutohideExample;\\n\"","module.exports = \"import Toast from 'react-bootstrap/Toast';\\n\\nfunction ContextualExample() {\\n  return (\\n    <>\\n      {[\\n        'Primary',\\n        'Secondary',\\n        'Success',\\n        'Danger',\\n        'Warning',\\n        'Info',\\n        'Light',\\n        'Dark',\\n      ].map((variant, idx) => (\\n        <Toast\\n          className=\\\"d-inline-block m-1\\\"\\n          bg={variant.toLowerCase()}\\n          key={idx}\\n        >\\n          <Toast.Header>\\n            <img\\n              src=\\\"holder.js/20x20?text=%20\\\"\\n              className=\\\"rounded me-2\\\"\\n              alt=\\\"\\\"\\n            />\\n            <strong className=\\\"me-auto\\\">Bootstrap</strong>\\n            <small>11 mins ago</small>\\n          </Toast.Header>\\n          <Toast.Body className={variant === 'Dark' && 'text-white'}>\\n            Hello, world! This is a toast message.\\n          </Toast.Body>\\n        </Toast>\\n      ))}\\n    </>\\n  );\\n}\\n\\nexport default ContextualExample;\\n\"","module.exports = \"import React, { useState } from 'react';\\nimport Form from 'react-bootstrap/Form';\\nimport Toast from 'react-bootstrap/Toast';\\nimport ToastContainer from 'react-bootstrap/ToastContainer';\\n\\nfunction PlacementExample() {\\n  const [position, setPosition] = useState('top-start');\\n\\n  return (\\n    <>\\n      <div className=\\\"mb-3\\\">\\n        <label htmlFor=\\\"selectToastPlacement\\\">Toast position</label>\\n        <Form.Select\\n          id=\\\"selectToastPlacement\\\"\\n          className=\\\"mt-2\\\"\\n          onChange={(e) => setPosition(e.currentTarget.value)}\\n        >\\n          {[\\n            'top-start',\\n            'top-center',\\n            'top-end',\\n            'middle-start',\\n            'middle-center',\\n            'middle-end',\\n            'bottom-start',\\n            'bottom-center',\\n            'bottom-end',\\n          ].map((p) => (\\n            <option key={p} value={p}>\\n              {p}\\n            </option>\\n          ))}\\n        </Form.Select>\\n      </div>\\n\\n      <div\\n        aria-live=\\\"polite\\\"\\n        aria-atomic=\\\"true\\\"\\n        className=\\\"bg-dark position-relative\\\"\\n        style={{ minHeight: '240px' }}\\n      >\\n        <ToastContainer className=\\\"p-3\\\" position={position}>\\n          <Toast>\\n            <Toast.Header closeButton={false}>\\n              <img\\n                src=\\\"holder.js/20x20?text=%20\\\"\\n                className=\\\"rounded me-2\\\"\\n                alt=\\\"\\\"\\n              />\\n              <strong className=\\\"me-auto\\\">Bootstrap</strong>\\n              <small>11 mins ago</small>\\n            </Toast.Header>\\n            <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\\n          </Toast>\\n        </ToastContainer>\\n      </div>\\n    </>\\n  );\\n}\\n\\nexport default PlacementExample;\\n\""],"sourceRoot":""}