(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{"91QH":function(e,t){e.exports="<Form>\n  {['checkbox', 'radio'].map((type) => (\n    <div key={type} className=\"mb-3\">\n      <Form.Check type={type} id={`check-api-${type}`}>\n        <Form.Check.Input type={type} isValid />\n        <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\n        <Form.Control.Feedback type=\"valid\">You did it!</Form.Control.Feedback>\n      </Form.Check>\n    </div>\n  ))}\n</Form>;\n"},ABTg:function(e,t){e.exports='<>\n  <Form.Check aria-label="option 1" />\n  <Form.Check type="radio" aria-label="radio 1" />\n</>;\n'},Q6D8:function(e,t,n){e.exports={callout:"Callout-styles-module--callout--1_K3h",warning:"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h",danger:"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h"}},Y2lv:function(e,t){e.exports='<Form>\n  {[\'checkbox\', \'radio\'].map((type) => (\n    <div key={`inline-${type}`} className="mb-3">\n      <Form.Check\n        inline\n        label="1"\n        name="group1"\n        type={type}\n        id={`inline-${type}-1`}\n      />\n      <Form.Check\n        inline\n        label="2"\n        name="group1"\n        type={type}\n        id={`inline-${type}-2`}\n      />\n      <Form.Check\n        inline\n        disabled\n        label="3 (disabled)"\n        type={type}\n        id={`inline-${type}-3`}\n      />\n    </div>\n  ))}\n</Form>;\n'},h55t:function(e,t,n){"use strict";var o=n("oYCi"),a=n("Q6D8");t.a=function(e){var t=e.title,n=e.children,r=e.theme;return Object(o.jsxs)("aside",{role:"note",className:a[r||"warning"],children:[t&&Object(o.jsx)("header",{className:"h5",children:t}),Object(o.jsx)("div",{children:n})]})}},hbQA:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return g})),n.d(t,"default",(function(){return f}));var o=n("rePB"),a=n("zLVn"),r=(n("mXGw"),n("7ljp")),i=n("Snbm"),d=n("h55t"),c=n("vXRK"),l=n("1u5/"),m=n("ljRQ"),p=n.n(m),s=n("91QH"),h=n.n(s),b=n("Y2lv"),u=n.n(b),y=n("ABTg"),x=n.n(y),j=n("zyQW"),O=n.n(j);function C(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function k(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?C(Object(n),!0).forEach((function(t){Object(o.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):C(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var g={},w={query:"1289801882",_frontmatter:g},F=i.a;function f(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.mdx)(F,k(k(k({},w),n),{},{components:t,mdxType:"MDXLayout"}),Object(r.mdx)("h1",k({},{id:"checks-and-radios"}),"Checks and radios"),Object(r.mdx)("p",{className:"lead"},"Create consistent cross-browser and cross-device checkboxes and radios with our completely rewritten checks component."),Object(r.mdx)("p",null,"For the non-textual checkbox and radio controls, ",Object(r.mdx)("inlineCode",{parentName:"p"},"FormCheck"),"\nprovides a single component for both types that adds some additional\nstyling and improved layout."),Object(r.mdx)("h2",k({},{id:"default-stacked"}),"Default (stacked)"),Object(r.mdx)("p",null,"By default, any number of checkboxes and radios that are immediate\nsibling will be vertically stacked and appropriately spaced with\nFormCheck."),Object(r.mdx)(l.a,{codeText:p.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",k({},{id:"switches"}),"Switches"),Object(r.mdx)("p",null,"A switch has the markup of a custom checkbox but uses ",Object(r.mdx)("inlineCode",{parentName:"p"},'type="switch"'),"\nto render a toggle switch. Switches also support the same customizable\nchildren as ",Object(r.mdx)("inlineCode",{parentName:"p"},"<FormCheck>"),"."),Object(r.mdx)(l.a,{codeText:O.a,mdxType:"ReactPlayground"}),Object(r.mdx)(d.a,{mdxType:"Callout"},"You can also use the ",Object(r.mdx)("code",null,"<Form.Switch>")," alias which encapsulates the above, in a very small component wrapper."),Object(r.mdx)("h2",k({},{id:"inline"}),"Inline"),Object(r.mdx)("p",null,"Group checkboxes or radios on the same horizontal row by adding the ",Object(r.mdx)("inlineCode",{parentName:"p"},"inline")," prop."),Object(r.mdx)(l.a,{codeText:u.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",k({},{id:"without-labels"}),"Without labels"),Object(r.mdx)("p",null,"When you render a FormCheck without a label (no ",Object(r.mdx)("inlineCode",{parentName:"p"},"children"),")\nsome additional styling is applied to keep the inputs from collapsing."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Remember to add an ",Object(r.mdx)("inlineCode",{parentName:"strong"},"aria-label")," when omitting labels!")),Object(r.mdx)(l.a,{codeText:x.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",k({},{id:"customizing-formcheck-rendering"}),"Customizing FormCheck rendering"),Object(r.mdx)("p",null,"When you need tighter control, or want to customize how the ",Object(r.mdx)("inlineCode",{parentName:"p"},"FormCheck")," component\nrenders, it may better to use its constituent parts directly."),Object(r.mdx)("p",null,"By provided ",Object(r.mdx)("inlineCode",{parentName:"p"},"children")," to the ",Object(r.mdx)("inlineCode",{parentName:"p"},"FormCheck")," you can forgo the default rendering and\nhandle it yourself. (You can still provide an ",Object(r.mdx)("inlineCode",{parentName:"p"},"id")," to the ",Object(r.mdx)("inlineCode",{parentName:"p"},"FormCheck")," or\n",Object(r.mdx)("inlineCode",{parentName:"p"},"FormGroup")," and have it propagate to the label and input)."),Object(r.mdx)(l.a,{codeText:h.a,mdxType:"ReactPlayground"}),Object(r.mdx)("h2",k({},{id:"api"}),"API"),Object(r.mdx)(c.a,{metadata:n.data.FormCheck,exportedBy:n.data.Form,mdxType:"ComponentApi"}),Object(r.mdx)(c.a,{metadata:n.data.FormCheckInput,exportedBy:n.data.FormCheck,mdxType:"ComponentApi"}),Object(r.mdx)(c.a,{metadata:n.data.FormCheckLabel,exportedBy:n.data.FormCheck,mdxType:"ComponentApi"}))}f.isMDXComponent=!0},ljRQ:function(e,t){e.exports="<Form>\n  {['checkbox', 'radio'].map((type) => (\n    <div key={`default-${type}`} className=\"mb-3\">\n      <Form.Check // prettier-ignore\n        type={type}\n        id={`default-${type}`}\n        label={`default ${type}`}\n      />\n\n      <Form.Check\n        disabled\n        type={type}\n        label={`disabled ${type}`}\n        id={`disabled-default-${type}`}\n      />\n    </div>\n  ))}\n</Form>;\n"},zyQW:function(e,t){e.exports='<Form>\n  <Form.Check // prettier-ignore\n    type="switch"\n    id="custom-switch"\n    label="Check this switch"\n  />\n  <Form.Check // prettier-ignore\n    disabled\n    type="switch"\n    label="disabled switch"\n    id="disabled-custom-switch"\n  />\n</Form>;\n'}}]);
//# sourceMappingURL=component---src-pages-forms-checks-radios-mdx-03808ecd199f2af734d3.js.map