(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{"2LcU":function(e,n){e.exports='import Form from \'react-bootstrap/Form\';\n\nfunction CheckReverseExample() {\n  return (\n    <Form>\n      {[\'checkbox\', \'radio\'].map((type) => (\n        <div key={`reverse-${type}`} className="mb-3">\n          <Form.Check\n            reverse\n            label="1"\n            name="group1"\n            type={type}\n            id={`reverse-${type}-1`}\n          />\n          <Form.Check\n            reverse\n            label="2"\n            name="group1"\n            type={type}\n            id={`reverse-${type}-2`}\n          />\n          <Form.Check\n            reverse\n            disabled\n            label="3 (disabled)"\n            type={type}\n            id={`reverse-${type}-3`}\n          />\n        </div>\n      ))}\n    </Form>\n  );\n}\n\nexport default CheckReverseExample;\n'},"91QH":function(e,n){e.exports="import Form from 'react-bootstrap/Form';\n\nfunction CheckApiExample() {\n  return (\n    <Form>\n      {['checkbox', 'radio'].map((type) => (\n        <div key={type} className=\"mb-3\">\n          <Form.Check type={type} id={`check-api-${type}`}>\n            <Form.Check.Input type={type} isValid />\n            <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\n            <Form.Control.Feedback type=\"valid\">\n              You did it!\n            </Form.Control.Feedback>\n          </Form.Check>\n        </div>\n      ))}\n    </Form>\n  );\n}\n\nexport default CheckApiExample;\n"},ABTg:function(e,n){e.exports='import Form from \'react-bootstrap/Form\';\n\nfunction NoLabelExample() {\n  return (\n    <>\n      <Form.Check aria-label="option 1" />\n      <Form.Check type="radio" aria-label="radio 1" />\n    </>\n  );\n}\n\nexport default NoLabelExample;\n'},Q6D8:function(e,n,t){e.exports={callout:"Callout-styles-module--callout--1_K3h",warning:"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h",danger:"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h"}},Y2lv:function(e,n){e.exports='import Form from \'react-bootstrap/Form\';\n\nfunction CheckInlineExample() {\n  return (\n    <Form>\n      {[\'checkbox\', \'radio\'].map((type) => (\n        <div key={`inline-${type}`} className="mb-3">\n          <Form.Check\n            inline\n            label="1"\n            name="group1"\n            type={type}\n            id={`inline-${type}-1`}\n          />\n          <Form.Check\n            inline\n            label="2"\n            name="group1"\n            type={type}\n            id={`inline-${type}-2`}\n          />\n          <Form.Check\n            inline\n            disabled\n            label="3 (disabled)"\n            type={type}\n            id={`inline-${type}-3`}\n          />\n        </div>\n      ))}\n    </Form>\n  );\n}\n\nexport default CheckInlineExample;\n'},h55t:function(e,n,t){"use strict";var o=t("oYCi"),a=t("Q6D8");n.a=function(e){var n=e.title,t=e.children,r=e.theme;return Object(o.jsxs)("aside",{role:"note",className:a[r||"warning"],children:[n&&Object(o.jsx)("header",{className:"h5",children:n}),Object(o.jsx)("div",{children:t})]})}},hbQA:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return w})),t.d(n,"default",(function(){return T}));var o,a=t("wx14"),r=t("zLVn"),d=(t("mXGw"),t("7ljp")),i=t("Snbm"),c=t("h55t"),l=t("vXRK"),m=t("1u5/"),p=t("ljRQ"),s=t.n(p),h=t("91QH"),u=t.n(h),b=t("Y2lv"),x=t.n(b),y=t("2LcU"),C=t.n(y),k=t("ABTg"),F=t.n(k),j=t("zyQW"),f=t.n(j),O=["components"],w={},g=(o="PageHeader",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),Object(d.mdx)("div",e)}),v={query:"1289801882",_frontmatter:w},N=i.a;function T(e){var n=e.components,t=Object(r.a)(e,O);return Object(d.mdx)(N,Object(a.a)({},v,t,{components:n,mdxType:"MDXLayout"}),Object(d.mdx)(g,{title:"Checks and radios",subTitle:"Create consistent cross-browser and cross-device checkboxes and radios with our completely rewritten checks component.",mdxType:"PageHeader"}),Object(d.mdx)("p",null,"For the non-textual checkbox and radio controls, ",Object(d.mdx)("inlineCode",{parentName:"p"},"FormCheck"),"\nprovides a single component for both types that adds some additional\nstyling and improved layout."),Object(d.mdx)("h2",{id:"default-stacked"},"Default (stacked)"),Object(d.mdx)("p",null,"By default, any number of checkboxes and radios that are immediate\nsibling will be vertically stacked and appropriately spaced with\nFormCheck."),Object(d.mdx)(m.a,{codeText:s.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h2",{id:"switches"},"Switches"),Object(d.mdx)("p",null,"A switch has the markup of a custom checkbox but uses ",Object(d.mdx)("inlineCode",{parentName:"p"},'type="switch"'),"\nto render a toggle switch. Switches also support the same customizable\nchildren as ",Object(d.mdx)("inlineCode",{parentName:"p"},"<FormCheck>"),"."),Object(d.mdx)(m.a,{codeText:f.a,mdxType:"ReactPlayground"}),Object(d.mdx)(c.a,{mdxType:"Callout"},"You can also use the ",Object(d.mdx)("code",null,"<Form.Switch>")," alias which encapsulates the above, in a very small component wrapper."),Object(d.mdx)("h2",{id:"inline"},"Inline"),Object(d.mdx)("p",null,"Group checkboxes or radios on the same horizontal row by adding the ",Object(d.mdx)("inlineCode",{parentName:"p"},"inline")," prop."),Object(d.mdx)(m.a,{codeText:x.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h2",{id:"reverse"},"Reverse"),Object(d.mdx)("p",null,"Put your checkboxes, radios, and switches on the opposite side with the ",Object(d.mdx)("inlineCode",{parentName:"p"},"reverse")," prop."),Object(d.mdx)(m.a,{codeText:C.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h2",{id:"without-labels"},"Without labels"),Object(d.mdx)("p",null,"When you render a FormCheck without a label (no ",Object(d.mdx)("inlineCode",{parentName:"p"},"children"),")\nsome additional styling is applied to keep the inputs from collapsing."),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Remember to add an ",Object(d.mdx)("inlineCode",{parentName:"strong"},"aria-label")," when omitting labels!")),Object(d.mdx)(m.a,{codeText:F.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h2",{id:"customizing-formcheck-rendering"},"Customizing FormCheck rendering"),Object(d.mdx)("p",null,"When you need tighter control, or want to customize how the ",Object(d.mdx)("inlineCode",{parentName:"p"},"FormCheck")," component\nrenders, it may better to use its constituent parts directly."),Object(d.mdx)("p",null,"By provided ",Object(d.mdx)("inlineCode",{parentName:"p"},"children")," to the ",Object(d.mdx)("inlineCode",{parentName:"p"},"FormCheck")," you can forgo the default rendering and\nhandle it yourself. (You can still provide an ",Object(d.mdx)("inlineCode",{parentName:"p"},"id")," to the ",Object(d.mdx)("inlineCode",{parentName:"p"},"FormCheck")," or\n",Object(d.mdx)("inlineCode",{parentName:"p"},"FormGroup")," and have it propagate to the label and input)."),Object(d.mdx)(m.a,{codeText:u.a,mdxType:"ReactPlayground"}),Object(d.mdx)("h2",{id:"api"},"API"),Object(d.mdx)(l.a,{metadata:t.data.FormCheck,exportedBy:t.data.Form,mdxType:"ComponentApi"}),Object(d.mdx)(l.a,{metadata:t.data.FormCheckInput,exportedBy:t.data.FormCheck,mdxType:"ComponentApi"}),Object(d.mdx)(l.a,{metadata:t.data.FormCheckLabel,exportedBy:t.data.FormCheck,mdxType:"ComponentApi"}))}T.isMDXComponent=!0},ljRQ:function(e,n){e.exports="import Form from 'react-bootstrap/Form';\n\nfunction CheckExample() {\n  return (\n    <Form>\n      {['checkbox', 'radio'].map((type) => (\n        <div key={`default-${type}`} className=\"mb-3\">\n          <Form.Check // prettier-ignore\n            type={type}\n            id={`default-${type}`}\n            label={`default ${type}`}\n          />\n\n          <Form.Check\n            disabled\n            type={type}\n            label={`disabled ${type}`}\n            id={`disabled-default-${type}`}\n          />\n        </div>\n      ))}\n    </Form>\n  );\n}\n\nexport default CheckExample;\n"},zyQW:function(e,n){e.exports='import Form from \'react-bootstrap/Form\';\n\nfunction SwitchExample() {\n  return (\n    <Form>\n      <Form.Check // prettier-ignore\n        type="switch"\n        id="custom-switch"\n        label="Check this switch"\n      />\n      <Form.Check // prettier-ignore\n        disabled\n        type="switch"\n        label="disabled switch"\n        id="disabled-custom-switch"\n      />\n    </Form>\n  );\n}\n\nexport default SwitchExample;\n'}}]);
//# sourceMappingURL=component---src-pages-forms-checks-radios-mdx-9a5fd7c42aac4777c9b0.js.map