(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{F13a:function(e,t){e.exports='<>\n  <FloatingLabel\n    controlId="floatingInput"\n    label="Email address"\n    className="mb-3"\n  >\n    <Form.Control type="email" placeholder="name@example.com" />\n  </FloatingLabel>\n  <FloatingLabel controlId="floatingPassword" label="Password">\n    <Form.Control type="password" placeholder="Password" />\n  </FloatingLabel>\n</>;\n'},cbck:function(e,t){e.exports='<>\n  <FloatingLabel controlId="floatingTextarea" label="Comments" className="mb-3">\n    <Form.Control as="textarea" placeholder="Leave a comment here" />\n  </FloatingLabel>\n  <FloatingLabel controlId="floatingTextarea2" label="Comments">\n    <Form.Control\n      as="textarea"\n      placeholder="Leave a comment here"\n      style={{ height: \'100px\' }}\n    />\n  </FloatingLabel>\n</>;\n'},lgJG:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return j})),n.d(t,"default",(function(){return w}));var o=n("rePB"),a=n("zLVn"),l=(n("mXGw"),n("7ljp")),r=n("Snbm"),i=n("vXRK"),m=n("1u5/"),c=n("F13a"),d=n.n(c),p=n("nJQO"),s=n.n(p),b=n("vChs"),u=n.n(b),x=n("vaWq"),g=n.n(x),h=n("cbck"),O=n.n(h);function F(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function f(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?F(Object(n),!0).forEach((function(t){Object(o.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):F(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var j={},y={query:"1987167102",_frontmatter:j},C=r.a;function w(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.mdx)(C,f(f(f({},y),n),{},{components:t,mdxType:"MDXLayout"}),Object(l.mdx)("h1",f({},{id:"floating-labels"}),"Floating labels"),Object(l.mdx)("p",{className:"lead"},"Create beautifully simple form labels that float over your input fields."),Object(l.mdx)("h2",f({},{id:"example"}),"Example"),Object(l.mdx)("p",null,"Wrap a ",Object(l.mdx)("inlineCode",{parentName:"p"},"<Form.Control>")," element in ",Object(l.mdx)("inlineCode",{parentName:"p"},"<FloatingLabel>")," to enable floating labels with\nBootstrap’s textual form fields. A ",Object(l.mdx)("inlineCode",{parentName:"p"},"placeholder")," is required\non each ",Object(l.mdx)("inlineCode",{parentName:"p"},"<Form.Control>")," as our method of CSS-only\nfloating labels uses the ",Object(l.mdx)("inlineCode",{parentName:"p"},":placeholder-shown")," pseudo-element."),Object(l.mdx)(m.a,{codeText:d.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",f({},{id:"textareas"}),"Textareas"),Object(l.mdx)("p",null,"By default, ",Object(l.mdx)("inlineCode",{parentName:"p"},"<textarea>"),"s will be the same height as ",Object(l.mdx)("inlineCode",{parentName:"p"},"<input>"),"s. To set a custom\nheight on your ",Object(l.mdx)("inlineCode",{parentName:"p"},"<textarea>"),", do not use the ",Object(l.mdx)("inlineCode",{parentName:"p"},"rows")," attribute. Instead, set an\nexplicit ",Object(l.mdx)("inlineCode",{parentName:"p"},"height")," (either inline or via custom CSS)."),Object(l.mdx)(m.a,{codeText:O.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",f({},{id:"selects"}),"Selects"),Object(l.mdx)("p",null,"Other than ",Object(l.mdx)("inlineCode",{parentName:"p"},"<Form.Control>"),", floating labels are only available on ",Object(l.mdx)("inlineCode",{parentName:"p"},"<Form.Select>"),"s.\nThey work in the same way, but unlike ",Object(l.mdx)("inlineCode",{parentName:"p"},"<input>"),"s, they’ll always show the ",Object(l.mdx)("inlineCode",{parentName:"p"},"<label>"),"\nin its floated state."),Object(l.mdx)(m.a,{codeText:g.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",f({},{id:"layout"}),"Layout"),Object(l.mdx)("p",null,"When working with the Bootstrap grid system, be sure to place form\nelements within column classes."),Object(l.mdx)(m.a,{codeText:u.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",f({},{id:"customizing-rendering"}),"Customizing rendering"),Object(l.mdx)("p",null,"If you need greater control over the rendering, use the ",Object(l.mdx)("inlineCode",{parentName:"p"},"<FormFloating>")," component\nto wrap your input and label. Also note that the ",Object(l.mdx)("inlineCode",{parentName:"p"},"<Form.Control>")," must come first\nso we can utilize a sibling selector (e.g., ~)."),Object(l.mdx)(m.a,{codeText:s.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",f({},{id:"api"}),"API"),Object(l.mdx)(i.a,{metadata:n.data.FormFloating,exportedBy:n.data.Form,mdxType:"ComponentApi"}),Object(l.mdx)(i.a,{metadata:n.data.FloatingLabel,mdxType:"ComponentApi"}))}w.isMDXComponent=!0},nJQO:function(e,t){e.exports='<>\n  <Form.Floating className="mb-3">\n    <Form.Control\n      id="floatingInputCustom"\n      type="email"\n      placeholder="name@example.com"\n    />\n    <label htmlFor="floatingInputCustom">Email address</label>\n  </Form.Floating>\n  <Form.Floating>\n    <Form.Control\n      id="floatingPasswordCustom"\n      type="password"\n      placeholder="Password"\n    />\n    <label htmlFor="floatingPasswordCustom">Password</label>\n  </Form.Floating>\n</>;\n'},vChs:function(e,t){e.exports='<Row className="g-2">\n  <Col md>\n    <FloatingLabel controlId="floatingInputGrid" label="Email address">\n      <Form.Control type="email" placeholder="name@example.com" />\n    </FloatingLabel>\n  </Col>\n  <Col md>\n    <FloatingLabel controlId="floatingSelectGrid" label="Works with selects">\n      <Form.Select aria-label="Floating label select example">\n        <option>Open this select menu</option>\n        <option value="1">One</option>\n        <option value="2">Two</option>\n        <option value="3">Three</option>\n      </Form.Select>\n    </FloatingLabel>\n  </Col>\n</Row>;\n'},vaWq:function(e,t){e.exports='<FloatingLabel controlId="floatingSelect" label="Works with selects">\n  <Form.Select aria-label="Floating label select example">\n    <option>Open this select menu</option>\n    <option value="1">One</option>\n    <option value="2">Two</option>\n    <option value="3">Three</option>\n  </Form.Select>\n</FloatingLabel>;\n'}}]);
//# sourceMappingURL=component---src-pages-forms-floating-labels-mdx-8fccfdbb76a2fb44482c.js.map