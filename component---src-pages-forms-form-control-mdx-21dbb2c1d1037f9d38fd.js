(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{"/kWs":function(e,o){e.exports='<>\n  <Form.Label htmlFor="exampleColorInput">Color picker</Form.Label>\n  <Form.Control\n    type="color"\n    id="exampleColorInput"\n    defaultValue="#563d7c"\n    title="Choose your color"\n  />\n</>;\n'},"73xP":function(e,o){e.exports='<>\n  <Form.Group controlId="formFile" className="mb-3">\n    <Form.Label>Default file input example</Form.Label>\n    <Form.Control type="file" />\n  </Form.Group>\n  <Form.Group controlId="formFileMultiple" className="mb-3">\n    <Form.Label>Multiple files input example</Form.Label>\n    <Form.Control type="file" multiple />\n  </Form.Group>\n  <Form.Group controlId="formFileDisabled" className="mb-3">\n    <Form.Label>Disabled file input example</Form.Label>\n    <Form.Control type="file" disabled />\n  </Form.Group>\n  <Form.Group controlId="formFileSm" className="mb-3">\n    <Form.Label>Small file input example</Form.Label>\n    <Form.Control type="file" size="sm" />\n  </Form.Group>\n  <Form.Group controlId="formFileLg" className="mb-3">\n    <Form.Label>Large file input example</Form.Label>\n    <Form.Control type="file" size="lg" />\n  </Form.Group>\n</>;\n'},EEMM:function(e,o){e.exports='<>\n  <Form.Control\n    type="text"\n    placeholder="Disabled input"\n    aria-label="Disabled input example"\n    disabled\n    readOnly\n  />\n  <br />\n  <Form.Control\n    type="text"\n    placeholder="Disabled readonly input"\n    aria-label="Disabled input example"\n    readOnly\n  />\n</>;\n'},FX7d:function(e,o,n){"use strict";n.r(o),n.d(o,"_frontmatter",(function(){return P})),n.d(o,"default",(function(){return v}));var t=n("rePB"),r=n("zLVn"),a=(n("mXGw"),n("7ljp")),l=n("Snbm"),m=n("vXRK"),p=n("1u5/"),d=n("fZum"),i=n.n(d),c=n("iIos"),s=n.n(c),u=n("EEMM"),x=n.n(u),b=n("oWAn"),F=n.n(b),y=n("dxsv"),f=n.n(y),O=n("73xP"),j=n.n(O),C=n("/kWs"),h=n.n(C);function g(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,t)}return n}function L(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?g(Object(n),!0).forEach((function(o){Object(t.a)(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}var P={},w={query:"2637151466",_frontmatter:P},G=l.a;function v(e){var o=e.components,n=Object(r.a)(e,["components"]);return Object(a.mdx)(G,L(L(L({},w),n),{},{components:o,mdxType:"MDXLayout"}),Object(a.mdx)("h1",L({},{id:"form-controls"}),"Form controls"),Object(a.mdx)("p",{className:"lead"},"Give textual form controls like ",Object(a.mdx)("code",null,"<input>"),"s and"," ",Object(a.mdx)("code",null,"<textarea>"),"s an upgrade with custom styles, sizing, focus states, and more."),Object(a.mdx)("h2",L({},{id:"example"}),"Example"),Object(a.mdx)("p",null,"For textual form controls—like ",Object(a.mdx)("inlineCode",{parentName:"p"},"input"),"s and ",Object(a.mdx)("inlineCode",{parentName:"p"},"textarea"),"s—use the ",Object(a.mdx)("inlineCode",{parentName:"p"},"FormControl")," component.\nFormControl adds some additional styles for general appearance, focus\nstate, sizing, and more."),Object(a.mdx)(p.a,{codeText:i.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",L({},{id:"sizing"}),"Sizing"),Object(a.mdx)("p",null,"Use ",Object(a.mdx)("inlineCode",{parentName:"p"},"size")," on ",Object(a.mdx)("inlineCode",{parentName:"p"},"<FormControl>")," to change the size of the input."),Object(a.mdx)(p.a,{codeText:s.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",L({},{id:"disabled"}),"Disabled"),Object(a.mdx)("p",null,"Add the ",Object(a.mdx)("inlineCode",{parentName:"p"},"disabled")," prop on an input to give it a grayed out appearance and remove pointer events."),Object(a.mdx)(p.a,{codeText:x.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",L({},{id:"readonly"}),"Readonly"),Object(a.mdx)("p",null,"Add the ",Object(a.mdx)("inlineCode",{parentName:"p"},"readOnly")," prop on an input to prevent modification\nof the input's value. Read-only inputs appear lighter (just like\ndisabled inputs), but retain the standard cursor."),Object(a.mdx)(p.a,{codeText:F.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",L({},{id:"readonly-plain-text"}),"Readonly plain text"),Object(a.mdx)("p",null,"If you want to have readonly elements in your form styled as plain text,\nuse the ",Object(a.mdx)("inlineCode",{parentName:"p"},"plaintext")," prop on FormControls to remove the\ndefault form field styling and preserve the correct margin and padding."),Object(a.mdx)(p.a,{codeText:f.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",L({},{id:"file-input"}),"File input"),Object(a.mdx)(p.a,{codeText:j.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",L({},{id:"color"}),"Color"),Object(a.mdx)(p.a,{codeText:h.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",L({},{id:"api"}),"API"),Object(a.mdx)(m.a,{metadata:n.data.FormControl,exportedBy:n.data.Form,mdxType:"ComponentApi"}))}v.isMDXComponent=!0},dxsv:function(e,o){e.exports='<Form>\n  <Form.Group as={Row} className="mb-3" controlId="formPlaintextEmail">\n    <Form.Label column sm="2">\n      Email\n    </Form.Label>\n    <Col sm="10">\n      <Form.Control plaintext readOnly defaultValue="email@example.com" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row} className="mb-3" controlId="formPlaintextPassword">\n    <Form.Label column sm="2">\n      Password\n    </Form.Label>\n    <Col sm="10">\n      <Form.Control type="password" placeholder="Password" />\n    </Col>\n  </Form.Group>\n</Form>;\n'},fZum:function(e,o){e.exports='<Form>\n  <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type="email" placeholder="name@example.com" />\n  </Form.Group>\n  <Form.Group className="mb-3" controlId="exampleForm.ControlTextarea1">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as="textarea" rows={3} />\n  </Form.Group>\n</Form>;\n'},iIos:function(e,o){e.exports='<>\n  <Form.Control size="lg" type="text" placeholder="Large text" />\n  <br />\n  <Form.Control type="text" placeholder="Normal text" />\n  <br />\n  <Form.Control size="sm" type="text" placeholder="Small text" />\n</>;\n'},oWAn:function(e,o){e.exports='<Form.Control type="text" placeholder="Readonly input here..." readOnly />;\n'}}]);
//# sourceMappingURL=component---src-pages-forms-form-control-mdx-21dbb2c1d1037f9d38fd.js.map