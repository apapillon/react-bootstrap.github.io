{"version":3,"sources":["webpack:///./src/examples/Form/ColorPicker.js","webpack:///./src/examples/Form/FormFile.js","webpack:///./src/examples/Form/FormControlDisabled.js","webpack:///./src/pages/forms/form-control.mdx","webpack:///./src/examples/Form/Plaintext.js","webpack:///./src/examples/Form/TextControls.js","webpack:///./src/examples/Form/InputSizes.js","webpack:///./src/examples/Form/InputReadOnly.js"],"names":["module","exports","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","className","parentName","codeText","FormTextControls","FormInputSizes","FormControlDisabled","InputReadOnly","Plaintext","FormFile","ColorPicker","metadata","data","FormControl","exportedBy","Form","isMDXComponent"],"mappings":"+EAAAA,EAAOC,QAAU,mN,qBCAjBD,EAAOC,QAAU,i3B,mBCAjBD,EAAOC,QAAU,iT,k7BCkBV,IAUMC,EAAe,GACtBC,EAAc,CAClBC,MAZmB,aAanBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,SAAeF,GAAiBM,GAAhC,IAAuCD,WAAYA,EAAYE,QAAQ,cAM5E,wBAAQ,CACN,GAAM,kBADR,iBAGA,mBAAGC,UAAU,QAAb,mCAC8B,0BAAO,WADrC,QAC4D,IAC9D,0BAAO,cAFL,oEAKA,wBAAQ,CACN,GAAM,YADR,WAGA,yDAAsC,4BAAYC,WAAW,KAAvB,SAAtC,SAAiG,4BAAYA,WAAW,KAAvB,YAAjG,aAAmK,4BAAYA,WAAW,KAAvB,eAAnK,gHAGA,cAAC,IAAD,CAAiBC,SAAUC,IAAkBJ,QAAQ,oBACrD,wBAAQ,CACN,GAAM,WADR,UAGA,8BAAW,4BAAYE,WAAW,KAAvB,QAAX,OAAmE,4BAAYA,WAAW,KAAvB,iBAAnE,qCACA,cAAC,IAAD,CAAiBC,SAAUE,IAAgBL,QAAQ,oBACnD,wBAAQ,CACN,GAAM,aADR,YAGA,kCAAe,4BAAYE,WAAW,KAAvB,YAAf,mFACA,cAAC,IAAD,CAAiBC,SAAUG,IAAqBN,QAAQ,oBACxD,wBAAQ,CACN,GAAM,aADR,YAGA,kCAAe,4BAAYE,WAAW,KAAvB,YAAf,kKAGA,cAAC,IAAD,CAAiBC,SAAUI,IAAeP,QAAQ,oBAClD,wBAAQ,CACN,GAAM,wBADR,uBAGA,4GACM,4BAAYE,WAAW,KAAvB,aADN,gHAGA,cAAC,IAAD,CAAiBC,SAAUK,IAAWR,QAAQ,oBAC9C,wBAAQ,CACN,GAAM,eADR,cAGA,cAAC,IAAD,CAAiBG,SAAUM,IAAUT,QAAQ,oBAC7C,wBAAQ,CACN,GAAM,UADR,SAGA,cAAC,IAAD,CAAiBG,SAAUO,IAAaV,QAAQ,oBAChD,wBAAQ,CACN,GAAM,QADR,OAGA,cAAC,IAAD,CAAcW,SAAUZ,EAAMa,KAAKC,YAAaC,WAAYf,EAAMa,KAAKG,KAAMf,QAAQ,kBAMzFH,EAAWmB,gBAAiB,G,mBCpG5B1B,EAAOC,QAAU,2hB,mBCAjBD,EAAOC,QAAU,mZ,mBCAjBD,EAAOC,QAAU,kO,mBCAjBD,EAAOC,QAAU","file":"component---src-pages-forms-form-control-mdx-99bc8ef08a16d2460881.js","sourcesContent":["module.exports = \"<>\\n  <Form.Label htmlFor=\\\"exampleColorInput\\\">Color picker</Form.Label>\\n  <Form.Control\\n    type=\\\"color\\\"\\n    id=\\\"exampleColorInput\\\"\\n    defaultValue=\\\"#563d7c\\\"\\n    title=\\\"Choose your color\\\"\\n  />\\n</>;\\n\"","module.exports = \"<>\\n  <Form.Group controlId=\\\"formFile\\\" className=\\\"mb-3\\\">\\n    <Form.Label>Default file input example</Form.Label>\\n    <Form.Control type=\\\"file\\\" />\\n  </Form.Group>\\n  <Form.Group controlId=\\\"formFileMultiple\\\" className=\\\"mb-3\\\">\\n    <Form.Label>Multiple files input example</Form.Label>\\n    <Form.Control type=\\\"file\\\" multiple />\\n  </Form.Group>\\n  <Form.Group controlId=\\\"formFileDisabled\\\" className=\\\"mb-3\\\">\\n    <Form.Label>Disabled file input example</Form.Label>\\n    <Form.Control type=\\\"file\\\" disabled />\\n  </Form.Group>\\n  <Form.Group controlId=\\\"formFileSm\\\" className=\\\"mb-3\\\">\\n    <Form.Label>Small file input example</Form.Label>\\n    <Form.Control type=\\\"file\\\" size=\\\"sm\\\" />\\n  </Form.Group>\\n  <Form.Group controlId=\\\"formFileLg\\\" className=\\\"mb-3\\\">\\n    <Form.Label>Large file input example</Form.Label>\\n    <Form.Control type=\\\"file\\\" size=\\\"lg\\\" />\\n  </Form.Group>\\n</>;\\n\"","module.exports = \"<>\\n  <Form.Control\\n    type=\\\"text\\\"\\n    placeholder=\\\"Disabled input\\\"\\n    aria-label=\\\"Disabled input example\\\"\\n    disabled\\n    readOnly\\n  />\\n  <br />\\n  <Form.Control\\n    type=\\\"text\\\"\\n    placeholder=\\\"Disabled readonly input\\\"\\n    aria-label=\\\"Disabled input example\\\"\\n    readOnly\\n  />\\n</>;\\n\"","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport FormTextControls from '../../examples/Form/TextControls';\nimport FormInputSizes from '../../examples/Form/InputSizes';\nimport FormControlDisabled from '../../examples/Form/FormControlDisabled';\nimport InputReadOnly from '../../examples/Form/InputReadOnly';\nimport Plaintext from '../../examples/Form/Plaintext';\nimport FormFile from '../../examples/Form/FormFile';\nimport ColorPicker from '../../examples/Form/ColorPicker';\nexport const query = graphql`\n  query FormControlQuery {\n    Form: componentMetadata(displayName: { eq: \"Form\" }) {\n      ...ComponentApi_metadata\n    }\n    FormControl: componentMetadata(displayName: { eq: \"FormControl\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"form-controls\"\n    }}>{`Form controls`}</h1>\n    <p className=\"lead\">\n  Give textual form controls like <code>{'<input>'}</code>s and{' '}\n  <code>{'<textarea>'}</code>s an upgrade with custom styles, sizing, focus\n  states, and more.\n    </p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`For textual form controls—like `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{`s and `}<inlineCode parentName=\"p\">{`textarea`}</inlineCode>{`s—use the `}<inlineCode parentName=\"p\">{`FormControl`}</inlineCode>{` component.\nFormControl adds some additional styles for general appearance, focus\nstate, sizing, and more.`}</p>\n    <ReactPlayground codeText={FormTextControls} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"sizing\"\n    }}>{`Sizing`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` on `}<inlineCode parentName=\"p\">{`<FormControl>`}</inlineCode>{` to change the size of the input.`}</p>\n    <ReactPlayground codeText={FormInputSizes} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h2>\n    <p>{`Add the `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{` prop on an input to give it a grayed out appearance and remove pointer events.`}</p>\n    <ReactPlayground codeText={FormControlDisabled} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"readonly\"\n    }}>{`Readonly`}</h2>\n    <p>{`Add the `}<inlineCode parentName=\"p\">{`readOnly`}</inlineCode>{` prop on an input to prevent modification\nof the input's value. Read-only inputs appear lighter (just like\ndisabled inputs), but retain the standard cursor.`}</p>\n    <ReactPlayground codeText={InputReadOnly} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"readonly-plain-text\"\n    }}>{`Readonly plain text`}</h2>\n    <p>{`If you want to have readonly elements in your form styled as plain text,\nuse the `}<inlineCode parentName=\"p\">{`plaintext`}</inlineCode>{` prop on FormControls to remove the\ndefault form field styling and preserve the correct margin and padding.`}</p>\n    <ReactPlayground codeText={Plaintext} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"file-input\"\n    }}>{`File input`}</h2>\n    <ReactPlayground codeText={FormFile} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"color\"\n    }}>{`Color`}</h2>\n    <ReactPlayground codeText={ColorPicker} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.FormControl} exportedBy={props.data.Form} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = \"<Form>\\n  <Form.Group as={Row} className=\\\"mb-3\\\" controlId=\\\"formPlaintextEmail\\\">\\n    <Form.Label column sm=\\\"2\\\">\\n      Email\\n    </Form.Label>\\n    <Col sm=\\\"10\\\">\\n      <Form.Control plaintext readOnly defaultValue=\\\"email@example.com\\\" />\\n    </Col>\\n  </Form.Group>\\n\\n  <Form.Group as={Row} className=\\\"mb-3\\\" controlId=\\\"formPlaintextPassword\\\">\\n    <Form.Label column sm=\\\"2\\\">\\n      Password\\n    </Form.Label>\\n    <Col sm=\\\"10\\\">\\n      <Form.Control type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n    </Col>\\n  </Form.Group>\\n</Form>;\\n\"","module.exports = \"<Form>\\n  <Form.Group className=\\\"mb-3\\\" controlId=\\\"exampleForm.ControlInput1\\\">\\n    <Form.Label>Email address</Form.Label>\\n    <Form.Control type=\\\"email\\\" placeholder=\\\"name@example.com\\\" />\\n  </Form.Group>\\n  <Form.Group className=\\\"mb-3\\\" controlId=\\\"exampleForm.ControlTextarea1\\\">\\n    <Form.Label>Example textarea</Form.Label>\\n    <Form.Control as=\\\"textarea\\\" rows={3} />\\n  </Form.Group>\\n</Form>;\\n\"","module.exports = \"<>\\n  <Form.Control size=\\\"lg\\\" type=\\\"text\\\" placeholder=\\\"Large text\\\" />\\n  <br />\\n  <Form.Control type=\\\"text\\\" placeholder=\\\"Normal text\\\" />\\n  <br />\\n  <Form.Control size=\\\"sm\\\" type=\\\"text\\\" placeholder=\\\"Small text\\\" />\\n</>;\\n\"","module.exports = \"<Form.Control type=\\\"text\\\" placeholder=\\\"Readonly input here...\\\" readOnly />;\\n\""],"sourceRoot":""}