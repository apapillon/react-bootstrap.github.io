(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{"/kWs":function(e,o){e.exports='import Form from \'react-bootstrap/Form\';\n\nfunction ColorPickerExample() {\n  return (\n    <>\n      <Form.Label htmlFor="exampleColorInput">Color picker</Form.Label>\n      <Form.Control\n        type="color"\n        id="exampleColorInput"\n        defaultValue="#563d7c"\n        title="Choose your color"\n      />\n    </>\n  );\n}\n\nexport default ColorPickerExample;\n'},"73xP":function(e,o){e.exports='import Form from \'react-bootstrap/Form\';\n\nfunction FormFileExample() {\n  return (\n    <>\n      <Form.Group controlId="formFile" className="mb-3">\n        <Form.Label>Default file input example</Form.Label>\n        <Form.Control type="file" />\n      </Form.Group>\n      <Form.Group controlId="formFileMultiple" className="mb-3">\n        <Form.Label>Multiple files input example</Form.Label>\n        <Form.Control type="file" multiple />\n      </Form.Group>\n      <Form.Group controlId="formFileDisabled" className="mb-3">\n        <Form.Label>Disabled file input example</Form.Label>\n        <Form.Control type="file" disabled />\n      </Form.Group>\n      <Form.Group controlId="formFileSm" className="mb-3">\n        <Form.Label>Small file input example</Form.Label>\n        <Form.Control type="file" size="sm" />\n      </Form.Group>\n      <Form.Group controlId="formFileLg" className="mb-3">\n        <Form.Label>Large file input example</Form.Label>\n        <Form.Control type="file" size="lg" />\n      </Form.Group>\n    </>\n  );\n}\n\nexport default FormFileExample;\n'},EEMM:function(e,o){e.exports='import Form from \'react-bootstrap/Form\';\n\nfunction FormControlDisabledExample() {\n  return (\n    <>\n      <Form.Control\n        type="text"\n        placeholder="Disabled input"\n        aria-label="Disabled input example"\n        disabled\n        readOnly\n      />\n      <br />\n      <Form.Control\n        type="text"\n        placeholder="Disabled readonly input"\n        aria-label="Disabled input example"\n        readOnly\n      />\n    </>\n  );\n}\n\nexport default FormControlDisabledExample;\n'},FX7d:function(e,o,n){"use strict";n.r(o),n.d(o,"_frontmatter",(function(){return E})),n.d(o,"default",(function(){return G}));var t,r=n("wx14"),a=n("zLVn"),l=(n("mXGw"),n("7ljp")),m=n("Snbm"),p=n("vXRK"),d=n("1u5/"),i=n("fZum"),s=n.n(i),c=n("iIos"),u=n.n(c),x=n("EEMM"),b=n.n(x),F=n("oWAn"),f=n.n(F),y=n("dxsv"),C=n.n(y),O=n("73xP"),j=n.n(O),h=n("/kWs"),g=n.n(h),L=["components"],E={},P=(t="PageHeader",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),Object(l.mdx)("div",e)}),w={query:"2637151466",_frontmatter:E},T=m.a;function G(e){var o=e.components,n=Object(a.a)(e,L);return Object(l.mdx)(T,Object(r.a)({},w,n,{components:o,mdxType:"MDXLayout"}),Object(l.mdx)(P,{title:"Form controls",subTitle:"Give textual form controls like <input>s and <textarea>s an upgrade with custom styles, sizing, focus states, and more.",mdxType:"PageHeader"}),Object(l.mdx)("h2",{id:"example"},"Example"),Object(l.mdx)("p",null,"For textual form controls—like ",Object(l.mdx)("inlineCode",{parentName:"p"},"input"),"s and ",Object(l.mdx)("inlineCode",{parentName:"p"},"textarea"),"s—use the ",Object(l.mdx)("inlineCode",{parentName:"p"},"FormControl")," component.\nFormControl adds some additional styles for general appearance, focus\nstate, sizing, and more."),Object(l.mdx)(d.a,{codeText:s.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",{id:"sizing"},"Sizing"),Object(l.mdx)("p",null,"Use ",Object(l.mdx)("inlineCode",{parentName:"p"},"size")," on ",Object(l.mdx)("inlineCode",{parentName:"p"},"<FormControl>")," to change the size of the input."),Object(l.mdx)(d.a,{codeText:u.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",{id:"disabled"},"Disabled"),Object(l.mdx)("p",null,"Add the ",Object(l.mdx)("inlineCode",{parentName:"p"},"disabled")," prop on an input to give it a grayed out appearance and remove pointer events."),Object(l.mdx)(d.a,{codeText:b.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",{id:"readonly"},"Readonly"),Object(l.mdx)("p",null,"Add the ",Object(l.mdx)("inlineCode",{parentName:"p"},"readOnly")," prop on an input to prevent modification\nof the input's value. Read-only inputs appear lighter (just like\ndisabled inputs), but retain the standard cursor."),Object(l.mdx)(d.a,{codeText:f.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",{id:"readonly-plain-text"},"Readonly plain text"),Object(l.mdx)("p",null,"If you want to have readonly elements in your form styled as plain text,\nuse the ",Object(l.mdx)("inlineCode",{parentName:"p"},"plaintext")," prop on FormControls to remove the\ndefault form field styling and preserve the correct margin and padding."),Object(l.mdx)(d.a,{codeText:C.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",{id:"file-input"},"File input"),Object(l.mdx)(d.a,{codeText:j.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",{id:"color"},"Color"),Object(l.mdx)(d.a,{codeText:g.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",{id:"api"},"API"),Object(l.mdx)(p.a,{metadata:n.data.FormControl,exportedBy:n.data.Form,mdxType:"ComponentApi"}))}G.isMDXComponent=!0},dxsv:function(e,o){e.exports='import Col from \'react-bootstrap/Col\';\nimport Form from \'react-bootstrap/Form\';\nimport Row from \'react-bootstrap/Row\';\n\nfunction PlaintextExample() {\n  return (\n    <Form>\n      <Form.Group as={Row} className="mb-3" controlId="formPlaintextEmail">\n        <Form.Label column sm="2">\n          Email\n        </Form.Label>\n        <Col sm="10">\n          <Form.Control plaintext readOnly defaultValue="email@example.com" />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} className="mb-3" controlId="formPlaintextPassword">\n        <Form.Label column sm="2">\n          Password\n        </Form.Label>\n        <Col sm="10">\n          <Form.Control type="password" placeholder="Password" />\n        </Col>\n      </Form.Group>\n    </Form>\n  );\n}\n\nexport default PlaintextExample;\n'},fZum:function(e,o){e.exports='import Form from \'react-bootstrap/Form\';\n\nfunction TextControlsExample() {\n  return (\n    <Form>\n      <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type="email" placeholder="name@example.com" />\n      </Form.Group>\n      <Form.Group className="mb-3" controlId="exampleForm.ControlTextarea1">\n        <Form.Label>Example textarea</Form.Label>\n        <Form.Control as="textarea" rows={3} />\n      </Form.Group>\n    </Form>\n  );\n}\n\nexport default TextControlsExample;\n'},iIos:function(e,o){e.exports='import Form from \'react-bootstrap/Form\';\n\nfunction InputSizesExample() {\n  return (\n    <>\n      <Form.Control size="lg" type="text" placeholder="Large text" />\n      <br />\n      <Form.Control type="text" placeholder="Normal text" />\n      <br />\n      <Form.Control size="sm" type="text" placeholder="Small text" />\n    </>\n  );\n}\n\nexport default InputSizesExample;\n'},oWAn:function(e,o){e.exports='import Form from \'react-bootstrap/Form\';\n\nfunction InputReadOnlyExample() {\n  return (\n    <Form.Control type="text" placeholder="Readonly input here..." readOnly />\n  );\n}\n\nexport default InputReadOnlyExample;\n'}}]);
//# sourceMappingURL=component---src-pages-forms-form-control-mdx-c0cd894fb401eff2da5d.js.map