{"version":3,"sources":["webpack:///./src/examples/Form/ColorPicker.js","webpack:///./src/examples/Form/FormFile.js","webpack:///./src/examples/Form/FormControlDisabled.js","webpack:///./src/pages/forms/form-control.mdx","webpack:///./src/examples/Form/Plaintext.js","webpack:///./src/examples/Form/TextControls.js","webpack:///./src/examples/Form/InputSizes.js","webpack:///./src/examples/Form/InputReadOnly.js"],"names":["module","exports","name","_frontmatter","PageHeader","props","console","warn","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","mdxType","title","subTitle","parentName","codeText","FormTextControls","FormInputSizes","FormControlDisabled","InputReadOnly","Plaintext","FormFile","ColorPicker","metadata","data","FormControl","exportedBy","Form","isMDXComponent"],"mappings":"+EAAAA,EAAOC,QAAU,gY,qBCAjBD,EAAOC,QAAU,4kC,mBCAjBD,EAAOC,QAAU,0gB,kIC8BKC,E,wPAFTC,EAAe,GAOtBC,GALgBF,EAKW,aALH,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,oBAASG,KAIZG,EAAc,CAClBC,MAnBmB,aAoBnBN,gBAEIO,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGR,EACF,iBACD,OAAO,cAACK,EAAD,eAAeF,EAAiBH,EAAhC,CAAuCQ,WAAYA,EAAYC,QAAQ,cAM5E,cAACV,EAAD,CAAYW,MAAM,gBAAgBC,SAAS,0HAA0HF,QAAQ,eAC7K,oBACE,GAAM,WADR,WAGA,yDAAsC,4BAAYG,WAAW,KAAvB,SAAtC,SAAiG,4BAAYA,WAAW,KAAvB,YAAjG,aAAmK,4BAAYA,WAAW,KAAvB,eAAnK,gHAGA,cAAC,IAAD,CAAiBC,SAAUC,IAAkBL,QAAQ,oBACrD,oBACE,GAAM,UADR,UAGA,8BAAW,4BAAYG,WAAW,KAAvB,QAAX,OAAmE,4BAAYA,WAAW,KAAvB,iBAAnE,qCACA,cAAC,IAAD,CAAiBC,SAAUE,IAAgBN,QAAQ,oBACnD,oBACE,GAAM,YADR,YAGA,kCAAe,4BAAYG,WAAW,KAAvB,YAAf,mFACA,cAAC,IAAD,CAAiBC,SAAUG,IAAqBP,QAAQ,oBACxD,oBACE,GAAM,YADR,YAGA,kCAAe,4BAAYG,WAAW,KAAvB,YAAf,kKAGA,cAAC,IAAD,CAAiBC,SAAUI,IAAeR,QAAQ,oBAClD,oBACE,GAAM,uBADR,uBAGA,4GACM,4BAAYG,WAAW,KAAvB,aADN,gHAGA,cAAC,IAAD,CAAiBC,SAAUK,IAAWT,QAAQ,oBAC9C,oBACE,GAAM,cADR,cAGA,cAAC,IAAD,CAAiBI,SAAUM,IAAUV,QAAQ,oBAC7C,oBACE,GAAM,SADR,SAGA,cAAC,IAAD,CAAiBI,SAAUO,IAAaX,QAAQ,oBAChD,oBACE,GAAM,OADR,OAGA,cAAC,IAAD,CAAcY,SAAUrB,EAAMsB,KAAKC,YAAaC,WAAYxB,EAAMsB,KAAKG,KAAMhB,QAAQ,kBAMzFF,EAAWmB,gBAAiB,G,mBCpG5B/B,EAAOC,QAAU,4zB,mBCAjBD,EAAOC,QAAU,skB,mBCAjBD,EAAOC,QAAU,qY,mBCAjBD,EAAOC,QAAU","file":"component---src-pages-forms-form-control-mdx-c0cd894fb401eff2da5d.js","sourcesContent":["module.exports = \"import Form from 'react-bootstrap/Form';\\n\\nfunction ColorPickerExample() {\\n  return (\\n    <>\\n      <Form.Label htmlFor=\\\"exampleColorInput\\\">Color picker</Form.Label>\\n      <Form.Control\\n        type=\\\"color\\\"\\n        id=\\\"exampleColorInput\\\"\\n        defaultValue=\\\"#563d7c\\\"\\n        title=\\\"Choose your color\\\"\\n      />\\n    </>\\n  );\\n}\\n\\nexport default ColorPickerExample;\\n\"","module.exports = \"import Form from 'react-bootstrap/Form';\\n\\nfunction FormFileExample() {\\n  return (\\n    <>\\n      <Form.Group controlId=\\\"formFile\\\" className=\\\"mb-3\\\">\\n        <Form.Label>Default file input example</Form.Label>\\n        <Form.Control type=\\\"file\\\" />\\n      </Form.Group>\\n      <Form.Group controlId=\\\"formFileMultiple\\\" className=\\\"mb-3\\\">\\n        <Form.Label>Multiple files input example</Form.Label>\\n        <Form.Control type=\\\"file\\\" multiple />\\n      </Form.Group>\\n      <Form.Group controlId=\\\"formFileDisabled\\\" className=\\\"mb-3\\\">\\n        <Form.Label>Disabled file input example</Form.Label>\\n        <Form.Control type=\\\"file\\\" disabled />\\n      </Form.Group>\\n      <Form.Group controlId=\\\"formFileSm\\\" className=\\\"mb-3\\\">\\n        <Form.Label>Small file input example</Form.Label>\\n        <Form.Control type=\\\"file\\\" size=\\\"sm\\\" />\\n      </Form.Group>\\n      <Form.Group controlId=\\\"formFileLg\\\" className=\\\"mb-3\\\">\\n        <Form.Label>Large file input example</Form.Label>\\n        <Form.Control type=\\\"file\\\" size=\\\"lg\\\" />\\n      </Form.Group>\\n    </>\\n  );\\n}\\n\\nexport default FormFileExample;\\n\"","module.exports = \"import Form from 'react-bootstrap/Form';\\n\\nfunction FormControlDisabledExample() {\\n  return (\\n    <>\\n      <Form.Control\\n        type=\\\"text\\\"\\n        placeholder=\\\"Disabled input\\\"\\n        aria-label=\\\"Disabled input example\\\"\\n        disabled\\n        readOnly\\n      />\\n      <br />\\n      <Form.Control\\n        type=\\\"text\\\"\\n        placeholder=\\\"Disabled readonly input\\\"\\n        aria-label=\\\"Disabled input example\\\"\\n        readOnly\\n      />\\n    </>\\n  );\\n}\\n\\nexport default FormControlDisabledExample;\\n\"","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport FormTextControls from '../../examples/Form/TextControls';\nimport FormInputSizes from '../../examples/Form/InputSizes';\nimport FormControlDisabled from '../../examples/Form/FormControlDisabled';\nimport InputReadOnly from '../../examples/Form/InputReadOnly';\nimport Plaintext from '../../examples/Form/Plaintext';\nimport FormFile from '../../examples/Form/FormFile';\nimport ColorPicker from '../../examples/Form/ColorPicker';\nexport const query = graphql`\n  query FormControlQuery {\n    Form: componentMetadata(displayName: { eq: \"Form\" }) {\n      ...ComponentApi_metadata\n    }\n    FormControl: componentMetadata(displayName: { eq: \"FormControl\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageHeader = makeShortcode(\"PageHeader\");\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <PageHeader title=\"Form controls\" subTitle=\"Give textual form controls like <input>s and <textarea>s an upgrade with custom styles, sizing, focus states, and more.\" mdxType=\"PageHeader\" />\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`For textual form controls—like `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{`s and `}<inlineCode parentName=\"p\">{`textarea`}</inlineCode>{`s—use the `}<inlineCode parentName=\"p\">{`FormControl`}</inlineCode>{` component.\nFormControl adds some additional styles for general appearance, focus\nstate, sizing, and more.`}</p>\n    <ReactPlayground codeText={FormTextControls} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"sizing\"\n    }}>{`Sizing`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` on `}<inlineCode parentName=\"p\">{`<FormControl>`}</inlineCode>{` to change the size of the input.`}</p>\n    <ReactPlayground codeText={FormInputSizes} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h2>\n    <p>{`Add the `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{` prop on an input to give it a grayed out appearance and remove pointer events.`}</p>\n    <ReactPlayground codeText={FormControlDisabled} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"readonly\"\n    }}>{`Readonly`}</h2>\n    <p>{`Add the `}<inlineCode parentName=\"p\">{`readOnly`}</inlineCode>{` prop on an input to prevent modification\nof the input's value. Read-only inputs appear lighter (just like\ndisabled inputs), but retain the standard cursor.`}</p>\n    <ReactPlayground codeText={InputReadOnly} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"readonly-plain-text\"\n    }}>{`Readonly plain text`}</h2>\n    <p>{`If you want to have readonly elements in your form styled as plain text,\nuse the `}<inlineCode parentName=\"p\">{`plaintext`}</inlineCode>{` prop on FormControls to remove the\ndefault form field styling and preserve the correct margin and padding.`}</p>\n    <ReactPlayground codeText={Plaintext} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"file-input\"\n    }}>{`File input`}</h2>\n    <ReactPlayground codeText={FormFile} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"color\"\n    }}>{`Color`}</h2>\n    <ReactPlayground codeText={ColorPicker} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.FormControl} exportedBy={props.data.Form} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = \"import Col from 'react-bootstrap/Col';\\nimport Form from 'react-bootstrap/Form';\\nimport Row from 'react-bootstrap/Row';\\n\\nfunction PlaintextExample() {\\n  return (\\n    <Form>\\n      <Form.Group as={Row} className=\\\"mb-3\\\" controlId=\\\"formPlaintextEmail\\\">\\n        <Form.Label column sm=\\\"2\\\">\\n          Email\\n        </Form.Label>\\n        <Col sm=\\\"10\\\">\\n          <Form.Control plaintext readOnly defaultValue=\\\"email@example.com\\\" />\\n        </Col>\\n      </Form.Group>\\n\\n      <Form.Group as={Row} className=\\\"mb-3\\\" controlId=\\\"formPlaintextPassword\\\">\\n        <Form.Label column sm=\\\"2\\\">\\n          Password\\n        </Form.Label>\\n        <Col sm=\\\"10\\\">\\n          <Form.Control type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n        </Col>\\n      </Form.Group>\\n    </Form>\\n  );\\n}\\n\\nexport default PlaintextExample;\\n\"","module.exports = \"import Form from 'react-bootstrap/Form';\\n\\nfunction TextControlsExample() {\\n  return (\\n    <Form>\\n      <Form.Group className=\\\"mb-3\\\" controlId=\\\"exampleForm.ControlInput1\\\">\\n        <Form.Label>Email address</Form.Label>\\n        <Form.Control type=\\\"email\\\" placeholder=\\\"name@example.com\\\" />\\n      </Form.Group>\\n      <Form.Group className=\\\"mb-3\\\" controlId=\\\"exampleForm.ControlTextarea1\\\">\\n        <Form.Label>Example textarea</Form.Label>\\n        <Form.Control as=\\\"textarea\\\" rows={3} />\\n      </Form.Group>\\n    </Form>\\n  );\\n}\\n\\nexport default TextControlsExample;\\n\"","module.exports = \"import Form from 'react-bootstrap/Form';\\n\\nfunction InputSizesExample() {\\n  return (\\n    <>\\n      <Form.Control size=\\\"lg\\\" type=\\\"text\\\" placeholder=\\\"Large text\\\" />\\n      <br />\\n      <Form.Control type=\\\"text\\\" placeholder=\\\"Normal text\\\" />\\n      <br />\\n      <Form.Control size=\\\"sm\\\" type=\\\"text\\\" placeholder=\\\"Small text\\\" />\\n    </>\\n  );\\n}\\n\\nexport default InputSizesExample;\\n\"","module.exports = \"import Form from 'react-bootstrap/Form';\\n\\nfunction InputReadOnlyExample() {\\n  return (\\n    <Form.Control type=\\\"text\\\" placeholder=\\\"Readonly input here...\\\" readOnly />\\n  );\\n}\\n\\nexport default InputReadOnlyExample;\\n\""],"sourceRoot":""}