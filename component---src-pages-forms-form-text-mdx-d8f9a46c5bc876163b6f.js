(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{Q6D8:function(e,t,n){e.exports={callout:"Callout-styles-module--callout--1_K3h",warning:"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h",danger:"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h"}},h55t:function(e,t,n){"use strict";var o=n("oYCi"),a=n("Q6D8");t.a=function(e){var t=e.title,n=e.children,r=e.theme;return Object(o.jsxs)("aside",{role:"note",className:a[r||"warning"],children:[t&&Object(o.jsx)("header",{className:"h5",children:t}),Object(o.jsx)("div",{children:n})]})}},mL2v:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return x})),n.d(t,"default",(function(){return j}));var o,a=n("wx14"),r=n("zLVn"),l=(n("mXGw"),n("7ljp")),s=n("Snbm"),i=n("h55t"),d=n("vXRK"),c=n("1u5/"),m=n("zq7G"),u=n.n(m),p=["components"],x={},b=(o="PageHeader",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),Object(l.mdx)("div",e)}),h={query:"22746044",_frontmatter:x},w=s.a;function j(e){var t=e.components,n=Object(r.a)(e,p);return Object(l.mdx)(w,Object(a.a)({},h,n,{components:t,mdxType:"MDXLayout"}),Object(l.mdx)(b,{title:"Form text",subTitle:"Create block-level or inline-level form text.",mdxType:"PageHeader"}),Object(l.mdx)("h2",{id:"overview"},"Overview"),Object(l.mdx)("p",null,"Block-level help text in forms can be created using ",Object(l.mdx)("inlineCode",{parentName:"p"},"<Form.Text>"),". Inline help\ntext can be flexibly implemented using any inline HTML element and utility classes\nlike ",Object(l.mdx)("inlineCode",{parentName:"p"},".text-muted"),"."),Object(l.mdx)(i.a,{mdxType:"Callout"},Object(l.mdx)("h5",null,"Associating help text with form controls"),"Help text should be explicitly associated with the form control it relates to using the ",Object(l.mdx)("code",null,"aria-describedby")," attribute. This will ensure that assistive technologies—such as screen readers—will announce this help text when the user focuses or enters the control."),Object(l.mdx)("p",null,"Form text below inputs can be styled with ",Object(l.mdx)("inlineCode",{parentName:"p"},"<Form.Text>"),". This component includes\n",Object(l.mdx)("inlineCode",{parentName:"p"},"display: block")," and adds some top margin for easy spacing from the inputs above."),Object(l.mdx)(c.a,{codeText:u.a,mdxType:"ReactPlayground"}),Object(l.mdx)("h2",{id:"api"},"API"),Object(l.mdx)(d.a,{metadata:n.data.FormText,exportedBy:n.data.Form,mdxType:"ComponentApi"}))}j.isMDXComponent=!0},zq7G:function(e,t){e.exports='import Form from \'react-bootstrap/Form\';\n\nfunction FormTextExample() {\n  return (\n    <>\n      <Form.Label htmlFor="inputPassword5">Password</Form.Label>\n      <Form.Control\n        type="password"\n        id="inputPassword5"\n        aria-describedby="passwordHelpBlock"\n      />\n      <Form.Text id="passwordHelpBlock" muted>\n        Your password must be 8-20 characters long, contain letters and numbers,\n        and must not contain spaces, special characters, or emoji.\n      </Form.Text>\n    </>\n  );\n}\n\nexport default FormTextExample;\n'}}]);
//# sourceMappingURL=component---src-pages-forms-form-text-mdx-d8f9a46c5bc876163b6f.js.map