{"version":3,"sources":["webpack:///./src/examples/Form/GridAutoSizingColMix.js","webpack:///./src/examples/Form/GridColSizes.js","webpack:///./src/pages/forms/layout.mdx","webpack:///./src/examples/Form/FormLabelSizing.js","webpack:///./src/examples/Form/GridAutoSizing.js","webpack:///./src/examples/Form/GridComplex.js","webpack:///./src/examples/Form/FormGroup.js","webpack:///./src/examples/Form/GridBasic.js","webpack:///./src/examples/Form/Horizontal.js"],"names":["module","exports","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","className","parentName","codeText","FormGroup","GridBasic","GridComplex","Horizontal","FormLabelSizing","GridColSizes","GridAutoSizing","GridAutoSizingColMix","metadata","data","exportedBy","Form","isMDXComponent"],"mappings":"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","file":"component---src-pages-forms-layout-mdx-783518bb5846fb6e4bf7.js","sourcesContent":["module.exports = \"<Form>\\n  <Row className=\\\"align-items-center\\\">\\n    <Col sm={3} className=\\\"my-1\\\">\\n      <Form.Label htmlFor=\\\"inlineFormInputName\\\" visuallyHidden>\\n        Name\\n      </Form.Label>\\n      <Form.Control id=\\\"inlineFormInputName\\\" placeholder=\\\"Jane Doe\\\" />\\n    </Col>\\n    <Col sm={3} className=\\\"my-1\\\">\\n      <Form.Label htmlFor=\\\"inlineFormInputGroupUsername\\\" visuallyHidden>\\n        Username\\n      </Form.Label>\\n      <InputGroup>\\n        <InputGroup.Text>@</InputGroup.Text>\\n        <FormControl id=\\\"inlineFormInputGroupUsername\\\" placeholder=\\\"Username\\\" />\\n      </InputGroup>\\n    </Col>\\n    <Col xs=\\\"auto\\\" className=\\\"my-1\\\">\\n      <Form.Check type=\\\"checkbox\\\" id=\\\"autoSizingCheck2\\\" label=\\\"Remember me\\\" />\\n    </Col>\\n    <Col xs=\\\"auto\\\" className=\\\"my-1\\\">\\n      <Button type=\\\"submit\\\">Submit</Button>\\n    </Col>\\n  </Row>\\n</Form>;\\n\"","module.exports = \"<Form>\\n  <Row>\\n    <Col xs={7}>\\n      <Form.Control placeholder=\\\"City\\\" />\\n    </Col>\\n    <Col>\\n      <Form.Control placeholder=\\\"State\\\" />\\n    </Col>\\n    <Col>\\n      <Form.Control placeholder=\\\"Zip\\\" />\\n    </Col>\\n  </Row>\\n</Form>;\\n\"","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport FormGroup from '../../examples/Form/FormGroup';\nimport FormLabelSizing from '../../examples/Form/FormLabelSizing';\nimport GridAutoSizing from '../../examples/Form/GridAutoSizing';\nimport GridAutoSizingColMix from '../../examples/Form/GridAutoSizingColMix';\nimport GridBasic from '../../examples/Form/GridBasic';\nimport GridColSizes from '../../examples/Form/GridColSizes';\nimport GridComplex from '../../examples/Form/GridComplex';\nimport Horizontal from '../../examples/Form/Horizontal';\nexport const query = graphql`\n  query FormLayoutQuery {\n    Form: componentMetadata(displayName: { eq: \"Form\" }) {\n      ...ComponentApi_metadata\n    }\n    FormGroup: componentMetadata(displayName: { eq: \"FormGroup\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"layout\"\n    }}>{`Layout`}</h1>\n    <p className=\"lead\">\n  Give your forms some structure—from inline to horizontal to custom grid\n  implementations—with our form layout options.\n    </p>\n    <h2 {...{\n      \"id\": \"forms\"\n    }}>{`Forms`}</h2>\n    <p>{`Every group of form fields should reside in a `}<inlineCode parentName=\"p\">{`<Form>`}</inlineCode>{` element. Bootstrap\nprovides no default styling for the `}<inlineCode parentName=\"p\">{`<Form>`}</inlineCode>{` element, but there are some\npowerful browser features that are provided by default.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`New to browser forms? Consider reviewing `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\"\n        }}>{`the MDN form docs`}</a>{`\nfor an overview and complete list of available attributes.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<button>`}</inlineCode>{`s within a `}<inlineCode parentName=\"li\">{`<Form>`}</inlineCode>{` default to `}<inlineCode parentName=\"li\">{`type=\"submit\"`}</inlineCode>{`, so strive to be\nspecific and always include a `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`You can disable every form element within a form with the `}<inlineCode parentName=\"li\">{`disabled`}</inlineCode>{` attribute\non the `}<inlineCode parentName=\"li\">{`<Form>`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`Since Bootstrap applies `}<inlineCode parentName=\"p\">{`display: block`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`width: 100%`}</inlineCode>{` to almost all our\nform controls, forms will by default stack vertically. Additional classes can\nbe used to vary this layout on a per-form basis.`}</p>\n    <h2 {...{\n      \"id\": \"form-groups\"\n    }}>{`Form groups`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`FormGroup`}</inlineCode>{` component is the easiest way to add some structure to forms.\nIt provides a flexible container for grouping of labels, controls, optional\nhelp text, and form validation messaging. Use it with `}<inlineCode parentName=\"p\">{`fieldset`}</inlineCode>{`s, `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{`s,\nor nearly any other element.`}</p>\n    <p>{`You also add the `}<inlineCode parentName=\"p\">{`controlId`}</inlineCode>{` prop to accessibly wire the nested label and\ninput together via the `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={FormGroup} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"form-grid\"\n    }}>{`Form grid`}</h2>\n    <p>{`More complex forms can be built using the grid components. Use these for\nform layouts that require multiple columns, varied widths, and additional\nalignment options.`}</p>\n    <ReactPlayground codeText={GridBasic} mdxType=\"ReactPlayground\" />\n    <p>{`More complex layouts can also be created with the grid system.`}</p>\n    <ReactPlayground codeText={GridComplex} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"horizontal-form\"\n    }}>{`Horizontal form`}</h2>\n    <p>{`Create horizontal forms with the grid by adding `}<inlineCode parentName=\"p\">{`as={Row}`}</inlineCode>{` to form groups and\nusing `}<inlineCode parentName=\"p\">{`Col`}</inlineCode>{` to specify the width of your labels and controls. Be sure to add\nthe `}<inlineCode parentName=\"p\">{`column `}</inlineCode>{` prop to your `}<inlineCode parentName=\"p\">{`FormLabel`}</inlineCode>{`s as well so they’re vertically centered\nwith their associated form controls.`}</p>\n    <p>{`At times, you maybe need to use margin or padding utilities to create that\nperfect alignment you need. For example, we’ve removed the `}<inlineCode parentName=\"p\">{`padding-top`}</inlineCode>{` on our\nstacked radio inputs label to better align the text baseline.`}</p>\n    <ReactPlayground codeText={Horizontal} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"horizontal-form-label-sizing\"\n    }}>{`Horizontal form label sizing`}</h3>\n    <p>{`You can size the `}<inlineCode parentName=\"p\">{`<FormLabel>`}</inlineCode>{` using the `}<inlineCode parentName=\"p\">{`column`}</inlineCode>{` prop as shown.`}</p>\n    <ReactPlayground codeText={FormLabelSizing} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"column-sizing\"\n    }}>{`Column sizing`}</h2>\n    <p>{`As shown in the previous examples, our grid system allows you to place any number\nof `}<inlineCode parentName=\"p\">{`<Col>`}</inlineCode>{`s within a `}<inlineCode parentName=\"p\">{`<Row>`}</inlineCode>{`. They'll split the available width equally between\nthem. You may also pick a subset of your columns to take up more or less space,\nwhile the remaining `}<inlineCode parentName=\"p\">{`<Col>`}</inlineCode>{`s equally split the rest, with specific column classes\nlike `}<inlineCode parentName=\"p\">{`<Col xs={7}>`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={GridColSizes} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"auto-sizing\"\n    }}>{`Auto-sizing`}</h2>\n    <p>{`The example below uses a flexbox utility to vertically center the contents and\nchanges `}<inlineCode parentName=\"p\">{`<Col>`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`<Col xs=\"auto\">`}</inlineCode>{` so that your columns only take up as much\nspace as needed. Put another way, the column sizes itself based on on the contents.`}</p>\n    <ReactPlayground codeText={GridAutoSizing} mdxType=\"ReactPlayground\" />\n    <p>{`You can then remix that once again with size-specific column classes.`}</p>\n    <ReactPlayground codeText={GridAutoSizingColMix} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.FormGroup} exportedBy={props.data.Form} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = \"<>\\n  <Row>\\n    <Form.Label column=\\\"lg\\\" lg={2}>\\n      Large Text\\n    </Form.Label>\\n    <Col>\\n      <Form.Control size=\\\"lg\\\" type=\\\"text\\\" placeholder=\\\"Large text\\\" />\\n    </Col>\\n  </Row>\\n  <br />\\n  <Row>\\n    <Form.Label column lg={2}>\\n      Normal Text\\n    </Form.Label>\\n    <Col>\\n      <Form.Control type=\\\"text\\\" placeholder=\\\"Normal text\\\" />\\n    </Col>\\n  </Row>\\n  <br />\\n  <Row>\\n    <Form.Label column=\\\"sm\\\" lg={2}>\\n      Small Text\\n    </Form.Label>\\n    <Col>\\n      <Form.Control size=\\\"sm\\\" type=\\\"text\\\" placeholder=\\\"Small text\\\" />\\n    </Col>\\n  </Row>\\n</>;\\n\"","module.exports = \"<Form>\\n  <Row className=\\\"align-items-center\\\">\\n    <Col xs=\\\"auto\\\">\\n      <Form.Label htmlFor=\\\"inlineFormInput\\\" visuallyHidden>\\n        Name\\n      </Form.Label>\\n      <Form.Control\\n        className=\\\"mb-2\\\"\\n        id=\\\"inlineFormInput\\\"\\n        placeholder=\\\"Jane Doe\\\"\\n      />\\n    </Col>\\n    <Col xs=\\\"auto\\\">\\n      <Form.Label htmlFor=\\\"inlineFormInputGroup\\\" visuallyHidden>\\n        Username\\n      </Form.Label>\\n      <InputGroup className=\\\"mb-2\\\">\\n        <InputGroup.Text>@</InputGroup.Text>\\n        <FormControl id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Username\\\" />\\n      </InputGroup>\\n    </Col>\\n    <Col xs=\\\"auto\\\">\\n      <Form.Check\\n        type=\\\"checkbox\\\"\\n        id=\\\"autoSizingCheck\\\"\\n        className=\\\"mb-2\\\"\\n        label=\\\"Remember me\\\"\\n      />\\n    </Col>\\n    <Col xs=\\\"auto\\\">\\n      <Button type=\\\"submit\\\" className=\\\"mb-2\\\">\\n        Submit\\n      </Button>\\n    </Col>\\n  </Row>\\n</Form>;\\n\"","module.exports = \"<Form>\\n  <Row className=\\\"mb-3\\\">\\n    <Form.Group as={Col} controlId=\\\"formGridEmail\\\">\\n      <Form.Label>Email</Form.Label>\\n      <Form.Control type=\\\"email\\\" placeholder=\\\"Enter email\\\" />\\n    </Form.Group>\\n\\n    <Form.Group as={Col} controlId=\\\"formGridPassword\\\">\\n      <Form.Label>Password</Form.Label>\\n      <Form.Control type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n    </Form.Group>\\n  </Row>\\n\\n  <Form.Group className=\\\"mb-3\\\" controlId=\\\"formGridAddress1\\\">\\n    <Form.Label>Address</Form.Label>\\n    <Form.Control placeholder=\\\"1234 Main St\\\" />\\n  </Form.Group>\\n\\n  <Form.Group className=\\\"mb-3\\\" controlId=\\\"formGridAddress2\\\">\\n    <Form.Label>Address 2</Form.Label>\\n    <Form.Control placeholder=\\\"Apartment, studio, or floor\\\" />\\n  </Form.Group>\\n\\n  <Row className=\\\"mb-3\\\">\\n    <Form.Group as={Col} controlId=\\\"formGridCity\\\">\\n      <Form.Label>City</Form.Label>\\n      <Form.Control />\\n    </Form.Group>\\n\\n    <Form.Group as={Col} controlId=\\\"formGridState\\\">\\n      <Form.Label>State</Form.Label>\\n      <Form.Select defaultValue=\\\"Choose...\\\">\\n        <option>Choose...</option>\\n        <option>...</option>\\n      </Form.Select>\\n    </Form.Group>\\n\\n    <Form.Group as={Col} controlId=\\\"formGridZip\\\">\\n      <Form.Label>Zip</Form.Label>\\n      <Form.Control />\\n    </Form.Group>\\n  </Row>\\n\\n  <Form.Group className=\\\"mb-3\\\" id=\\\"formGridCheckbox\\\">\\n    <Form.Check type=\\\"checkbox\\\" label=\\\"Check me out\\\" />\\n  </Form.Group>\\n\\n  <Button variant=\\\"primary\\\" type=\\\"submit\\\">\\n    Submit\\n  </Button>\\n</Form>;\\n\"","module.exports = \"<Form>\\n  <Form.Group className=\\\"mb-3\\\" controlId=\\\"formGroupEmail\\\">\\n    <Form.Label>Email address</Form.Label>\\n    <Form.Control type=\\\"email\\\" placeholder=\\\"Enter email\\\" />\\n  </Form.Group>\\n  <Form.Group className=\\\"mb-3\\\" controlId=\\\"formGroupPassword\\\">\\n    <Form.Label>Password</Form.Label>\\n    <Form.Control type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n  </Form.Group>\\n</Form>;\\n\"","module.exports = \"<Form>\\n  <Row>\\n    <Col>\\n      <Form.Control placeholder=\\\"First name\\\" />\\n    </Col>\\n    <Col>\\n      <Form.Control placeholder=\\\"Last name\\\" />\\n    </Col>\\n  </Row>\\n</Form>;\\n\"","module.exports = \"<Form>\\n  <Form.Group as={Row} className=\\\"mb-3\\\" controlId=\\\"formHorizontalEmail\\\">\\n    <Form.Label column sm={2}>\\n      Email\\n    </Form.Label>\\n    <Col sm={10}>\\n      <Form.Control type=\\\"email\\\" placeholder=\\\"Email\\\" />\\n    </Col>\\n  </Form.Group>\\n\\n  <Form.Group as={Row} className=\\\"mb-3\\\" controlId=\\\"formHorizontalPassword\\\">\\n    <Form.Label column sm={2}>\\n      Password\\n    </Form.Label>\\n    <Col sm={10}>\\n      <Form.Control type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n    </Col>\\n  </Form.Group>\\n  <fieldset>\\n    <Form.Group as={Row} className=\\\"mb-3\\\">\\n      <Form.Label as=\\\"legend\\\" column sm={2}>\\n        Radios\\n      </Form.Label>\\n      <Col sm={10}>\\n        <Form.Check\\n          type=\\\"radio\\\"\\n          label=\\\"first radio\\\"\\n          name=\\\"formHorizontalRadios\\\"\\n          id=\\\"formHorizontalRadios1\\\"\\n        />\\n        <Form.Check\\n          type=\\\"radio\\\"\\n          label=\\\"second radio\\\"\\n          name=\\\"formHorizontalRadios\\\"\\n          id=\\\"formHorizontalRadios2\\\"\\n        />\\n        <Form.Check\\n          type=\\\"radio\\\"\\n          label=\\\"third radio\\\"\\n          name=\\\"formHorizontalRadios\\\"\\n          id=\\\"formHorizontalRadios3\\\"\\n        />\\n      </Col>\\n    </Form.Group>\\n  </fieldset>\\n  <Form.Group as={Row} className=\\\"mb-3\\\" controlId=\\\"formHorizontalCheck\\\">\\n    <Col sm={{ span: 10, offset: 2 }}>\\n      <Form.Check label=\\\"Remember me\\\" />\\n    </Col>\\n  </Form.Group>\\n\\n  <Form.Group as={Row} className=\\\"mb-3\\\">\\n    <Col sm={{ span: 10, offset: 2 }}>\\n      <Button type=\\\"submit\\\">Sign in</Button>\\n    </Col>\\n  </Form.Group>\\n</Form>;\\n\""],"sourceRoot":""}