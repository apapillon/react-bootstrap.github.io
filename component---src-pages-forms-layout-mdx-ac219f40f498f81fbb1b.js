(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{"4hNL":function(e,o){e.exports='<Form>\n  <Row className="align-items-center">\n    <Col sm={3} className="my-1">\n      <Form.Label htmlFor="inlineFormInputName" visuallyHidden>\n        Name\n      </Form.Label>\n      <Form.Control id="inlineFormInputName" placeholder="Jane Doe" />\n    </Col>\n    <Col sm={3} className="my-1">\n      <Form.Label htmlFor="inlineFormInputGroupUsername" visuallyHidden>\n        Username\n      </Form.Label>\n      <InputGroup>\n        <InputGroup.Text>@</InputGroup.Text>\n        <FormControl id="inlineFormInputGroupUsername" placeholder="Username" />\n      </InputGroup>\n    </Col>\n    <Col xs="auto" className="my-1">\n      <Form.Check type="checkbox" id="autoSizingCheck2" label="Remember me" />\n    </Col>\n    <Col xs="auto" className="my-1">\n      <Button type="submit">Submit</Button>\n    </Col>\n  </Row>\n</Form>;\n'},DXq1:function(e,o){e.exports='<Form>\n  <Row>\n    <Col xs={7}>\n      <Form.Control placeholder="City" />\n    </Col>\n    <Col>\n      <Form.Control placeholder="State" />\n    </Col>\n    <Col>\n      <Form.Control placeholder="Zip" />\n    </Col>\n  </Row>\n</Form>;\n'},cHcl:function(e,o,n){"use strict";n.r(o),n.d(o,"_frontmatter",(function(){return L})),n.d(o,"default",(function(){return z}));var t=n("rePB"),r=n("zLVn"),a=(n("mXGw"),n("7ljp")),l=n("Snbm"),m=n("vXRK"),i=n("1u5/"),s=n("sOTj"),d=n.n(s),p=n("ffOz"),c=n.n(p),u=n("pbHP"),b=n.n(u),F=n("4hNL"),x=n.n(F),h=n("u/9a"),C=n.n(h),f=n("DXq1"),y=n.n(f),O=n("pcjb"),w=n.n(O),j=n("uDF0"),g=n.n(j);function N(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,t)}return n}function G(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?N(Object(n),!0).forEach((function(o){Object(t.a)(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):N(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}var L={},R={query:"4012656424",_frontmatter:L},v=l.a;function z(e){var o=e.components,n=Object(r.a)(e,["components"]);return Object(a.mdx)(v,G(G(G({},R),n),{},{components:o,mdxType:"MDXLayout"}),Object(a.mdx)("h1",G({},{id:"layout"}),"Layout"),Object(a.mdx)("p",{className:"lead"},"Give your forms some structure—from inline to horizontal to custom grid implementations—with our form layout options."),Object(a.mdx)("h2",G({},{id:"forms"}),"Forms"),Object(a.mdx)("p",null,"Every group of form fields should reside in a ",Object(a.mdx)("inlineCode",{parentName:"p"},"<Form>")," element. Bootstrap\nprovides no default styling for the ",Object(a.mdx)("inlineCode",{parentName:"p"},"<Form>")," element, but there are some\npowerful browser features that are provided by default."),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"New to browser forms? Consider reviewing ",Object(a.mdx)("a",G({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form"}),"the MDN form docs"),"\nfor an overview and complete list of available attributes."),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"<button>"),"s within a ",Object(a.mdx)("inlineCode",{parentName:"li"},"<Form>")," default to ",Object(a.mdx)("inlineCode",{parentName:"li"},'type="submit"'),", so strive to be\nspecific and always include a ",Object(a.mdx)("inlineCode",{parentName:"li"},"type"),"."),Object(a.mdx)("li",{parentName:"ul"},"You can disable every form element within a form with the ",Object(a.mdx)("inlineCode",{parentName:"li"},"disabled")," attribute\non the ",Object(a.mdx)("inlineCode",{parentName:"li"},"<Form>"),".")),Object(a.mdx)("p",null,"Since Bootstrap applies ",Object(a.mdx)("inlineCode",{parentName:"p"},"display: block")," and ",Object(a.mdx)("inlineCode",{parentName:"p"},"width: 100%")," to almost all our\nform controls, forms will by default stack vertically. Additional classes can\nbe used to vary this layout on a per-form basis."),Object(a.mdx)("h2",G({},{id:"form-groups"}),"Form groups"),Object(a.mdx)("p",null,"The ",Object(a.mdx)("inlineCode",{parentName:"p"},"FormGroup")," component is the easiest way to add some structure to forms.\nIt provides a flexible container for grouping of labels, controls, optional\nhelp text, and form validation messaging. Use it with ",Object(a.mdx)("inlineCode",{parentName:"p"},"fieldset"),"s, ",Object(a.mdx)("inlineCode",{parentName:"p"},"div"),"s,\nor nearly any other element."),Object(a.mdx)("p",null,"You also add the ",Object(a.mdx)("inlineCode",{parentName:"p"},"controlId")," prop to accessibly wire the nested label and\ninput together via the ",Object(a.mdx)("inlineCode",{parentName:"p"},"id"),"."),Object(a.mdx)(i.a,{codeText:d.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",G({},{id:"form-grid"}),"Form grid"),Object(a.mdx)("p",null,"More complex forms can be built using the grid components. Use these for\nform layouts that require multiple columns, varied widths, and additional\nalignment options."),Object(a.mdx)(i.a,{codeText:C.a,mdxType:"ReactPlayground"}),Object(a.mdx)("p",null,"More complex layouts can also be created with the grid system."),Object(a.mdx)(i.a,{codeText:w.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",G({},{id:"horizontal-form"}),"Horizontal form"),Object(a.mdx)("p",null,"Create horizontal forms with the grid by adding ",Object(a.mdx)("inlineCode",{parentName:"p"},"as={Row}")," to form groups and\nusing ",Object(a.mdx)("inlineCode",{parentName:"p"},"Col")," to specify the width of your labels and controls. Be sure to add\nthe ",Object(a.mdx)("inlineCode",{parentName:"p"},"column ")," prop to your ",Object(a.mdx)("inlineCode",{parentName:"p"},"FormLabel"),"s as well so they’re vertically centered\nwith their associated form controls."),Object(a.mdx)("p",null,"At times, you maybe need to use margin or padding utilities to create that\nperfect alignment you need. For example, we’ve removed the ",Object(a.mdx)("inlineCode",{parentName:"p"},"padding-top")," on our\nstacked radio inputs label to better align the text baseline."),Object(a.mdx)(i.a,{codeText:g.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h3",G({},{id:"horizontal-form-label-sizing"}),"Horizontal form label sizing"),Object(a.mdx)("p",null,"You can size the ",Object(a.mdx)("inlineCode",{parentName:"p"},"<FormLabel>")," using the ",Object(a.mdx)("inlineCode",{parentName:"p"},"column")," prop as shown."),Object(a.mdx)(i.a,{codeText:c.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",G({},{id:"column-sizing"}),"Column sizing"),Object(a.mdx)("p",null,"As shown in the previous examples, our grid system allows you to place any number\nof ",Object(a.mdx)("inlineCode",{parentName:"p"},"<Col>"),"s within a ",Object(a.mdx)("inlineCode",{parentName:"p"},"<Row>"),". They'll split the available width equally between\nthem. You may also pick a subset of your columns to take up more or less space,\nwhile the remaining ",Object(a.mdx)("inlineCode",{parentName:"p"},"<Col>"),"s equally split the rest, with specific column classes\nlike ",Object(a.mdx)("inlineCode",{parentName:"p"},"<Col xs={7}>"),"."),Object(a.mdx)(i.a,{codeText:y.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",G({},{id:"auto-sizing"}),"Auto-sizing"),Object(a.mdx)("p",null,"The example below uses a flexbox utility to vertically center the contents and\nchanges ",Object(a.mdx)("inlineCode",{parentName:"p"},"<Col>")," to ",Object(a.mdx)("inlineCode",{parentName:"p"},'<Col xs="auto">')," so that your columns only take up as much\nspace as needed. Put another way, the column sizes itself based on on the contents."),Object(a.mdx)(i.a,{codeText:b.a,mdxType:"ReactPlayground"}),Object(a.mdx)("p",null,"You can then remix that once again with size-specific column classes."),Object(a.mdx)(i.a,{codeText:x.a,mdxType:"ReactPlayground"}),Object(a.mdx)("h2",G({},{id:"api"}),"API"),Object(a.mdx)(m.a,{metadata:n.data.FormGroup,exportedBy:n.data.Form,mdxType:"ComponentApi"}))}z.isMDXComponent=!0},ffOz:function(e,o){e.exports='<>\n  <Row>\n    <Form.Label column="lg" lg={2}>\n      Large Text\n    </Form.Label>\n    <Col>\n      <Form.Control size="lg" type="text" placeholder="Large text" />\n    </Col>\n  </Row>\n  <br />\n  <Row>\n    <Form.Label column lg={2}>\n      Normal Text\n    </Form.Label>\n    <Col>\n      <Form.Control type="text" placeholder="Normal text" />\n    </Col>\n  </Row>\n  <br />\n  <Row>\n    <Form.Label column="sm" lg={2}>\n      Small Text\n    </Form.Label>\n    <Col>\n      <Form.Control size="sm" type="text" placeholder="Small text" />\n    </Col>\n  </Row>\n</>;\n'},pbHP:function(e,o){e.exports='<Form>\n  <Row className="align-items-center">\n    <Col xs="auto">\n      <Form.Label htmlFor="inlineFormInput" visuallyHidden>\n        Name\n      </Form.Label>\n      <Form.Control\n        className="mb-2"\n        id="inlineFormInput"\n        placeholder="Jane Doe"\n      />\n    </Col>\n    <Col xs="auto">\n      <Form.Label htmlFor="inlineFormInputGroup" visuallyHidden>\n        Username\n      </Form.Label>\n      <InputGroup className="mb-2">\n        <InputGroup.Text>@</InputGroup.Text>\n        <FormControl id="inlineFormInputGroup" placeholder="Username" />\n      </InputGroup>\n    </Col>\n    <Col xs="auto">\n      <Form.Check\n        type="checkbox"\n        id="autoSizingCheck"\n        className="mb-2"\n        label="Remember me"\n      />\n    </Col>\n    <Col xs="auto">\n      <Button type="submit" className="mb-2">\n        Submit\n      </Button>\n    </Col>\n  </Row>\n</Form>;\n'},pcjb:function(e,o){e.exports='<Form>\n  <Row className="mb-3">\n    <Form.Group as={Col} controlId="formGridEmail">\n      <Form.Label>Email</Form.Label>\n      <Form.Control type="email" placeholder="Enter email" />\n    </Form.Group>\n\n    <Form.Group as={Col} controlId="formGridPassword">\n      <Form.Label>Password</Form.Label>\n      <Form.Control type="password" placeholder="Password" />\n    </Form.Group>\n  </Row>\n\n  <Form.Group className="mb-3" controlId="formGridAddress1">\n    <Form.Label>Address</Form.Label>\n    <Form.Control placeholder="1234 Main St" />\n  </Form.Group>\n\n  <Form.Group className="mb-3" controlId="formGridAddress2">\n    <Form.Label>Address 2</Form.Label>\n    <Form.Control placeholder="Apartment, studio, or floor" />\n  </Form.Group>\n\n  <Row className="mb-3">\n    <Form.Group as={Col} controlId="formGridCity">\n      <Form.Label>City</Form.Label>\n      <Form.Control />\n    </Form.Group>\n\n    <Form.Group as={Col} controlId="formGridState">\n      <Form.Label>State</Form.Label>\n      <Form.Select defaultValue="Choose...">\n        <option>Choose...</option>\n        <option>...</option>\n      </Form.Select>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId="formGridZip">\n      <Form.Label>Zip</Form.Label>\n      <Form.Control />\n    </Form.Group>\n  </Row>\n\n  <Form.Group className="mb-3" id="formGridCheckbox">\n    <Form.Check type="checkbox" label="Check me out" />\n  </Form.Group>\n\n  <Button variant="primary" type="submit">\n    Submit\n  </Button>\n</Form>;\n'},sOTj:function(e,o){e.exports='<Form>\n  <Form.Group className="mb-3" controlId="formGroupEmail">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type="email" placeholder="Enter email" />\n  </Form.Group>\n  <Form.Group className="mb-3" controlId="formGroupPassword">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type="password" placeholder="Password" />\n  </Form.Group>\n</Form>;\n'},"u/9a":function(e,o){e.exports='<Form>\n  <Row>\n    <Col>\n      <Form.Control placeholder="First name" />\n    </Col>\n    <Col>\n      <Form.Control placeholder="Last name" />\n    </Col>\n  </Row>\n</Form>;\n'},uDF0:function(e,o){e.exports='<Form>\n  <Form.Group as={Row} className="mb-3" controlId="formHorizontalEmail">\n    <Form.Label column sm={2}>\n      Email\n    </Form.Label>\n    <Col sm={10}>\n      <Form.Control type="email" placeholder="Email" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row} className="mb-3" controlId="formHorizontalPassword">\n    <Form.Label column sm={2}>\n      Password\n    </Form.Label>\n    <Col sm={10}>\n      <Form.Control type="password" placeholder="Password" />\n    </Col>\n  </Form.Group>\n  <fieldset>\n    <Form.Group as={Row} className="mb-3">\n      <Form.Label as="legend" column sm={2}>\n        Radios\n      </Form.Label>\n      <Col sm={10}>\n        <Form.Check\n          type="radio"\n          label="first radio"\n          name="formHorizontalRadios"\n          id="formHorizontalRadios1"\n        />\n        <Form.Check\n          type="radio"\n          label="second radio"\n          name="formHorizontalRadios"\n          id="formHorizontalRadios2"\n        />\n        <Form.Check\n          type="radio"\n          label="third radio"\n          name="formHorizontalRadios"\n          id="formHorizontalRadios3"\n        />\n      </Col>\n    </Form.Group>\n  </fieldset>\n  <Form.Group as={Row} className="mb-3" controlId="formHorizontalCheck">\n    <Col sm={{ span: 10, offset: 2 }}>\n      <Form.Check label="Remember me" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row} className="mb-3">\n    <Col sm={{ span: 10, offset: 2 }}>\n      <Button type="submit">Sign in</Button>\n    </Col>\n  </Form.Group>\n</Form>;\n'}}]);
//# sourceMappingURL=component---src-pages-forms-layout-mdx-ac219f40f498f81fbb1b.js.map