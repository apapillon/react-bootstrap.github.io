{"version":3,"sources":["webpack:///./src/pages/forms/range.mdx","webpack:///./src/examples/Form/Range.js"],"names":["_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","className","parentName","codeText","Range","metadata","data","FormRange","exportedBy","Form","isMDXComponent","module","exports"],"mappings":"82BAYO,IAUMA,EAAe,GACtBC,EAAc,CAClBC,MAZmB,YAanBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,SAAeF,GAAiBM,GAAhC,IAAuCD,WAAYA,EAAYE,QAAQ,cAM5E,wBAAQ,CACN,GAAM,UADR,SAGA,mBAAGC,UAAU,QAAb,gGAIA,wBAAQ,CACN,GAAM,aADR,YAGA,wCAAqB,4BAAYC,WAAW,KAAvB,wBAArB,kBAAwG,4BAAYA,WAAW,KAAvB,eAAxG,2QAKA,cAAC,IAAD,CAAiBC,SAAUC,IAAOJ,QAAQ,oBAC1C,wBAAQ,CACN,GAAM,QADR,OAGA,cAAC,IAAD,CAAcK,SAAUN,EAAMO,KAAKC,UAAWC,WAAYT,EAAMO,KAAKG,KAAMT,QAAQ,kBAMvFH,EAAWa,gBAAiB,G,mBC/D5BC,EAAOC,QAAU","file":"component---src-pages-forms-range-mdx-c9597db9246ba4f4edc8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport Range from '../../examples/Form/Range';\nexport const query = graphql`\n  query FormRangeQuery {\n    Form: componentMetadata(displayName: { eq: \"Form\" }) {\n      ...ComponentApi_metadata\n    }\n    FormRange: componentMetadata(displayName: { eq: \"FormRange\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"range\"\n    }}>{`Range`}</h1>\n    <p className=\"lead\">\n  Use our custom range inputs for consistent cross-browser styling and built-in\n  customization.\n    </p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Create custom `}<inlineCode parentName=\"p\">{`<input type=\"range\">`}</inlineCode>{` controls with `}<inlineCode parentName=\"p\">{`<FormRange>`}</inlineCode>{`. The track\n(the background) and thumb (the value) are both styled to appear the same\nacross browsers. As only Firefox supports “filling” their track from the left\nor right of the thumb as a means to visually indicate progress, we do not\ncurrently support it.`}</p>\n    <ReactPlayground codeText={Range} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.FormRange} exportedBy={props.data.Form} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = \"<>\\n  <Form.Label>Range</Form.Label>\\n  <Form.Range />\\n</>;\\n\""],"sourceRoot":""}