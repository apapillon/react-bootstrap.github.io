{"version":3,"sources":["webpack:///./src/components/DocLink.js","webpack:///./src/pages/getting-started/rtl.mdx","webpack:///./src/examples/Alert/DismissibleControlled.js"],"names":["DocLink","path","children","href","config","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","module","exports"],"mappings":"4GAIeA,IAJf,YAAsC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACvB,OAAO,mBAAGC,KAASC,oCAAiBH,EAA7B,SAAsCC,M,uyBCUxC,IAAMG,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,SAAeD,GAAiBK,GAAhC,IAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,wBAAQ,CACN,GAAM,QADR,OAGA,qDAAkC,cAAC,IAAD,CAASX,KAAK,uBAAuBW,QAAQ,WAA7C,6BAAlC,gEAEA,mGACA,wBACE,oBAAIC,WAAW,MAAf,OAA4B,4BAAYA,WAAW,MAAvB,aAA5B,WAA8F,4BAAYA,WAAW,MAAvB,UAA9F,aACA,oBAAIA,WAAW,MAAf,2CAAgE,4BAAYA,WAAW,MAAvB,aAAhE,YAAmI,4BAAYA,WAAW,MAAvB,UAAnI,aACA,oBAAIA,WAAW,MAAf,sCAA2D,4BAAYA,WAAW,MAAvB,yBAA3D,qBACA,oBAAIA,WAAW,MAAf,OAA4B,4BAAYA,WAAW,MAAvB,aAA5B,SAA4F,4BAAYA,WAAW,MAAvB,iBAA5F,MAEF,yBAAK,wBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,8DAUTJ,EAAWK,gBAAiB,G,mBC9C5BC,EAAOC,QAAU","file":"component---src-pages-getting-started-rtl-mdx-6de2c67b01e4cd14ef33.js","sourcesContent":["function DocLink({ path, children }) {\n  return <a href={`${config.docsUrl}${path}`}>{children}</a>;\n}\n\nexport default DocLink;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport DocLink from '../../components/DocLink';\nimport DismissibleControlled from '../../examples/Alert/DismissibleControlled';\nimport ReactPlayground from '../../components/ReactPlayground';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"rtl\"\n    }}>{`RTL`}</h1>\n    <p>{`We recommend first reading `}<DocLink path=\"/getting-started/rtl\" mdxType=\"DocLink\">{`Bootstrap's documentation`}</DocLink>{`\nto become familiar with how Bootstrap's RTL support works.`}</p>\n    <p>{`In order to enable RTL support with React-Bootstrap, follow these steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Set `}<inlineCode parentName=\"li\">{`dir=\"rtl\"`}</inlineCode>{` on the `}<inlineCode parentName=\"li\">{`<html>`}</inlineCode>{` element.`}</li>\n      <li parentName=\"ol\">{`Add an appropriate lang attribute, like `}<inlineCode parentName=\"li\">{`lang=\"ar\"`}</inlineCode>{`, on the `}<inlineCode parentName=\"li\">{`<html>`}</inlineCode>{` element.`}</li>\n      <li parentName=\"ol\">{`Include the RTL version of the CSS `}<inlineCode parentName=\"li\">{`bootstrap.rtl.min.css`}</inlineCode>{` in your project.`}</li>\n      <li parentName=\"ol\">{`Set `}<inlineCode parentName=\"li\">{`dir=\"rtl\"`}</inlineCode>{` in a `}<inlineCode parentName=\"li\">{`ThemeProvider`}</inlineCode>{`:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<ThemeProvider dir=\"rtl\">\n  <App />\n</ThemeProvider>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = \"function AlertDismissible() {\\n  const [show, setShow] = useState(true);\\n\\n  return (\\n    <>\\n      <Alert show={show} variant=\\\"success\\\">\\n        <Alert.Heading>How's it going?!</Alert.Heading>\\n        <p>\\n          Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget\\n          lacinia odio sem nec elit. Cras mattis consectetur purus sit amet\\n          fermentum.\\n        </p>\\n        <hr />\\n        <div className=\\\"d-flex justify-content-end\\\">\\n          <Button onClick={() => setShow(false)} variant=\\\"outline-success\\\">\\n            Close me y'all!\\n          </Button>\\n        </div>\\n      </Alert>\\n\\n      {!show && <Button onClick={() => setShow(true)}>Show Alert</Button>}\\n    </>\\n  );\\n}\\n\\nrender(<AlertDismissible />);\\n\""],"sourceRoot":""}