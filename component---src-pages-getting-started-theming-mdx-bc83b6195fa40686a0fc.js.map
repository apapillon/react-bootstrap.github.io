{"version":3,"sources":["webpack:///./src/examples/Theming/Variants.js","webpack:///./src/examples/Theming/Prefixes.js","webpack:///./src/components/Callout-styles.module.scss","webpack:///./src/components/Callout.js","webpack:///./src/pages/getting-started/theming.mdx"],"names":["module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","codeText","Variants","theme","Prefixes","isMDXComponent"],"mappings":"+EAAAA,EAAOC,QAAU,yS,mBCAjBD,EAAOC,QAAU,iS,qBCCjBD,EAAOC,QAAU,CAAC,QAAU,wCAAwC,QAAU,8EAA8E,OAAS,+E,kDCGrK,EAAe,UAuCf,IAXA,SAAiB,GAAjB,qCACA,OACA,wEACA,uDACA,uC,y0BCxBO,IAAMC,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,SAAeD,GAAiBK,GAAhC,IAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,wBAAQ,CACN,GAAM,mCADR,kCAGA,2PAIA,wBAAQ,CACN,GAAM,2BADR,0BAGA,oJAEF,4BAAYC,WAAW,KAAvB,eAFE,2CAGF,4BAAYA,WAAW,KAAvB,cAHE,wEAImB,4BAAYA,WAAW,KAAvB,UAJnB,KAKA,cAAC,IAAD,CAAiBC,SAAUC,IAAUH,QAAQ,oBAC7C,wBAAQ,CACN,GAAM,yBADR,wBAGA,iMAEsB,4BAAYC,WAAW,KAAvB,YAFtB,8BAGF,4BAAYA,WAAW,KAAvB,iBAHE,eAIA,cAAC,IAAD,CAASG,MAAM,UAAUJ,QAAQ,WAAjC,yEAGA,cAAC,IAAD,CAAiBE,SAAUG,IAAUL,QAAQ,qBAKjDH,EAAWS,gBAAiB","file":"component---src-pages-getting-started-theming-mdx-bc83b6195fa40686a0fc.js","sourcesContent":["module.exports = \"<>\\n  <style type=\\\"text/css\\\">\\n    {`\\n    .btn-flat {\\n      background-color: purple;\\n      color: white;\\n    }\\n\\n    .btn-xxl {\\n      padding: 1rem 1.5rem;\\n      font-size: 1.5rem;\\n    }\\n    `}\\n  </style>\\n\\n  <Button variant=\\\"flat\\\" size=\\\"xxl\\\">\\n    flat button\\n  </Button>\\n</>;\\n\"","module.exports = \"<>\\n  {/* Hint: inspect the markup to see how the classes differ */}\\n  <ThemeProvider prefixes={{ btn: 'my-btn' }}>\\n    <Button variant=\\\"primary\\\">My Button</Button>\\n  </ThemeProvider>{' '}\\n  <Button bsPrefix=\\\"super-btn\\\" variant=\\\"primary\\\">\\n    Super button\\n  </Button>\\n</>;\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"callout\":\"Callout-styles-module--callout--1_K3h\",\"warning\":\"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h\",\"danger\":\"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h\"};","import PropTypes from 'prop-types';\n\nimport { css } from 'astroturf';\n\nconst styles = css`\n  @import '../css/theme';\n\n  .callout {\n    border-left: 4px solid transparent;\n    padding: 1.2rem 1.2rem 1.2rem calc(1rem - 4px);\n    margin-left: -1rem;\n    margin-bottom: 2rem;\n  }\n\n  .warning {\n    composes: callout;\n    background-color: transparentize($note, 0.7);\n    border-left-color: $note;\n  }\n  .danger {\n    composes: callout;\n    background-color: transparentize($error, 0.7);\n    border-left-color: $error;\n  }\n`;\n\nconst propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n  theme: PropTypes.oneOf(['danger', 'warning']),\n};\n\nfunction Callout({ title, children, theme }) {\n  return (\n    <aside role=\"note\" className={styles[theme || 'warning']}>\n      {title && <header className=\"h5\">{title}</header>}\n      <div>{children}</div>\n    </aside>\n  );\n}\n\nCallout.propTypes = propTypes;\n\nexport default Callout;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport Callout from '../../components/Callout';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport Prefixes from '../../examples/Theming/Prefixes';\nimport Variants from '../../examples/Theming/Variants';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"theming-and-customizing-styles\"\n    }}>{`Theming and customizing styles`}</h1>\n    <p>{`Generally, if you stick to the Bootstrap defined classes and variants,\nthere isn't anything you need to do to use a custom theme with\nReact-Bootstrap. It just works. But we also make coloring outside the\nlines easy to do.`}</p>\n    <h2 {...{\n      \"id\": \"new-variants-and-sizes\"\n    }}>{`New variants and sizes`}</h2>\n    <p>{`Custom variants and sizes should follow the pattern of the default\nBootstrap variants, and define css classes matching:\n`}<inlineCode parentName=\"p\">{`component-*`}</inlineCode>{`. React-Bootstrap builds the component\n`}<inlineCode parentName=\"p\">{`classNames`}</inlineCode>{` in a consistent way that you can rely on. For\ninstance this custom `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{`.`}</p>\n    <ReactPlayground codeText={Variants} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"prefixing-components\"\n    }}>{`Prefixing components`}</h2>\n    <p>{`In some cases you may need to change the base class \"prefix\" of one or\nmore components. You can control how a component prefixes its classes\nlocally by changing the `}<inlineCode parentName=\"p\">{`bsPrefix`}</inlineCode>{` prop or globally via the\n`}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` component.`}</p>\n    <Callout theme=\"warning\" mdxType=\"Callout\">\n  Changing prefixes is an escape hatch and generally shouldn't be used.\n    </Callout>\n    <ReactPlayground codeText={Prefixes} mdxType=\"ReactPlayground\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}