{"version":3,"sources":["webpack:///./src/examples/CustomBreakpoints.js","webpack:///./src/components/BreakpointTable.js","webpack:///./src/pages/layout/breakpoints.mdx","webpack:///./src/components/DocLink.js","webpack:///./src/components/Callout-styles.module.scss","webpack:///./src/components/Callout.js"],"names":["module","exports","BreakpointTable","Table","_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","className","parentName","CodeBlock","codeText","CustomBreakpoints","DocLink","path","ComponentApi","metadata","data","ThemeProvider","isMDXComponent","children","href","config"],"mappings":"+EAAAA,EAAOC,QAAU,0I,sNC4DFC,EA1DS,WACtB,OACE,eAACC,EAAA,EAAD,WACE,gCACE,+BACE,4CACA,6CACA,iDAGJ,kCACE,+BACE,yCACA,6BACE,wCAEF,2CAEF,+BACE,uCACA,6BACE,wCAEF,2CAEF,+BACE,wCACA,6BACE,wCAEF,2CAEF,+BACE,uCACA,6BACE,wCAEF,2CAEF,+BACE,6CACA,6BACE,wCAEF,4CAEF,+BACE,mDACA,6BACE,yCAEF,mD,8oBCtCH,IAOMC,EAAe,GACtBC,EAAc,CAClBC,MATmB,aAUnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,SAAeF,GAAiBM,GAAhC,IAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,wBAAQ,CACN,GAAM,gBADR,eAGA,mBAAGC,UAAU,QAAb,uIAIA,wBAAQ,CACN,GAAM,0BADR,yBAGA,+FAA4E,oBAAIC,WAAW,KAAf,cAA5E,6GAGA,cAAC,EAAD,CAAiBF,QAAQ,oBACzB,wBAAQ,CACN,GAAM,uBADR,sBAGA,0IAC2B,4BAAYE,WAAW,KAAvB,eAD3B,wFAE6C,4BAAYA,WAAW,KAAvB,OAF7C,OAEoG,4BAAYA,WAAW,KAAvB,OAFpG,oDAIA,cAACC,EAAA,QAAD,CAAWC,SAAUC,IAAmBL,QAAQ,cAChD,wBAAQ,CACN,GAAM,qBADR,oBAGA,0EAAuD,cAACM,EAAA,EAAD,CAASC,KAAK,sBAAsBP,QAAQ,WAA5C,2BAAvD,KACA,wBAAQ,CACN,GAAM,QADR,OAGA,cAACQ,EAAA,EAAD,CAAcC,SAAUV,EAAMW,KAAKC,cAAeX,QAAQ,kBAM9DH,EAAWe,gBAAiB,G,kDCpEbN,IAJf,YAAsC,IAAnBC,EAAkB,EAAlBA,KAAMM,EAAY,EAAZA,SACvB,OAAO,mBAAGC,KAASC,oCAAiBR,EAA7B,SAAsCM,M,qBCA/CzB,EAAOC,QAAU,CAAC,QAAU,wCAAwC,QAAU,8EAA8E,OAAS,+E,kDCGrK,EAAe,UAuCf,IAXA,SAAiB,GAAjB,qCACA,OACA,wEACA,uDACA","file":"component---src-pages-layout-breakpoints-mdx-feb2c60a3f618d07374d.js","sourcesContent":["module.exports = \"<ThemeProvider\\n  breakpoints={['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs', 'xxs']}\\n>\\n  <div>Your app...</div>\\n</ThemeProvider>;\\n\"","import Table from 'react-bootstrap/Table';\n\nconst BreakpointTable = () => {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Breakpoint</th>\n          <th>Class infix</th>\n          <th>Dimensions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>X-Small</td>\n          <td>\n            <em>None</em>\n          </td>\n          <td>&lt;576px</td>\n        </tr>\n        <tr>\n          <td>Small</td>\n          <td>\n            <code>sm</code>\n          </td>\n          <td>≥576px</td>\n        </tr>\n        <tr>\n          <td>Medium</td>\n          <td>\n            <code>md</code>\n          </td>\n          <td>≥768px</td>\n        </tr>\n        <tr>\n          <td>Large</td>\n          <td>\n            <code>lg</code>\n          </td>\n          <td>≥992px</td>\n        </tr>\n        <tr>\n          <td>Extra large</td>\n          <td>\n            <code>xl</code>\n          </td>\n          <td>≥1200px</td>\n        </tr>\n        <tr>\n          <td>Extra extra large</td>\n          <td>\n            <code>xxl</code>\n          </td>\n          <td>≥1400px</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n};\n\nexport default BreakpointTable;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport BreakpointTable from '../../components/BreakpointTable';\nimport Callout from '../../components/Callout';\nimport CodeBlock from '../../components/CodeBlock';\nimport ComponentApi from '../../components/ComponentApi';\nimport CustomBreakpoints from '../../examples/CustomBreakpoints';\nimport DocLink from '../../components/DocLink';\nexport const query = graphql`\n  query ThemeProviderBreakpointsQuery {\n    ThemeProvider: componentMetadata(displayName: { eq: \"ThemeProvider\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"breakpoints\"\n    }}>{`Breakpoints`}</h1>\n    <p className=\"lead\">\n  Breakpoints are customizable widths that determine how your responsive layout\n  behaves across device or viewport sizes in Bootstrap.\n    </p>\n    <h2 {...{\n      \"id\": \"available-breakpoints\"\n    }}>{`Available breakpoints`}</h2>\n    <p>{`Bootstrap includes six default breakpoints, sometimes referred to as `}<em parentName=\"p\">{`grid tiers`}</em>{`,\nfor building responsively. These breakpoints can be customized if you’re using our\nsource Sass files.`}</p>\n    <BreakpointTable mdxType=\"BreakpointTable\" />\n    <h2 {...{\n      \"id\": \"custom-breakpoints\"\n    }}>{`Custom breakpoints`}</h2>\n    <p>{`If you are looking to use custom breakpoints, you must wrap your application with\na theme provider and use the `}<inlineCode parentName=\"p\">{`breakpoints`}</inlineCode>{` prop to specify the breakpoints you\nwill use. This ensures that components such as `}<inlineCode parentName=\"p\">{`Row`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Col`}</inlineCode>{` can parse the\ncorrect custom breakpoint props.`}</p>\n    <CodeBlock codeText={CustomBreakpoints} mdxType=\"CodeBlock\" />\n    <h2 {...{\n      \"id\": \"more-information\"\n    }}>{`More information`}</h2>\n    <p>{`For more information about breakpoints, see the `}<DocLink path=\"/layout/breakpoints\" mdxType=\"DocLink\">{`Bootstrap documentation`}</DocLink>{`.`}</p>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.ThemeProvider} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","function DocLink({ path, children }) {\n  return <a href={`${config.docsUrl}${path}`}>{children}</a>;\n}\n\nexport default DocLink;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"callout\":\"Callout-styles-module--callout--1_K3h\",\"warning\":\"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h\",\"danger\":\"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h\"};","import PropTypes from 'prop-types';\n\nimport { css } from 'astroturf';\n\nconst styles = css`\n  @import '../css/theme';\n\n  .callout {\n    border-left: 4px solid transparent;\n    padding: 1.2rem 1.2rem 1.2rem calc(1rem - 4px);\n    margin-left: -1rem;\n    margin-bottom: 2rem;\n  }\n\n  .warning {\n    composes: callout;\n    background-color: transparentize($note, 0.7);\n    border-left-color: $note;\n  }\n  .danger {\n    composes: callout;\n    background-color: transparentize($error, 0.7);\n    border-left-color: $error;\n  }\n`;\n\nconst propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n  theme: PropTypes.oneOf(['danger', 'warning']),\n};\n\nfunction Callout({ title, children, theme }) {\n  return (\n    <aside role=\"note\" className={styles[theme || 'warning']}>\n      {title && <header className=\"h5\">{title}</header>}\n      <div>{children}</div>\n    </aside>\n  );\n}\n\nCallout.propTypes = propTypes;\n\nexport default Callout;\n"],"sourceRoot":""}