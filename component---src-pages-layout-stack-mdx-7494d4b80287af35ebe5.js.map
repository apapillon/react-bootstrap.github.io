{"version":3,"sources":["webpack:///./src/examples/Stack/Vertical.js","webpack:///./src/examples/Stack/HorizontalMarginStart.js","webpack:///./src/pages/layout/stack.mdx","webpack:///./src/examples/Stack/Buttons.js","webpack:///./src/components/Callout-styles.module.scss","webpack:///./src/examples/Stack/Form.js","webpack:///./src/examples/Stack/HorizontalVerticalRules.js","webpack:///./src/components/Callout.js","webpack:///./src/examples/Stack/Horizontal.js"],"names":["module","exports","name","_frontmatter","PageHeader","props","console","warn","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","mdxType","title","subTitle","parentName","codeText","StackVertical","StackHorizontal","StackHorizontalMarginStart","StackHorizontalVerticalRules","StackButtons","StackForm","metadata","data","Stack","isMDXComponent","require"],"mappings":"+EAAAA,EAAOC,QAAU,yV,qBCAjBD,EAAOC,QAAU,kZ,oIC4BKC,E,+OAFTC,EAAe,GAOtBC,GALgBF,EAKW,aALH,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,oBAASG,KAIZG,EAAc,CAClBC,MAjBmB,aAkBnBN,gBAEIO,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGR,EACF,iBACD,OAAO,cAACK,EAAD,eAAeF,EAAiBH,EAAhC,CAAuCQ,WAAYA,EAAYC,QAAQ,cAM5E,cAACV,EAAD,CAAYW,MAAM,SAASC,SAAS,qHAAqHF,QAAQ,eACjK,oBACE,GAAM,YADR,YAGA,8GAA2F,4BAAYG,WAAW,KAAvB,OAA3F,sCAEA,cAAC,IAAD,CAAiBC,SAAUC,IAAeL,QAAQ,oBAClD,oBACE,GAAM,cADR,cAGA,8BAAW,4BAAYG,WAAW,KAAvB,0BAAX,8HACyD,4BAAYA,WAAW,KAAvB,OADzD,sCAGA,cAAC,IAAD,CAAiBC,SAAUE,IAAiBN,QAAQ,oBACpD,iEAA8C,4BAAYG,WAAW,KAAvB,YAA9C,gBACA,cAAC,IAAD,CAAiBC,SAAUG,IAA4BP,QAAQ,oBAC/D,mDACA,cAAC,IAAD,CAAiBI,SAAUI,IAA8BR,QAAQ,oBACjE,oBACE,GAAM,YADR,YAGA,yCAAsB,4BAAYG,WAAW,KAAvB,SAAtB,yCACA,cAAC,IAAD,CAAiBC,SAAUK,IAAcT,QAAQ,oBACjD,kEAA+C,4BAAYG,WAAW,KAAvB,SAA/C,KACA,cAAC,IAAD,CAAiBC,SAAUM,IAAWV,QAAQ,oBAC9C,oBACE,GAAM,OADR,OAGA,cAAC,IAAD,CAAcW,SAAUpB,EAAMqB,KAAKC,MAAOb,QAAQ,kBAMtDF,EAAWgB,gBAAiB,G,mBCnF5B5B,EAAOC,QAAU,4W,qBCCjBD,EAAOC,QAAU,CAAC,QAAU,wCAAwC,QAAU,8EAA8E,OAAS,+E,mBCDrKD,EAAOC,QAAU,gf,mBCAjBD,EAAOC,QAAU,ob,kDCIjB,EAAe4B,UAuCA,IAXf,SAAiB,GAAjB,qCACA,OACA,wEACAd,uDACA,uC,mBCpCAf,EAAOC,QAAU","file":"component---src-pages-layout-stack-mdx-7494d4b80287af35ebe5.js","sourcesContent":["module.exports = \"import Stack from 'react-bootstrap/Stack';\\n\\nfunction VerticalExample() {\\n  return (\\n    <Stack gap={3}>\\n      <div className=\\\"bg-light border\\\">First item</div>\\n      <div className=\\\"bg-light border\\\">Second item</div>\\n      <div className=\\\"bg-light border\\\">Third item</div>\\n    </Stack>\\n  );\\n}\\n\\nexport default VerticalExample;\\n\"","module.exports = \"import Stack from 'react-bootstrap/Stack';\\n\\nfunction HorizontalMarginStartExample() {\\n  return (\\n    <Stack direction=\\\"horizontal\\\" gap={3}>\\n      <div className=\\\"bg-light border\\\">First item</div>\\n      <div className=\\\"bg-light border ms-auto\\\">Second item</div>\\n      <div className=\\\"bg-light border\\\">Third item</div>\\n    </Stack>\\n  );\\n}\\n\\nexport default HorizontalMarginStartExample;\\n\"","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport Callout from '../../components/Callout';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport StackButtons from '../../examples/Stack/Buttons';\nimport StackForm from '../../examples/Stack/Form';\nimport StackHorizontal from '../../examples/Stack/Horizontal';\nimport StackHorizontalMarginStart from '../../examples/Stack/HorizontalMarginStart';\nimport StackHorizontalVerticalRules from '../../examples/Stack/HorizontalVerticalRules';\nimport StackVertical from '../../examples/Stack/Vertical';\nexport const query = graphql`\n  query Stack {\n    Stack: componentMetadata(displayName: { eq: \"Stack\" }) {\n      displayName\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageHeader = makeShortcode(\"PageHeader\");\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <PageHeader title=\"Stacks\" subTitle=\"Shorthand helpers that build on top of our flexbox utilities to make component layout faster and easier than ever.\" mdxType=\"PageHeader\" />\n    <h2 {...{\n      \"id\": \"vertical\"\n    }}>{`Vertical`}</h2>\n    <p>{`Stacks are vertical by default and stacked items are full-width by default. Use the `}<inlineCode parentName=\"p\">{`gap`}</inlineCode>{`\nprop to add space between items.`}</p>\n    <ReactPlayground codeText={StackVertical} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"horizontal\"\n    }}>{`Horizontal`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`direction=\"horizontal\"`}</inlineCode>{` for horizontal layouts. Stacked items are vertically centered\nby default and only take up their necessary width. Use the `}<inlineCode parentName=\"p\">{`gap`}</inlineCode>{` prop to add space between\nitems.`}</p>\n    <ReactPlayground codeText={StackHorizontal} mdxType=\"ReactPlayground\" />\n    <p>{`Using horizontal margin utilities like `}<inlineCode parentName=\"p\">{`.ms-auto`}</inlineCode>{` as spacers:`}</p>\n    <ReactPlayground codeText={StackHorizontalMarginStart} mdxType=\"ReactPlayground\" />\n    <p>{`And with vertical rules:`}</p>\n    <ReactPlayground codeText={StackHorizontalVerticalRules} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`Use a vertical `}<inlineCode parentName=\"p\">{`Stack`}</inlineCode>{` to stack buttons and other elements:`}</p>\n    <ReactPlayground codeText={StackButtons} mdxType=\"ReactPlayground\" />\n    <p>{`Create an inline form with a horizontal `}<inlineCode parentName=\"p\">{`Stack`}</inlineCode>{`:`}</p>\n    <ReactPlayground codeText={StackForm} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.Stack} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = \"import Button from 'react-bootstrap/Button';\\nimport Stack from 'react-bootstrap/Stack';\\n\\nfunction ButtonsExample() {\\n  return (\\n    <Stack gap={2} className=\\\"col-md-5 mx-auto\\\">\\n      <Button variant=\\\"secondary\\\">Save changes</Button>\\n      <Button variant=\\\"outline-secondary\\\">Cancel</Button>\\n    </Stack>\\n  );\\n}\\n\\nexport default ButtonsExample;\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"callout\":\"Callout-styles-module--callout--1_K3h\",\"warning\":\"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h\",\"danger\":\"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h\"};","module.exports = \"import Button from 'react-bootstrap/Button';\\nimport Form from 'react-bootstrap/Form';\\nimport Stack from 'react-bootstrap/Stack';\\n\\nfunction FormExample() {\\n  return (\\n    <Stack direction=\\\"horizontal\\\" gap={3}>\\n      <Form.Control className=\\\"me-auto\\\" placeholder=\\\"Add your item here...\\\" />\\n      <Button variant=\\\"secondary\\\">Submit</Button>\\n      <div className=\\\"vr\\\" />\\n      <Button variant=\\\"outline-danger\\\">Reset</Button>\\n    </Stack>\\n  );\\n}\\n\\nexport default FormExample;\\n\"","module.exports = \"import Stack from 'react-bootstrap/Stack';\\n\\nfunction HorizontalVerticalRulesExample() {\\n  return (\\n    <Stack direction=\\\"horizontal\\\" gap={3}>\\n      <div className=\\\"bg-light border\\\">First item</div>\\n      <div className=\\\"bg-light border ms-auto\\\">Second item</div>\\n      <div className=\\\"vr\\\" />\\n      <div className=\\\"bg-light border\\\">Third item</div>\\n    </Stack>\\n  );\\n}\\n\\nexport default HorizontalVerticalRulesExample;\\n\"","import PropTypes from 'prop-types';\n\nimport { css } from 'astroturf';\n\nconst styles = css`\n  @import '../css/theme';\n\n  .callout {\n    border-left: 4px solid transparent;\n    padding: 1.2rem 1.2rem 1.2rem calc(1rem - 4px);\n    margin-left: -1rem;\n    margin-bottom: 2rem;\n  }\n\n  .warning {\n    composes: callout;\n    background-color: transparentize($note, 0.7);\n    border-left-color: $note;\n  }\n  .danger {\n    composes: callout;\n    background-color: transparentize($error, 0.7);\n    border-left-color: $error;\n  }\n`;\n\nconst propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n  theme: PropTypes.oneOf(['danger', 'warning']),\n};\n\nfunction Callout({ title, children, theme }) {\n  return (\n    <aside role=\"note\" className={styles[theme || 'warning']}>\n      {title && <header className=\"h5\">{title}</header>}\n      <div>{children}</div>\n    </aside>\n  );\n}\n\nCallout.propTypes = propTypes;\n\nexport default Callout;\n","module.exports = \"import Stack from 'react-bootstrap/Stack';\\n\\nfunction HorizontalExample() {\\n  return (\\n    <Stack direction=\\\"horizontal\\\" gap={3}>\\n      <div className=\\\"bg-light border\\\">First item</div>\\n      <div className=\\\"bg-light border\\\">Second item</div>\\n      <div className=\\\"bg-light border\\\">Third item</div>\\n    </Stack>\\n  );\\n}\\n\\nexport default HorizontalExample;\\n\""],"sourceRoot":""}