(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{hBOO:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return u}));var a,i=n("wx14"),o=n("zLVn"),d=(n("mXGw"),n("7ljp")),l=n("Snbm"),m=["components"],r={},c=(a="PageHeader",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),Object(d.mdx)("div",e)}),p={_frontmatter:r},b=l.a;function u(e){var t=e.components,n=Object(o.a)(e,m);return Object(d.mdx)(b,Object(i.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(d.mdx)(c,{title:"Migrating to v2",mdxType:"PageHeader"}),Object(d.mdx)("p",null,"React-Bootstrap v2 adds full compatibility with Bootstrap 5. Because Bootstrap 5 is a major rewrite of the project, there\nare significant breaking changes from React-Bootstrap v1."),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"PLEASE FIRST READ THE UPSTREAM BOOSTRAP MIGRATION GUIDE")),Object(d.mdx)("blockquote",null,Object(d.mdx)("p",{parentName:"blockquote"},Object(d.mdx)("a",{parentName:"p",href:"https://v5.getbootstrap.com/docs/5.0/migration"},"https://v5.getbootstrap.com/docs/5.0/migration"))),Object(d.mdx)("p",null,"React-Bootstrap ",Object(d.mdx)("em",{parentName:"p"},"only")," contains components that are present in vanilla Bootstrap. If functionality\nwas removed from Bootstrap, then it was also removed from React-Bootstrap. This guide does not\nrepeat information found in the upstream migration guide. Its goal is to document React-Bootstrap-specific\nAPI changes and additions."),Object(d.mdx)("h2",{id:"versioning"},"Versioning"),Object(d.mdx)("p",null,"We will continue to provide general maintenance for Bootstrap 4 components, because there are many projects that continue to depend on Bootstrap 4 support in\n",Object(d.mdx)("inlineCode",{parentName:"p"},"react-bootstrap"),". ",Object(d.mdx)("inlineCode",{parentName:"p"},"react-bootstrap")," package versions will be as follows:"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"Bootstrap 3 support will continue in react-bootstrap versions < ",Object(d.mdx)("inlineCode",{parentName:"li"},"v1.0.0")),Object(d.mdx)("li",{parentName:"ul"},"Bootstrap 4 support will be in react-bootstrap versions >= ",Object(d.mdx)("inlineCode",{parentName:"li"},"v1.0.0")),Object(d.mdx)("li",{parentName:"ul"},"Bootstrap 5 support will be in react-bootstrap versions >= ",Object(d.mdx)("inlineCode",{parentName:"li"},"v2.0.0"))),Object(d.mdx)("p",null,"We are ",Object(d.mdx)("strong",{parentName:"p"},"not")," committing to keeping breaking changes in lockstep with bootstraps major releases,\nthere may be a React-Bootstrap v3 targeting Bootstrap 6 depending on what's best for the project."),Object(d.mdx)("h2",{id:"summary-of-breaking-changes-from-v1x"},"Summary of breaking changes from v1.x"),Object(d.mdx)("p",null,"Below is a ",Object(d.mdx)("em",{parentName:"p"},"rough")," account of the breaking API changes as well as the minimal change to migrate"),Object(d.mdx)("h3",{id:"general"},"General"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"React >= 16.14.0 is now required to support the new JSX transform")),Object(d.mdx)("h3",{id:"accordion"},"Accordion"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"accordion is no longer card-based and has been rewritten with different markup."),Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"AccordionContext"),"'s value interface has changed."),Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"AccordionToggle")," has been renamed to ",Object(d.mdx)("inlineCode",{parentName:"li"},"AccordionButton"),"."),Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"useAccordionToggle")," has been renamed to ",Object(d.mdx)("inlineCode",{parentName:"li"},"useAccordionButton"),".")),Object(d.mdx)("h3",{id:"badge"},"Badge"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"variant")," has been renamed to ",Object(d.mdx)("inlineCode",{parentName:"li"},"bg"),".")),Object(d.mdx)("h3",{id:"buttongroup"},"ButtonGroup"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"toggle"),".")),Object(d.mdx)("h3",{id:"cardcolumns"},"CardColumns"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"dropped ",Object(d.mdx)("inlineCode",{parentName:"li"},"CardColumns"),".")),Object(d.mdx)("h3",{id:"closebutton"},"CloseButton"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"Removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"label")," prop in favor of ",Object(d.mdx)("inlineCode",{parentName:"li"},"aria-label"),"."),Object(d.mdx)("li",{parentName:"ul"},"Added ",Object(d.mdx)("inlineCode",{parentName:"li"},"variant")," prop.")),Object(d.mdx)("h3",{id:"col"},"Col"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"ColOrder")," is now maximum 5 instead of 12."),Object(d.mdx)("li",{parentName:"ul"},"When using objects in breakpoint props, ",Object(d.mdx)("inlineCode",{parentName:"li"},"span")," is no longer ",Object(d.mdx)("inlineCode",{parentName:"li"},"true")," by default.")),Object(d.mdx)("h3",{id:"dropdown"},"Dropdown"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"dropdown dividers use ",Object(d.mdx)("inlineCode",{parentName:"li"},"hr")," by default instead of ",Object(d.mdx)("inlineCode",{parentName:"li"},"div"),"."),Object(d.mdx)("li",{parentName:"ul"},"Alignment values ",Object(d.mdx)("inlineCode",{parentName:"li"},"left")," and ",Object(d.mdx)("inlineCode",{parentName:"li"},"right")," changed to ",Object(d.mdx)("inlineCode",{parentName:"li"},"start")," and ",Object(d.mdx)("inlineCode",{parentName:"li"},"end")," respectively."),Object(d.mdx)("li",{parentName:"ul"},"Removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"alignRight"),". Use ",Object(d.mdx)("inlineCode",{parentName:"li"},'align="end"')," instead.")),Object(d.mdx)("h3",{id:"dropdownbutton"},"DropdownButton"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"Removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"menuAlign")," prop in favor of ",Object(d.mdx)("inlineCode",{parentName:"li"},"align"),".")),Object(d.mdx)("h3",{id:"dropdownitem"},"DropdownItem"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"onSelect"),". Use ",Object(d.mdx)("inlineCode",{parentName:"li"},"onSelect")," in the parent ",Object(d.mdx)("inlineCode",{parentName:"li"},"Dropdown")," instead.")),Object(d.mdx)("h3",{id:"dropdownmenu"},"DropdownMenu"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"Removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"alignRight"),". Use ",Object(d.mdx)("inlineCode",{parentName:"li"},'align="end"')," instead.")),Object(d.mdx)("h3",{id:"form"},"Form"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"inline"),"."),Object(d.mdx)("li",{parentName:"ul"},"removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"bsPrefix"),".")),Object(d.mdx)("h3",{id:"formcheck"},"FormCheck"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"bsCustomPrefix")," and ",Object(d.mdx)("inlineCode",{parentName:"li"},"custom")," in favor of ",Object(d.mdx)("inlineCode",{parentName:"li"},"bsSwitchPrefix"),"."),Object(d.mdx)("li",{parentName:"ul"},"feedback type is now controlled by ",Object(d.mdx)("inlineCode",{parentName:"li"},"feedbackType")," instead of ",Object(d.mdx)("inlineCode",{parentName:"li"},"isValid")," and ",Object(d.mdx)("inlineCode",{parentName:"li"},"isInvalid"),".")),Object(d.mdx)("h4",{id:"formcheckinput"},"FormCheckInput"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"bsCustomPrefix"),"."),Object(d.mdx)("li",{parentName:"ul"},"removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"isStatic"),".")),Object(d.mdx)("h4",{id:"formchecklabel"},"FormCheckLabel"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"bsCustomPrefix"),"."),Object(d.mdx)("li",{parentName:"ul"},"changed base class from ",Object(d.mdx)("inlineCode",{parentName:"li"},"form-check-input")," to ",Object(d.mdx)("inlineCode",{parentName:"li"},"form-check-label"),".")),Object(d.mdx)("h3",{id:"formcontrol"},"FormControl"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"dropped ",Object(d.mdx)("inlineCode",{parentName:"li"},"as")," prop supporting ",Object(d.mdx)("inlineCode",{parentName:"li"},"select")," tags in favor of FormSelect."),Object(d.mdx)("li",{parentName:"ul"},"removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"custom"),"."),Object(d.mdx)("li",{parentName:"ul"},"removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"bsCustomPrefix"),"."),Object(d.mdx)("li",{parentName:"ul"},"dropped support for ",Object(d.mdx)("inlineCode",{parentName:"li"},"type")," supporting the ",Object(d.mdx)("inlineCode",{parentName:"li"},"range")," value in favor of FormRange."),Object(d.mdx)("li",{parentName:"ul"},"add color picker")),Object(d.mdx)("h3",{id:"formfile"},"FormFile"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"dropped all file-related components. Use ",Object(d.mdx)("inlineCode",{parentName:"li"},'<Form.Control type="file" />')," instead.")),Object(d.mdx)("h3",{id:"formgroup"},"FormGroup"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"bsPrefix"),". The ",Object(d.mdx)("inlineCode",{parentName:"li"},".form-group")," class is no longer supported in Bootstrap,\nbut this component is useful for passing ",Object(d.mdx)("inlineCode",{parentName:"li"},"controlId")," to labels and inputs. To handle\nspacing, use margin utilities instead.")),Object(d.mdx)("h3",{id:"formrow"},"FormRow"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"removed. Use ",Object(d.mdx)("inlineCode",{parentName:"li"},"Row")," instead.")),Object(d.mdx)("h3",{id:"inputgroup"},"InputGroup"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"dropped ",Object(d.mdx)("inlineCode",{parentName:"li"},"InputGroupPrepend")," and ",Object(d.mdx)("inlineCode",{parentName:"li"},"InputGroupAppend"),". Buttons and ",Object(d.mdx)("inlineCode",{parentName:"li"},"InputGroupText")," can now be added as direct children.")),Object(d.mdx)("h3",{id:"nav"},"Nav"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"keyboard navigation has been removed. If you need this, use ",Object(d.mdx)("inlineCode",{parentName:"li"},"Tabs")," instead.")),Object(d.mdx)("h3",{id:"navlink"},"NavLink"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"onSelect"),". Use ",Object(d.mdx)("inlineCode",{parentName:"li"},"onSelect")," in the parent ",Object(d.mdx)("inlineCode",{parentName:"li"},"Nav")," instead.")),Object(d.mdx)("h3",{id:"popover"},"Popover"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"renamed ",Object(d.mdx)("inlineCode",{parentName:"li"},"content")," prop to ",Object(d.mdx)("inlineCode",{parentName:"li"},"body")," to coincide with PopoverContent component name change.")),Object(d.mdx)("h3",{id:"popovercontent"},"PopoverContent"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"renamed to PopoverBody to match class name.")),Object(d.mdx)("h3",{id:"popovertitle"},"PopoverTitle"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"renamed to PopoverHeader to match class name.")),Object(d.mdx)("h3",{id:"responsiveembed"},"ResponsiveEmbed"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"renamed to Ratio."),Object(d.mdx)("li",{parentName:"ul"},"aspectRatio options changed to '1x1' | '4x3' | '16x9' | '21x9'.")),Object(d.mdx)("h3",{id:"safeanchor"},"SafeAnchor"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"renamed to Anchor.")),Object(d.mdx)("h3",{id:"splitbutton"},"SplitButton"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"Removed ",Object(d.mdx)("inlineCode",{parentName:"li"},"menuAlign")," prop in favor of ",Object(d.mdx)("inlineCode",{parentName:"li"},"align"),".")),Object(d.mdx)("h3",{id:"toast"},"Toast"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"delay")," is now default 5000 ms.")),Object(d.mdx)("h3",{id:"togglebutton"},"ToggleButton"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"add ",Object(d.mdx)("inlineCode",{parentName:"li"},"bsPrefix"),"."),Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"id")," is now required. This is to allow toggling of the input due to markup changes in Bootstrap.")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-migrating-mdx-21a63e8c2ec8407c12e7.js.map