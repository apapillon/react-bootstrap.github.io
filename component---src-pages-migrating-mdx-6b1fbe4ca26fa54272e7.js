(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{hBOO:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return d})),n.d(t,"default",(function(){return b}));var o=n("rePB"),i=n("zLVn"),a=(n("mXGw"),n("7ljp")),l=n("Snbm");function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){Object(o.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var d={},c={_frontmatter:d},p=l.a;function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.mdx)(p,m(m(m({},c),n),{},{components:t,mdxType:"MDXLayout"}),Object(a.mdx)("h1",m({},{id:"migrating-to-v2"}),"Migrating to v2"),Object(a.mdx)("p",null,"React-Bootstrap v2 adds full compatibility with Bootstrap 5. Because Bootstrap 5 is a major rewrite of the project, there\nare significant breaking changes from React-Bootstrap v1."),Object(a.mdx)("p",null,Object(a.mdx)("strong",{parentName:"p"},"PLEASE FIRST READ THE UPSTREAM BOOSTRAP MIGRATION GUIDE")),Object(a.mdx)("blockquote",null,Object(a.mdx)("p",{parentName:"blockquote"},Object(a.mdx)("a",m({parentName:"p"},{href:"https://v5.getbootstrap.com/docs/5.0/migration"}),"https://v5.getbootstrap.com/docs/5.0/migration"))),Object(a.mdx)("p",null,"React-Bootstrap ",Object(a.mdx)("em",{parentName:"p"},"only")," contains components that are present in vanilla Bootstrap. If functionality\nwas removed from Bootstrap, then it was also removed from React-Bootstrap. This guide does not\nrepeat information found in the upstream migration guide. Its goal is to document React-Bootstrap-specific\nAPI changes and additions."),Object(a.mdx)("h2",m({},{id:"versioning"}),"Versioning"),Object(a.mdx)("p",null,"We will continue to provide general maintenance for Bootstrap 4 components, because there are many projects that continue to depend on Bootstrap 4 support in\n",Object(a.mdx)("inlineCode",{parentName:"p"},"react-bootstrap"),". ",Object(a.mdx)("inlineCode",{parentName:"p"},"react-bootstrap")," package versions will be as follows:"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"Bootstrap 3 support will continue in react-bootstrap versions < ",Object(a.mdx)("inlineCode",{parentName:"li"},"v1.0.0")),Object(a.mdx)("li",{parentName:"ul"},"Bootstrap 4 support will be in react-bootstrap versions >= ",Object(a.mdx)("inlineCode",{parentName:"li"},"v1.0.0")),Object(a.mdx)("li",{parentName:"ul"},"Bootstrap 5 support will be in react-bootstrap versions >= ",Object(a.mdx)("inlineCode",{parentName:"li"},"v2.0.0"))),Object(a.mdx)("p",null,"We are ",Object(a.mdx)("strong",{parentName:"p"},"not")," committing to keeping breaking changes in lockstep with bootstraps major releases,\nthere may be a React-Bootstrap v3 targeting Bootstrap 6 depending on what's best for the project."),Object(a.mdx)("h2",m({},{id:"summary-of-breaking-changes-from-v1x"}),"Summary of breaking changes from v1.x"),Object(a.mdx)("p",null,"Below is a ",Object(a.mdx)("em",{parentName:"p"},"rough")," account of the breaking API changes as well as the minimal change to migrate"),Object(a.mdx)("h3",m({},{id:"general"}),"General"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"React >= 16.14.0 is now required to support the new JSX transform")),Object(a.mdx)("h3",m({},{id:"accordion"}),"Accordion"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"accordion is no longer card-based and has been rewritten with different markup."),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"AccordionContext"),"'s value interface has changed."),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"AccordionToggle")," has been renamed to ",Object(a.mdx)("inlineCode",{parentName:"li"},"AccordionButton"),"."),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"useAccordionToggle")," has been renamed to ",Object(a.mdx)("inlineCode",{parentName:"li"},"useAccordionButton"),".")),Object(a.mdx)("h3",m({},{id:"buttongroup"}),"ButtonGroup"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"toggle"),".")),Object(a.mdx)("h3",m({},{id:"closebutton"}),"CloseButton"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"Removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"label")," prop in favor of ",Object(a.mdx)("inlineCode",{parentName:"li"},"aria-label"),"."),Object(a.mdx)("li",{parentName:"ul"},"Added ",Object(a.mdx)("inlineCode",{parentName:"li"},"variant")," prop.")),Object(a.mdx)("h3",m({},{id:"col"}),"Col"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"ColOrder")," is now maximum 5 instead of 12.")),Object(a.mdx)("h3",m({},{id:"dropdown"}),"Dropdown"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"dropdown dividers use ",Object(a.mdx)("inlineCode",{parentName:"li"},"hr")," by default instead of ",Object(a.mdx)("inlineCode",{parentName:"li"},"div"),"."),Object(a.mdx)("li",{parentName:"ul"},"Alignment values ",Object(a.mdx)("inlineCode",{parentName:"li"},"left")," and ",Object(a.mdx)("inlineCode",{parentName:"li"},"right")," changed to ",Object(a.mdx)("inlineCode",{parentName:"li"},"start")," and ",Object(a.mdx)("inlineCode",{parentName:"li"},"end")," respectively."),Object(a.mdx)("li",{parentName:"ul"},"Removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"alignRight"),". Use ",Object(a.mdx)("inlineCode",{parentName:"li"},'align="end"')," instead.")),Object(a.mdx)("h3",m({},{id:"dropdownbutton"}),"DropdownButton"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"Removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"menuAlign")," prop in favor of ",Object(a.mdx)("inlineCode",{parentName:"li"},"align"),".")),Object(a.mdx)("h3",m({},{id:"dropdownmenu"}),"DropdownMenu"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"Removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"alignRight"),". Use ",Object(a.mdx)("inlineCode",{parentName:"li"},'align="end"')," instead.")),Object(a.mdx)("h3",m({},{id:"form"}),"Form"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"inline"),"."),Object(a.mdx)("li",{parentName:"ul"},"removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"bsPrefix"),".")),Object(a.mdx)("h3",m({},{id:"formcheck"}),"FormCheck"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"bsCustomPrefix")," and ",Object(a.mdx)("inlineCode",{parentName:"li"},"custom")," in favor of ",Object(a.mdx)("inlineCode",{parentName:"li"},"bsSwitchPrefix"),".")),Object(a.mdx)("h4",m({},{id:"formcheckinput"}),"FormCheckInput"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"bsCustomPrefix"),"."),Object(a.mdx)("li",{parentName:"ul"},"removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"isStatic"),".")),Object(a.mdx)("h4",m({},{id:"formchecklabel"}),"FormCheckLabel"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"bsCustomPrefix"),"."),Object(a.mdx)("li",{parentName:"ul"},"changed base class from ",Object(a.mdx)("inlineCode",{parentName:"li"},"form-check-input")," to ",Object(a.mdx)("inlineCode",{parentName:"li"},"form-check-label"),".")),Object(a.mdx)("h3",m({},{id:"formcontrol"}),"FormControl"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"dropped ",Object(a.mdx)("inlineCode",{parentName:"li"},"as")," prop supporting ",Object(a.mdx)("inlineCode",{parentName:"li"},"select")," tags in favor of FormSelect."),Object(a.mdx)("li",{parentName:"ul"},"removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"custom"),"."),Object(a.mdx)("li",{parentName:"ul"},"removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"bsCustomPrefix"),"."),Object(a.mdx)("li",{parentName:"ul"},"dropped support for ",Object(a.mdx)("inlineCode",{parentName:"li"},"type")," supporting the ",Object(a.mdx)("inlineCode",{parentName:"li"},"range")," value in favor of FormRange."),Object(a.mdx)("li",{parentName:"ul"},"add color picker")),Object(a.mdx)("h3",m({},{id:"formfile"}),"FormFile"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"dropped all file-related components. Use ",Object(a.mdx)("inlineCode",{parentName:"li"},'<Form.Control type="file" />')," instead.")),Object(a.mdx)("h3",m({},{id:"formgroup"}),"FormGroup"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"bsPrefix"),". The ",Object(a.mdx)("inlineCode",{parentName:"li"},".form-group")," class is no longer supported in Bootstrap,\nbut this component is useful for passing ",Object(a.mdx)("inlineCode",{parentName:"li"},"controlId")," to labels and inputs. To handle\nspacing, use margin utilities instead.")),Object(a.mdx)("h3",m({},{id:"formrow"}),"FormRow"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"removed. Use ",Object(a.mdx)("inlineCode",{parentName:"li"},"Row")," instead.")),Object(a.mdx)("h3",m({},{id:"inputgroup"}),"InputGroup"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"dropped ",Object(a.mdx)("inlineCode",{parentName:"li"},"InputGroupPrepend")," and ",Object(a.mdx)("inlineCode",{parentName:"li"},"InputGroupAppend"),". Buttons and ",Object(a.mdx)("inlineCode",{parentName:"li"},"InputGroupText")," can now be added as direct children.")),Object(a.mdx)("h3",m({},{id:"popover"}),"Popover"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"renamed ",Object(a.mdx)("inlineCode",{parentName:"li"},"content")," prop to ",Object(a.mdx)("inlineCode",{parentName:"li"},"body")," to coincide with PopoverContent component name change.")),Object(a.mdx)("h3",m({},{id:"popovercontent"}),"PopoverContent"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"renamed to PopoverBody to match class name.")),Object(a.mdx)("h3",m({},{id:"popovertitle"}),"PopoverTitle"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"renamed to PopoverHeader to match class name.")),Object(a.mdx)("h3",m({},{id:"responsiveembed"}),"ResponsiveEmbed"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"renamed to Ratio."),Object(a.mdx)("li",{parentName:"ul"},"aspectRatio options changed to '1x1' | '4x3' | '16x9' | '21x9'.")),Object(a.mdx)("h3",m({},{id:"splitbutton"}),"SplitButton"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"Removed ",Object(a.mdx)("inlineCode",{parentName:"li"},"menuAlign")," prop in favor of ",Object(a.mdx)("inlineCode",{parentName:"li"},"align"),". ")),Object(a.mdx)("h3",m({},{id:"toast"}),"Toast"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"delay")," is now default 5000 ms.")),Object(a.mdx)("h3",m({},{id:"togglebutton"}),"ToggleButton"),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},"add ",Object(a.mdx)("inlineCode",{parentName:"li"},"bsPrefix"),"."),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("inlineCode",{parentName:"li"},"id")," is now required. This is to allow toggling of the input due to markup changes in Bootstrap.")))}b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-migrating-mdx-6b1fbe4ca26fa54272e7.js.map