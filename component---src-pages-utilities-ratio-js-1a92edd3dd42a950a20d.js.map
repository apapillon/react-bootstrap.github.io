{"version":3,"sources":["webpack:///./src/examples/Ratio/Default.js","webpack:///./src/css/examples.module.scss","webpack:///./src/examples/Ratio/Custom.js","webpack:///./src/pages/utilities/ratio.js","webpack:///./src/withLayout.js","webpack:///./src/examples/Ratio/Example.js"],"names":["module","exports","withLayout","data","h","id","className","codeText","RatioExample","RatioDefault","exampleClassName","styles","ratioExamples","RatioCustom","metadata","Ratio","Component","props","pathname","location","Layout","DefaultLayout","startsWith","ApiLayout"],"mappings":"6EAAAA,EAAOC,QAAU,6H,qBCCjBD,EAAOC,QAAU,CAAC,UAAY,qCAAqC,cAAgB,yCAAyC,mBAAqB,wDAAwD,mBAAqB,iD,mBCD9ND,EAAOC,QAAU,yI,6LCYFC,uBAAW,YAAiC,IAATC,EAAQ,EAARA,KAChD,OACE,qCACE,cAAC,UAAD,CAAeC,EAAE,IAAIC,GAAG,QAAxB,oBAIA,mBAAGC,UAAU,OAAb,wMAMA,cAAC,UAAD,CAAeF,EAAE,IAAIC,GAAG,cAAxB,mBAGA,2GAEO,+BAAO,aAFd,MAEmC,+BAAO,YAF1C,KAE8D,IAC5D,+BAAO,YAHT,UAGiC,+BAAO,aAHxC,gFAI+D,IAC7D,+BAAO,UALT,OAK4B,+BAAO,UALnC,+EASA,2DAC4B,mDAD5B,WACiE,IAC/D,0CAFF,QAKA,cAAC,UAAD,CAAeD,EAAE,IAAIC,GAAG,gBAAxB,qBAGA,cAAC,IAAD,CAAiBE,SAAUC,MAE3B,cAAC,UAAD,CAAeJ,EAAE,IAAIC,GAAG,gBAAxB,2BAGA,uEACwC,+CADxC,8BAEwB,+CAFxB,2BAIA,cAAC,IAAD,CACEE,SAAUE,IACVC,iBAAkBC,IAAOC,gBAG3B,cAAC,UAAD,CAAeR,EAAE,IAAIC,GAAG,gBAAxB,oBAGA,mFACqD,IACnD,+CAFF,6HAKA,cAAC,IAAD,CACEE,SAAUM,IACVH,iBAAkBC,IAAOC,gBAG3B,cAAC,UAAD,CAAeR,EAAE,IAAIC,GAAG,cAAxB,iBAGA,cAAC,IAAD,CAAcS,SAAUX,EAAKY,e,msBCxEpB,SAASb,EAAWc,GACjC,OAAO,SAACC,GAAW,IACTC,EAAaD,EAAME,SAAnBD,SACJE,EAASC,IAUb,OAREH,EAASI,WAAW,qBACpBJ,EAASI,WAAW,YACpBJ,EAASI,WAAW,gBACpBJ,EAASI,WAAW,iBAEpBF,EAASG,KAIT,cAACH,EAAD,CAAQD,SAAUF,EAAME,SAAxB,SACE,cAACH,EAAD,KAAeC,S,mBClBvBjB,EAAOC,QAAU","file":"component---src-pages-utilities-ratio-js-1a92edd3dd42a950a20d.js","sourcesContent":["module.exports = \"['1x1', '4x3', '16x9', '21x9'].map((ratio) => (\\n  <Ratio aspectRatio={ratio}>\\n    <div>{ratio}</div>\\n  </Ratio>\\n));\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listGroup\":\"examples-module--list-group--IXNCn\",\"ratioExamples\":\"examples-module--ratio-examples--Gv1Nw\",\"staticDropdownMenu\":\"examples-module--static-dropdown-menu--kkfyD clearfix\",\"customDropdownMenu\":\"examples-module--custom-dropdown-menu--2e_DR\"};","module.exports = \"<>\\n  <Ratio aspectRatio={1 / 2}>\\n    <div>2x1</div>\\n  </Ratio>\\n  <Ratio aspectRatio={50}>\\n    <div>2x1</div>\\n  </Ratio>\\n</>;\\n\"","import { graphql } from 'gatsby';\n\nimport LinkedHeading from '../../components/LinkedHeading';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport RatioCustom from '../../examples/Ratio/Custom';\nimport RatioDefault from '../../examples/Ratio/Default';\nimport RatioExample from '../../examples/Ratio/Example';\nimport withLayout from '../../withLayout';\n\nimport styles from '../../css/examples.module.scss';\n\nexport default withLayout(function RatioSection({ data }) {\n  return (\n    <>\n      <LinkedHeading h=\"1\" id=\"ratio\">\n        Ratios\n      </LinkedHeading>\n\n      <p className=\"lead\">\n        Use generated pseudo elements to make an element maintain the aspect\n        ratio of your choosing. Perfect for responsively handling video or\n        slideshow embeds based on the width of the parent.\n      </p>\n\n      <LinkedHeading h=\"2\" id=\"ratio-props\">\n        About\n      </LinkedHeading>\n      <p>\n        Use the ratio helper to manage the aspect ratios of external content\n        like <code>{'<iframe>'}</code>s, <code>{'<embed>'}</code>s,{' '}\n        <code>{'<video>'}</code>s, and <code>{'<object>'}</code>s. These helpers\n        also can be used on any standard HTML child element (e.g., a{' '}\n        <code>{'<div>'}</code> or <code>{'<img>'}</code>). Styles are applied\n        from the parent .ratio class directly to the child.\n      </p>\n\n      <p>\n        You don't need to include <code>frameborder=\"0\"</code> in your{' '}\n        <code>iframe</code>s.\n      </p>\n\n      <LinkedHeading h=\"2\" id=\"ratio-example\">\n        Example\n      </LinkedHeading>\n      <ReactPlayground codeText={RatioExample} />\n\n      <LinkedHeading h=\"2\" id=\"aspect-ratios\">\n        Aspect ratios\n      </LinkedHeading>\n      <p>\n        Aspect ratios can be customized using <code>aspectRatio</code>. By\n        default the following <code>aspectRatio</code> values are provided:\n      </p>\n      <ReactPlayground\n        codeText={RatioDefault}\n        exampleClassName={styles.ratioExamples}\n      />\n\n      <LinkedHeading h=\"2\" id=\"custom-ratios\">\n        Custom\n      </LinkedHeading>\n      <p>\n        Create custom aspect ratios by passing a number to{' '}\n        <code>aspectRatio</code> instead of using the above pre-defined values.\n        You can use either a fraction or percentage to define the custom ratio.\n      </p>\n      <ReactPlayground\n        codeText={RatioCustom}\n        exampleClassName={styles.ratioExamples}\n      />\n\n      <LinkedHeading h=\"3\" id=\"ratio-props\">\n        API\n      </LinkedHeading>\n      <ComponentApi metadata={data.Ratio} />\n    </>\n  );\n});\n\nexport const query = graphql`\n  query RatioQuery {\n    Ratio: componentMetadata(displayName: { eq: \"Ratio\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\n","import ApiLayout from './layouts/ApiLayout';\nimport DefaultLayout from './layouts';\n\nexport default function withLayout(Component) {\n  return (props) => {\n    const { pathname } = props.location;\n    let Layout = DefaultLayout;\n    if (\n      pathname.startsWith('/getting-started') ||\n      pathname.startsWith('/layout') ||\n      pathname.startsWith('/components') ||\n      pathname.startsWith('/utilities')\n    ) {\n      Layout = ApiLayout;\n    }\n\n    return (\n      <Layout location={props.location}>\n        <Component {...props} />\n      </Layout>\n    );\n  };\n}\n","module.exports = \"<div style={{ width: 660, height: 'auto' }}>\\n  <Ratio aspectRatio=\\\"16x9\\\">\\n    <embed type=\\\"image/svg+xml\\\" src=\\\"/TheresaKnott_castle.svg\\\" />\\n  </Ratio>\\n</div>;\\n\""],"sourceRoot":""}