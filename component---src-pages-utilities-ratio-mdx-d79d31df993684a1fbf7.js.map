{"version":3,"sources":["webpack:///./src/pages/utilities/ratio.mdx","webpack:///./src/examples/Ratio/Default.js","webpack:///./src/css/examples.module.scss","webpack:///./src/examples/Ratio/Custom.js","webpack:///./src/examples/Ratio/Example.js"],"names":["_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","className","parentName","codeText","RatioExample","RatioDefault","exampleClassName","styles","ratioExamples","RatioCustom","metadata","data","Ratio","isMDXComponent","module","exports"],"mappings":"66BAeO,IAOMA,EAAe,GACtBC,EAAc,CAClBC,MATmB,aAUnBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,SAAeF,GAAiBM,GAAhC,IAAuCD,WAAYA,EAAYE,QAAQ,cAM5E,wBAAQ,CACN,GAAM,WADR,UAGA,mBAAGC,UAAU,QAAb,8LAKA,wBAAQ,CACN,GAAM,UADR,SAGA,qGACF,4BAAYC,WAAW,KAAvB,YADE,MACyD,4BAAYA,WAAW,KAAvB,WADzD,MACmH,4BAAYA,WAAW,KAAvB,WADnH,UACiL,4BAAYA,WAAW,KAAvB,YADjL,kFAEuC,4BAAYA,WAAW,KAAvB,SAFvC,OAEgG,4BAAYA,WAAW,KAAvB,SAFhG,8EAIA,oDAAiC,4BAAYA,WAAW,KAAvB,mBAAjC,YAAyG,4BAAYA,WAAW,KAAvB,UAAzG,MACA,wBAAQ,CACN,GAAM,YADR,WAGA,cAAC,IAAD,CAAiBC,SAAUC,IAAcJ,QAAQ,oBACjD,wBAAQ,CACN,GAAM,kBADR,iBAGA,gEAA6C,4BAAYE,WAAW,KAAvB,eAA7C,8BAAmI,4BAAYA,WAAW,KAAvB,eAAnI,0BAEA,cAAC,IAAD,CAAiBC,SAAUE,IAAcC,iBAAkBC,IAAOC,cAAeR,QAAQ,oBACzF,wBAAQ,CACN,GAAM,WADR,UAGA,6EAA0D,4BAAYE,WAAW,KAAvB,eAA1D,4HAEA,cAAC,IAAD,CAAiBC,SAAUM,IAAaH,iBAAkBC,IAAOC,cAAeR,QAAQ,oBACxF,wBAAQ,CACN,GAAM,QADR,OAGA,cAAC,IAAD,CAAcU,SAAUX,EAAMY,KAAKC,MAAOZ,QAAQ,kBAMtDH,EAAWgB,gBAAiB,G,mBC/E5BC,EAAOC,QAAU,6H,qBCCjBD,EAAOC,QAAU,CAAC,UAAY,qCAAqC,cAAgB,yCAAyC,mBAAqB,wDAAwD,mBAAqB,+CAA+C,iBAAmB,8C,mBCDhSD,EAAOC,QAAU,yI,mBCAjBD,EAAOC,QAAU","file":"component---src-pages-utilities-ratio-mdx-d79d31df993684a1fbf7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport RatioCustom from '../../examples/Ratio/Custom';\nimport RatioDefault from '../../examples/Ratio/Default';\nimport RatioExample from '../../examples/Ratio/Example';\nimport styles from '../../css/examples.module.scss';\nexport const query = graphql`\n  query RatioQuery {\n    Ratio: componentMetadata(displayName: { eq: \"Ratio\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"ratios\"\n    }}>{`Ratios`}</h1>\n    <p className=\"lead\">\n  Use generated pseudo elements to make an element maintain the aspect ratio of\n  your choosing. Perfect for responsively handling video or slideshow embeds\n  based on the width of the parent.\n    </p>\n    <h2 {...{\n      \"id\": \"about\"\n    }}>{`About`}</h2>\n    <p>{`Use the ratio helper to manage the aspect ratios of external content like\n`}<inlineCode parentName=\"p\">{`<iframe>`}</inlineCode>{`s, `}<inlineCode parentName=\"p\">{`<embed>`}</inlineCode>{`s, `}<inlineCode parentName=\"p\">{`<video>`}</inlineCode>{`s, and `}<inlineCode parentName=\"p\">{`<object>`}</inlineCode>{`s. These helpers also can be used on\nany standard HTML child element (e.g., a `}<inlineCode parentName=\"p\">{`<div>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<img>`}</inlineCode>{`). Styles are applied from\nthe parent .ratio class directly to the child.`}</p>\n    <p>{`You don't need to include `}<inlineCode parentName=\"p\">{`frameborder=\"0\"`}</inlineCode>{` in your `}<inlineCode parentName=\"p\">{`iframe`}</inlineCode>{`s.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <ReactPlayground codeText={RatioExample} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"aspect-ratios\"\n    }}>{`Aspect ratios`}</h2>\n    <p>{`Aspect ratios can be customized using `}<inlineCode parentName=\"p\">{`aspectRatio`}</inlineCode>{`. By default the following `}<inlineCode parentName=\"p\">{`aspectRatio`}</inlineCode>{`\nvalues are provided:`}</p>\n    <ReactPlayground codeText={RatioDefault} exampleClassName={styles.ratioExamples} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"custom\"\n    }}>{`Custom`}</h2>\n    <p>{`Create custom aspect ratios by passing a number to `}<inlineCode parentName=\"p\">{`aspectRatio`}</inlineCode>{` instead of using the above\npre-defined values. You can use either a fraction or percentage to define the custom ratio.`}</p>\n    <ReactPlayground codeText={RatioCustom} exampleClassName={styles.ratioExamples} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.Ratio} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = \"['1x1', '4x3', '16x9', '21x9'].map((ratio) => (\\n  <Ratio aspectRatio={ratio}>\\n    <div>{ratio}</div>\\n  </Ratio>\\n));\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listGroup\":\"examples-module--list-group--IXNCn\",\"ratioExamples\":\"examples-module--ratio-examples--Gv1Nw\",\"staticDropdownMenu\":\"examples-module--static-dropdown-menu--kkfyD clearfix\",\"customDropdownMenu\":\"examples-module--custom-dropdown-menu--2e_DR\",\"overlayContained\":\"examples-module--overlay-contained--11C4s\"};","module.exports = \"<>\\n  <Ratio aspectRatio={1 / 2}>\\n    <div>2x1</div>\\n  </Ratio>\\n  <Ratio aspectRatio={50}>\\n    <div>2x1</div>\\n  </Ratio>\\n</>;\\n\"","module.exports = \"<div style={{ width: 660, height: 'auto' }}>\\n  <Ratio aspectRatio=\\\"16x9\\\">\\n    <embed type=\\\"image/svg+xml\\\" src=\\\"/TheresaKnott_castle.svg\\\" />\\n  </Ratio>\\n</div>;\\n\""],"sourceRoot":""}