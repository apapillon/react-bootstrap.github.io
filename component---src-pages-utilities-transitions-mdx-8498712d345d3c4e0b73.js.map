{"version":3,"sources":["webpack:///./src/pages/utilities/transitions.mdx","webpack:///./src/examples/CollapseHorizontal.js","webpack:///./src/components/Callout-styles.module.scss","webpack:///./src/examples/Collapse.js","webpack:///./src/examples/Fade.js","webpack:///./src/components/Callout.js"],"names":["_frontmatter","layoutProps","query","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","title","codeText","Collapse","CollapseHorizontal","Fade","metadata","data","isMDXComponent","module","exports"],"mappings":"s6BAeO,IAUMA,EAAe,GACtBC,EAAc,CAClBC,MAZmB,YAanBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,SAAeF,GAAiBM,GAAhC,IAAuCD,WAAYA,EAAYE,QAAQ,cAM5E,wBAAQ,CACN,GAAM,gBADR,eAGA,uLAEF,4BAAYC,WAAW,KAAvB,gBAFE,oBAE2E,qBAAGA,WAAW,KAAQ,CAC7F,KAAQ,sDAD+D,0BAF3E,kDAKA,0PAEF,4BAAYA,WAAW,KAAvB,gBAFE,gBAGA,wBAAQ,CACN,GAAM,aADR,YAGA,wBAAQ,CACN,GAAM,kBADR,iBAGA,sFACA,cAAC,IAAD,CAASC,MAAM,oBAAoBF,QAAQ,WAA3C,oJAGG,0BAAO,cAHV,sDAIgB,0BAAO,SAJvB,qHAQA,cAAC,IAAD,CAAiBG,SAAUC,IAAUJ,QAAQ,oBAC7C,wBAAQ,CACN,GAAM,eADR,cAGA,gIACA,cAAC,IAAD,CAASE,MAAM,oBAAoBF,QAAQ,WAA3C,oJAGG,0BAAO,cAHV,sDAIgB,0BAAO,SAJvB,qHAQA,cAAC,IAAD,CAAiBG,SAAUE,IAAoBL,QAAQ,oBACvD,wBAAQ,CACN,GAAM,SADR,QAGA,gFACA,cAAC,IAAD,CAAiBG,SAAUG,IAAMN,QAAQ,oBACzC,wBAAQ,CACN,GAAM,QADR,OAGA,cAAC,IAAD,CAAcO,SAAUR,EAAMS,KAAKJ,SAAUJ,QAAQ,iBACrD,cAAC,IAAD,CAAcO,SAAUR,EAAMS,KAAKF,KAAMN,QAAQ,kBAMrDH,EAAWY,gBAAiB,G,mBChG5BC,EAAOC,QAAU,8yB,qBCCjBD,EAAOC,QAAU,CAAC,QAAU,wCAAwC,QAAU,8EAA8E,OAAS,+E,mBCDrKD,EAAOC,QAAU,+nB,mBCAjBD,EAAOC,QAAU,qnB,kDCIjB,EAAe,UAuCf,IAXA,SAAiB,GAAjB,qCACA,OACA,wEACA,uDACA","file":"component---src-pages-utilities-transitions-mdx-8498712d345d3c4e0b73.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyletsang/Documents/Kyle/Code/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport Callout from '../../components/Callout';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport Collapse from '../../examples/Collapse';\nimport CollapseHorizontal from '../../examples/CollapseHorizontal';\nimport Fade from '../../examples/Fade';\nexport const query = graphql`\n  query TransitionQuery {\n    Fade: componentMetadata(displayName: { eq: \"Fade\" }) {\n      ...ComponentApi_metadata\n    }\n    Collapse: componentMetadata(displayName: { eq: \"Collapse\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"transitions\"\n    }}>{`Transitions`}</h1>\n    <p>{`Bootstrap includes a few general use CSS transitions that can be applied\nto a number of components. React Bootstrap, bundles them up into a few composable\n`}<inlineCode parentName=\"p\">{`<Transition>`}</inlineCode>{` components from `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/reactjs/react-transition-group\"\n      }}>{`react-transition-group`}</a>{`, a commonly used animation wrapper for React.`}</p>\n    <p>{`Encapsulating animations into components has the added benefit of making them  more broadly useful,\nas well as portable for using in other libraries.  All React-bootstrap components that can be animated, support pluggable\n`}<inlineCode parentName=\"p\">{`<Transition>`}</inlineCode>{` components.`}</p>\n    <h2 {...{\n      \"id\": \"collapse\"\n    }}>{`Collapse`}</h2>\n    <h3 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic Example`}</h3>\n    <p>{`Add a collapse toggle animation to an element or component.`}</p>\n    <Callout title=\"Smooth animations\" mdxType=\"Callout\">\n  If you're noticing choppy animations, and the component that's being\n  collapsed has non-zero margin or padding, try wrapping the contents of\n  your <code>{'<Collapse>'}</code> inside a node with no margin or\n  padding, like the <code>{'<div>'}</code> in the example below. This will\n  allow the height to be computed properly, so the animation can proceed\n  smoothly.\n    </Callout>\n    <ReactPlayground codeText={Collapse} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"horizontal\"\n    }}>{`Horizontal`}</h3>\n    <p>{`Add a collapse toggle animation to an element or component to transition the width instead of height.`}</p>\n    <Callout title=\"Smooth animations\" mdxType=\"Callout\">\n  If you're noticing choppy animations, and the component that's being\n  collapsed has non-zero margin or padding, try wrapping the contents of\n  your <code>{'<Collapse>'}</code> inside a node with no margin or\n  padding, like the <code>{'<div>'}</code> in the example below. This will\n  allow the height to be computed properly, so the animation can proceed\n  smoothly.\n    </Callout>\n    <ReactPlayground codeText={CollapseHorizontal} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"fade\"\n    }}>{`Fade`}</h2>\n    <p>{`Add a fade animation to a child element or component.`}</p>\n    <ReactPlayground codeText={Fade} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.Collapse} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.Fade} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = \"function Example() {\\n  const [open, setOpen] = useState(false);\\n\\n  return (\\n    <>\\n      <Button\\n        onClick={() => setOpen(!open)}\\n        aria-controls=\\\"example-collapse-text\\\"\\n        aria-expanded={open}\\n      >\\n        click\\n      </Button>\\n      <div style={{minHeight: '150px'}}>\\n        <Collapse in={open} dimension=\\\"width\\\">\\n          <div id=\\\"example-collapse-text\\\">\\n            <Card body style={{width: '400px'}}>\\n                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus\\n                terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer\\n                labore wes anderson cred nesciunt sapiente ea proident.\\n            </Card>\\n          </div>\\n        </Collapse>\\n      </div>\\n    </>\\n  );\\n}\\n\\nrender(<Example />);\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"callout\":\"Callout-styles-module--callout--1_K3h\",\"warning\":\"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h\",\"danger\":\"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h\"};","module.exports = \"function Example() {\\n  const [open, setOpen] = useState(false);\\n\\n  return (\\n    <>\\n      <Button\\n        onClick={() => setOpen(!open)}\\n        aria-controls=\\\"example-collapse-text\\\"\\n        aria-expanded={open}\\n      >\\n        click\\n      </Button>\\n      <Collapse in={open}>\\n        <div id=\\\"example-collapse-text\\\">\\n          Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus\\n          terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer\\n          labore wes anderson cred nesciunt sapiente ea proident.\\n        </div>\\n      </Collapse>\\n    </>\\n  );\\n}\\n\\nrender(<Example />);\\n\"","module.exports = \"function Example() {\\n  const [open, setOpen] = useState(false);\\n\\n  return (\\n    <>\\n      <Button\\n        onClick={() => setOpen(!open)}\\n        aria-controls=\\\"example-fade-text\\\"\\n        aria-expanded={open}\\n      >\\n        Toggle text\\n      </Button>\\n      <Fade in={open}>\\n        <div id=\\\"example-fade-text\\\">\\n          Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus\\n          terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer\\n          labore wes anderson cred nesciunt sapiente ea proident.\\n        </div>\\n      </Fade>\\n    </>\\n  );\\n}\\n\\nrender(<Example />);\\n\"","import PropTypes from 'prop-types';\n\nimport { css } from 'astroturf';\n\nconst styles = css`\n  @import '../css/theme';\n\n  .callout {\n    border-left: 4px solid transparent;\n    padding: 1.2rem 1.2rem 1.2rem calc(1rem - 4px);\n    margin-left: -1rem;\n    margin-bottom: 2rem;\n  }\n\n  .warning {\n    composes: callout;\n    background-color: transparentize($note, 0.7);\n    border-left-color: $note;\n  }\n  .danger {\n    composes: callout;\n    background-color: transparentize($error, 0.7);\n    border-left-color: $error;\n  }\n`;\n\nconst propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n  theme: PropTypes.oneOf(['danger', 'warning']),\n};\n\nfunction Callout({ title, children, theme }) {\n  return (\n    <aside role=\"note\" className={styles[theme || 'warning']}>\n      {title && <header className=\"h5\">{title}</header>}\n      <div>{children}</div>\n    </aside>\n  );\n}\n\nCallout.propTypes = propTypes;\n\nexport default Callout;\n"],"sourceRoot":""}