{"componentChunkName":"component---src-pages-components-accordion-mdx","path":"/components/accordion/","result":{"data":{"Accordion":{"composes":null,"displayName":"Accordion","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"as","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Set a custom element for this component</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"bsPrefix","doclets":[{"tag":"default","value":"'accordion'"}],"defaultValue":{"value":"'accordion'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"activeKey","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The current active key that corresponds to the currently expanded card</p>"}},"required":false,"type":{"name":"union","value":[{"name":"string"},{"name":"array"}],"raw":null}},{"name":"defaultActiveKey","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The default active key that is expanded on start</p>"}},"required":false,"type":{"name":"union","value":[{"name":"string"},{"name":"array"}],"raw":null}},{"name":"onSelect","doclets":[{"tag":"controllable","value":"activeIndex"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired when the active item changes.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">eventKey</span><span class=\"token operator\">:</span> string <span class=\"token operator\">|</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> Object</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span></code></pre></div>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"flush","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Renders accordion edge-to-edge with its parent container</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"alwaysOpen","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Allow accordion items to stay open when another item is opened</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}}]},"AccordionItem":{"composes":null,"displayName":"AccordionItem","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"as","doclets":[],"defaultValue":{"value":"'div'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Set a custom element for this component</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"bsPrefix","doclets":[{"tag":"default","value":"'accordion-item'"}],"defaultValue":{"value":"'accordion-item'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"eventKey","doclets":[{"tag":"required","value":true}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A unique key used to control this item's collapse/expand.</p>"}},"required":true,"type":{"name":"string","value":null,"raw":null}}]},"AccordionHeader":{"composes":null,"displayName":"AccordionHeader","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"as","doclets":[],"defaultValue":{"value":"'h2'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Set a custom element for this component</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"bsPrefix","doclets":[{"tag":"default","value":"'accordion-header'"}],"defaultValue":{"value":"'accordion-header'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"onClick","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Click handler for the <code class=\"language-text\">AccordionButton</code> element</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}}]},"AccordionBody":{"composes":null,"displayName":"AccordionBody","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"as","doclets":[],"defaultValue":{"value":"'div'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Set a custom element for this component</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"bsPrefix","doclets":[{"tag":"default","value":"'accordion-body'"}],"defaultValue":{"value":"'accordion-body'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"AccordionButton":{"composes":null,"displayName":"AccordionButton","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"as","doclets":[],"defaultValue":{"value":"'button'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Set a custom element for this component</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"bsPrefix","doclets":[{"tag":"default","value":"'accordion-button'"}],"defaultValue":{"value":"'accordion-button'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"onClick","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A callback function for when this component is clicked</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}}]},"AccordionCollapse":{"composes":null,"displayName":"AccordionCollapse","description":{"childMarkdownRemark":{"html":"<p>This component accepts all of <a href=\"/utilities/transitions/#collapse-props\"><code class=\"language-text\">Collapse</code>'s props</a>.</p>"}},"props":[{"name":"as","doclets":[],"defaultValue":{"value":"'div'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Set a custom element for this component</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"eventKey","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A key that corresponds to the toggler that triggers this collapse's expand or collapse.</p>"}},"required":true,"type":{"name":"string","value":null,"raw":null}},{"name":"children","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Children prop should only contain a single child, and is enforced as such</p>"}},"required":true,"type":{"name":"element","value":null,"raw":null}}]}},"pageContext":{"frontmatter":{}}},"staticQueryHashes":["1633686484"]}