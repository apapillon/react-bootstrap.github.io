{"componentChunkName":"component---src-pages-forms-checks-radios-mdx","path":"/forms/checks-radios/","result":{"data":{"Form":{"composes":null,"displayName":"Form","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"_ref","doclets":[{"tag":"type","value":"{ReactRef}"},{"tag":"alias","value":"ref"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The Form <code class=\"language-text\">ref</code> will be forwarded to the underlying element,\nwhich means, unless it's rendered <code class=\"language-text\">as</code> a composite component,\nit will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}},{"name":"validated","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Mark a form as having been validated. Setting it to <code class=\"language-text\">true</code> will\ntoggle any validation styles on the forms elements.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":{"value":"'form'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}}]},"FormCheck":{"composes":null,"displayName":"FormCheck","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-check'"}],"defaultValue":{"value":"'form-check'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"bsSwitchPrefix","doclets":[{"tag":"default","value":"'form-switch'"}],"defaultValue":{"value":"'form-switch'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>bsPrefix override for the base switch class.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"_ref","doclets":[{"tag":"type","value":"{ReactRef}"},{"tag":"alias","value":"ref"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The FormCheck <code class=\"language-text\">ref</code> will be forwarded to the underlying input element,\nwhich means it will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}},{"name":"as","doclets":[{"tag":"type","value":"{('input'|elementType)}"}],"defaultValue":{"value":"'input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The underlying HTML element to use when rendering the FormCheck.</p>"}},"required":false,"type":{"name":"union","value":[{"name":"'input'"},{"name":"elementType"}],"raw":null}},{"name":"id","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A HTML id attribute, necessary for proper form accessibility.\nAn id is recommended for allowing label clicks to toggle the check control.</p>\n<p>This is <strong>required</strong> when <code class=\"language-text\">type=\"switch\"</code> due to how they are rendered.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"children","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Provide a function child to manually handle the layout of the FormCheck's inner components.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormCheck</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormCheck.Input</span></span> <span class=\"token attr-name\">isInvalid</span> <span class=\"token attr-name\">type</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>radio<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormCheck.Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Allow us to contact you?</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FormCheck.Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Feedback</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>invalid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Yo this is required</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Feedback</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FormCheck</span></span><span class=\"token punctuation\">></span></span></code></pre></div>"}},"required":false,"type":{"name":"node","value":null,"raw":null}},{"name":"inline","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Groups controls horizontally with other <code class=\"language-text\">FormCheck</code>s.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"reverse","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Put your checkboxes, radios, and switches on the opposite side.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"disabled","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Disables the control.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"title","doclets":[],"defaultValue":{"value":"''","computed":false},"description":{"childMarkdownRemark":{"html":"<p><code class=\"language-text\">title</code> attribute for the underlying <code class=\"language-text\">FormCheckLabel</code>.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"label","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Label for the control.</p>"}},"required":false,"type":{"name":"node","value":null,"raw":null}},{"name":"type","doclets":[{"tag":"type","value":"{('radio' | 'checkbox' | 'switch')}"}],"defaultValue":{"value":"'checkbox'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The type of checkable.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'radio'","computed":false},{"value":"'checkbox'","computed":false},{"value":"'switch'","computed":false}],"raw":null}},{"name":"isValid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as valid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"isInvalid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as invalid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"feedbackTooltip","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Display feedback as a tooltip.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"feedback","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A message to display when the input is in a validation state</p>"}},"required":false,"type":{"name":"node","value":null,"raw":null}}]},"FormCheckInput":{"composes":null,"displayName":"FormCheckInput","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-check-input'"}],"defaultValue":{"value":"'form-check-input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":[{"tag":"type","value":"{('input'|elementType)}"}],"defaultValue":{"value":"'input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The underlying HTML element to use when rendering the FormCheckInput.</p>"}},"required":false,"type":{"name":"union","value":[{"name":"'input'"},{"name":"elementType"}],"raw":null}},{"name":"id","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A HTML id attribute, necessary for proper form accessibility.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"type","doclets":[],"defaultValue":{"value":"'checkbox'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The type of checkable.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'radio'","computed":false},{"value":"'checkbox'","computed":false}],"raw":null}},{"name":"isValid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as valid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"isInvalid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as invalid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}}]},"FormCheckLabel":{"composes":null,"displayName":"FormCheckLabel","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'form-check-label'"}],"defaultValue":{"value":"'form-check-label'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"htmlFor","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The HTML for attribute for associating the label with an input</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]}},"pageContext":{"frontmatter":{}}},"staticQueryHashes":["1633686484"]}