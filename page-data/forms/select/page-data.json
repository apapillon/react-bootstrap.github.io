{"componentChunkName":"component---src-pages-forms-select-mdx","path":"/forms/select/","result":{"data":{"Form":{"composes":null,"displayName":"Form","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"_ref","doclets":[{"tag":"type","value":"{ReactRef}"},{"tag":"alias","value":"ref"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The Form <code class=\"language-text\">ref</code> will be forwarded to the underlying element,\nwhich means, unless it's rendered <code class=\"language-text\">as</code> a composite component,\nit will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}},{"name":"validated","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Mark a form as having been validated. Setting it to <code class=\"language-text\">true</code> will\ntoggle any validation styles on the forms elements.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":{"value":"'form'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}}]},"FormSelect":{"composes":null,"displayName":"FormSelect","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"{'form-select'}"}],"defaultValue":{"value":"{'form-select'}","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"size","doclets":[{"tag":"type","value":"{('sm'|'lg')}"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Size variants</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'sm'","computed":false},{"value":"'lg'","computed":false}],"raw":null}},{"name":"htmlSize","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The size attribute of the underlying HTML element.\nSpecifies the number of visible options.</p>"}},"required":false,"type":{"name":"number","value":null,"raw":null}},{"name":"disabled","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Make the control disabled</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"value","doclets":[{"tag":"controllable","value":"onChange"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The <code class=\"language-text\">value</code> attribute of underlying input</p>"}},"required":false,"type":{"name":"union","value":[{"name":"string"},{"name":"arrayOf","value":{"name":"string"}},{"name":"number"}],"raw":null}},{"name":"onChange","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A callback fired when the <code class=\"language-text\">value</code> prop changes</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"isValid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Add \"valid\" validation styles to the control</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"isInvalid","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Add \"invalid\" validation styles to the control and accompanying label</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}}]}},"pageContext":{"frontmatter":{}}},"staticQueryHashes":["1633686484"]}